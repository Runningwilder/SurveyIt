{"version":3,"sources":["Components/TabsComponent.js","Properties/Properties.js","Components/CategoriesComponent.js","Components/HeaderComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CardComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/BaseSurveyComponent.js","Components/InfiniteScroll.js","Components/StatisticsComponent.js","Components/ProfileComponent.js","Components/PostComponent.js","Components/SendFeedbackComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/Pages/SurveyPageComponent.js","Components/PopupComponent.js","index.js"],"names":["useStyles","makeStyles","theme","tabs","backgroundColor","mainBox","indicator","TabsComponent","props","React","useState","Value","value","setValue","classes","gridBody","setGrid","handleChange","event","newValue","activeType","setActiveType","useEffect","children","DefaultType","handleFilter","type","newType","Load","undefined","Grid","container","spacing","alignItems","justify","item","xs","Paper","className","Tabs","TabIndicatorProps","style","selectionFollowsFocus","centered","aria-label","Tab","onClick","e","component","Link","to","label","id","aria-controls","Tooltip","title","IconButton","color","Box","properties","list","padding","checkbox","tag","margin","CategoriesComponent","categories","checked","setCategories","setChecked","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","map","name","Card","CardContent","List","ListItem","ListItemText","primary","Divider","labelId","key","button","currentIndex","indexOf","checkBoxArr","push","splice","body","includes","headers","JSON","stringify","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","logo","maxWidth","toolbar","borderBottom","palette","divider","info","toolbarTitle","flex","marginLeft","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","search","position","borderRadius","shape","fade","common","white","breakpoints","up","width","searchIcon","height","pointerEvents","display","inputRoot","inputInput","paddingLeft","transition","transitions","create","paper","marginTop","flexDirection","avatar","secondary","main","form","submit","LoginComponent","history","useHistory","password","username","jwt","connected","error","state","setState","handleOnChange","target","Container","CssBaseline","Typography","Avatar","variant","noValidate","FormHelperText","TextField","required","fullWidth","autoComplete","autoFocus","onChange","Button","preventDefault","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","errors","serverErrors","clientErrors","succesMessage","countries","setCountries","validate","errs","defaultValue","select","SelectProps","native","max","min","Array","from","el","root","border","outline","borderColor","boxShadow","fontSize","icon","input","popper","fetchedTag","cursor","h1","fontWeight","TagsComponent","tags","setTags","anchorEl","setAnchorEl","fetchedTags","setFetchedTags","open","Boolean","CallBack","handleClose","index","handleClick","Input","currentTarget","some","Popper","onClose","anchorOrigin","vertical","horizontal","transformOrigin","elevation","length","SingleSurveyComponent","voted","surveyJson","answered","options","helperText","HelperText","chart","processDataFunc","console","log","longestOption","elem","sort","e1","e2","choosedOptions","Object","keys","data","layout","hide","tick","x","y","textAnchor","payload","fill","r","dataKey","content","newPayload","count","Answered","getStats","values","FormControl","flipped","onSubmit","submitOptions","handleSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","choosedOption","RadioGroup","Radio","RatingSurveyComponent","duplicate","selectedValues","rows","totalError","Set","val","size","TableContainer","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","oldValues","i","header","expand","transform","duration","shortest","expandOpen","typography","fontFamily","action","CardComponent","userInfo","useContext","UserContext","answeredAmount","answered_amount","likes","expanded","commentError","comment","comments","handleCommentSubmit","surveyId","newComments","date","Date","user_id","getFullYear","getMonth","getDate","Menu","keepMounted","MenuItem","onSurveyDeleteFunc","CardHeader","userId","subheader","textDecoration","Children","child","cloneElement","CardActions","disableSpacing","marginRight","marginBottom","paragraph","clsx","aria-expanded","Collapse","borderTop","in","timeout","unmountOnExit","ListItemAvatar","charAt","Fragment","wordBreak","commentId","handleCommentLike","placeholder","multiline","onBlur","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","image","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","img","InputLabel","htmlFor","c","renderBody","AnsweredAmount","Voted","ElementId","Username","UserName","Likes","Tags","Comments","UserId","LoggedInUserId","LoggedInUsername","Image","Question","SurveyId","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","get","BaseSurveyComponent","validatingFunc","History","surveyBody","params","alt","src","returnBody","InfiniteScroll","setMessageFunc","PopupContext","ref","useRef","Error","hasMore","HasMore","isLoading","IsLoading","surveys","Surveys","Index","ActiveType","load","url","Mode","request","withCredentials","results","new_list","s","SetReloadFunction","window","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","survey","Math","PI","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","dense","CircularProgress","ListItemSecondaryAction","handleOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","markdown","body2","overrides","gutterBottom","h2","h3","h4","p","a","li","withStyles","listItem","Main","posts","md","post","SendFeedbackComponent","feedBack","setFeedBack","sent","setSent","text","MapChart","setContent","markers","data-tip","projection","projectionConfig","zoom","geography","geographies","geo","onMouseEnter","onMouseLeave","default","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","RandomComponent","getRandom","sm","locations","SeparateSurveyComponent","useParams","setSurvey","popup","zIndex","bottom","left","PopupComponent","Slide","direction","mountOnEnter","login","signup","Copyright","href","createContext","App","hidden","setHidden","loggedIn","reload","activeTag","customFunc","setTimeout","handler","setUserInfo","checkLoginStatus","createBrowserHistory","location","pathname","Provider","msg","Fade","path","exact","paddingRight","paddingTop","Hidden","only","top","LoggedIn","SurveyPageComponent","christmasTheme","createMuiTheme","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.fd130869.chunk.js","sourcesContent":["import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n      backgroundColor: \"#33a570\",\r\n    },\r\n    mainBox: {\r\n      backgroundColor: \"#33a570\",\r\n    },\r\n    indicator: {\r\n      backgroundColor: 'white',\r\n    }\r\n}))\r\n\r\nexport default function TabsComponent(props){\r\n    const [value, setValue] = React.useState(props.Value)\r\n    const {tabs} = props\r\n    const classes = useStyles()\r\n    const [gridBody, setGrid] = React.useState(<div>Loading...</div>)\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      setGrid(<div>...Loading</div>)\r\n    };\r\n    const [activeType, setActiveType] = React.useState(\"\")\r\n    \r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n      // setGrid(React.cloneElement(props.children[value], {ActiveType: activeType}))\r\n    }, [value])\r\n    \r\n    React.useEffect(() => {\r\n      setActiveType(props.DefaultType)\r\n    },[props.DefaultType])\r\n\r\n    const handleFilter = type => {\r\n      let newType = activeType === type ? \"\" : type\r\n      setActiveType(newType)\r\n      props.Load(undefined, newType)\r\n    }\r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n    }, [activeType])\r\n\r\n    return <Grid container spacing={3}  alignItems=\"flex-start\" justify = \"flex-start\">\r\n              <Grid  item xs={12}>\r\n                <Paper className = {classes.tabs}>\r\n                  <Tabs TabIndicatorProps={{style: { backgroundColor: 'white'}}}  selectionFollowsFocus centered value={value} aria-label=\"simple tabs example\">\r\n                      <Tab onClick = {e=> handleChange(e, 0)} component = {Link} to = \"top\" label=\"TOP\" id = \"simple-tab-0\" aria-controls = \"simple-tabpanel-0\" />\r\n                      <Tab onClick = {e=> handleChange(e, 1)} component = {Link} to = \"new\" label=\"NEW\" id = \"simple-tab-1\" aria-controls = \"simple-tabpanel-1\"  />\r\n\r\n                      <Tooltip title = \"Единичный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"SINGLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"SINGLE\")}}\r\n                        >\r\n                          <ViewListIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Множественный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"MULTIPLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"MULTIPLE\")}}\r\n                        >\r\n                          <FormatListBulletedIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Рейтинговый выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"RATING\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"RATING\")}}\r\n                        >\r\n                          <AppsIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid  item xs={12} id = \"surveys\">\r\n                <Paper  className = {classes.mainBox}>\r\n                  <Box  >\r\n                    {gridBody}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n}","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     // repo: \"/SurveyIt\" // For redirecting issues at GitHub Pages\r\n     repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    padding: 0\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 10,\r\n    color: \"#2f4f4f\",\r\n    padding: 2,\r\n    width: \"max-content\"\r\n  },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.Load(undefined, \"\")\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card>\r\n      <CardContent>\r\n        <List component=\"nav\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Категории\" />\r\n          </ListItem>\r\n          <Divider />\r\n          {categories.map(category => {\r\n            const labelId = `checkbox-list-label-${category.name}`\r\n            return (\r\n              <ListItem\r\n                className={classes.list}\r\n                key={`category-${category.id}`}\r\n                button\r\n                onClick={handleToggle(category.name)}>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    className={classes.checkbox}\r\n                    edge=\"start\"\r\n                    checked={checked.indexOf(category.name) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n                <ListItemText primary={category.name} />\r\n              </ListItem>)\r\n          }\r\n          )}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Link } from 'react-router-dom'\r\nimport AccountIconComponent from './AccountIconComponent'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"40px\",\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.info\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    color: 'black'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 10,\r\n    //width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   width: '12ch',\r\n    //   '&:focus': {\r\n    //     width: '100ch',\r\n    //   },\r\n    // },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles(props);\r\n  const { title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <a href = \"/about.html\">About</a> */}\r\n\r\n      <AppBar position=\"static\" className={classes.toolbar}>\r\n        <Toolbar >\r\n          <Link to={`${properties.repo}/home`}>\r\n            <img src=\"images/logo.png\" alt=\"\" className={classes.logo}></img>\r\n          </Link>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link to={`${properties.repo}/home`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Домой\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/news`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Новости\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/donate`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Помочь проекту\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/about`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Про сайт\r\n            </Link>\r\n          </Typography>\r\n\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          {props.state.loggedIn ? <>\r\n            <AccountIconComponent {...props}></AccountIconComponent>\r\n          </>\r\n            :\r\n            <>\r\n              <Link to={`${properties.repo}/login`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"text\" size=\"small\">\r\n                  Login\r\n            </Button>\r\n              </Link>\r\n              <Link to={`${properties.repo}/register`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  <Typography noWrap>Sign up</Typography>\r\n                </Button>\r\n              </Link>\r\n            </>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`, \r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\"username\":state.username,\"password\":state.password}),\r\n      redirect: 'follow',\r\n      credentials: 'include'\r\n    })\r\n      .then(response => {\r\n          if (response.status === 204){\r\n            setState({...state, error: true})\r\n          }\r\n          else if (response.status === 200){\r\n            props.handleLoggedIn()\r\n            history.push(`${properties.repo}/home`)\r\n          }\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <FormHelperText error = {true}>\r\n            {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n          </FormHelperText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value = {state.username}\r\n            onChange = {handleOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value = {state.password}\r\n            onChange = {handleOnChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick = {handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          <Grid container>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Link to = {`${properties.repo}/register`} variant=\"body2\">\r\n                Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name : '',\r\n    password : '',\r\n    email : '',\r\n    matchingPassword : '',\r\n    gender : '',\r\n    age : '',\r\n    country : '',\r\n    errors : {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`, \r\n    {\r\n      method: 'GET',\r\n      redirect: 'follow',\r\n      // credentials: 'include'\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200){\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(result => {\r\n      if (result){\r\n        setCountries([{name : \"\", id : 0}, ...result])\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0){\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150){\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\"){\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\"){\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    \r\n    fetch(`${properties.address}/signUp`, \r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        \"name\": state.name,\r\n        \"password\":state.password,\r\n        \"email\": state.email,\r\n        \"matchingPassword\": state.matchingPassword,\r\n        \"country\": state.country,\r\n        \"age\": state.age,\r\n        \"gender\": state.gender,\r\n      }),\r\n      redirect: 'follow',\r\n      credentials: 'include'\r\n    })\r\n      .then(response => {\r\n        if (response.status === 400){\r\n          response.json().then(result => {\r\n\r\n            setState({...state, errors: {\r\n              ...state.errors,\r\n              serverErrors: result,\r\n              clientErrors: validate()\r\n            }})\r\n          })\r\n        }\r\n        else if (response.status === 200){\r\n          setState({\r\n            ...state, \r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"})\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Typography component = \"h2\">\r\n          {state.succesMessage}\r\n        </Typography>\r\n        <form className={classes.form} noValidate >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"login\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Login\"\r\n                defaultValue = {state.name}\r\n                onChange = {handleOnChange}\r\n                // autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"gender\"\r\n                select\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"gender\"\r\n                label=\"Пол\"\r\n                defaultValue = {\"none\"}\r\n                onChange = {handleOnChange}\r\n                SelectProps = {{native : true}}\r\n              >\r\n                 <option value = \"\" ></option>\r\n                 <option value = \"male\" >Мужской</option>\r\n                 <option value = \"female\" >Женский</option>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                inputProps = {{\r\n                  max: 150,\r\n                  min: 0\r\n                }}\r\n                name=\"age\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"age\"\r\n                type = \"number\"\r\n                label=\"Возраст\"\r\n                defaultValue = {state.age}\r\n                onChange = {handleOnChange}\r\n                // autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                name=\"country\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"country\"\r\n                label=\"Страна\"\r\n                // native\r\n                // defaultValue = {state.country}\r\n                onChange = {handleOnChange}\r\n                SelectProps = {{native : true}}\r\n                // autoFocus\r\n              >\r\n                 {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country => \r\n                    <option key = {`country-${country.id}`} value = {country.name} >{country.name}</option>\r\n                  )}\r\n                {/* </FixedSizeList> */}\r\n                \r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                defaultValue = {state.email}\r\n                onChange = {handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                defaultValue = {state.password}\r\n                onChange = {e => {handleOnChange(e); }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"matchingPassword\"\r\n                label=\"Confirm your password\"\r\n                type=\"password\"\r\n                id=\"confirm_password\"\r\n                autoComplete=\"current-password\"\r\n                defaultValue = {state.matchingPassword}\r\n                onChange = {e => {handleOnChange(e); }}\r\n              />\r\n              <FormHelperText error = {true}>\r\n                {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n              </FormHelperText>\r\n             \r\n              {Array.from(state.errors.clientErrors).map(el => \r\n                <FormHelperText error = {true}>\r\n                  {el}\r\n                </FormHelperText>\r\n              )}\r\n              {Array.from(state.errors.serverErrors).map(el => \r\n                <FormHelperText error = {true}>\r\n                  {el}\r\n                </FormHelperText>\r\n              )}\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick = {handleSubmit}\r\n          \r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Уже есть аккаунт? Войти\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    // let arr = props.surveyJson.options.map(option => {\r\n    //   return {\r\n    //     name: option,\r\n    //     value: result.filter(vote => vote.options.includes(option)).length\r\n    //   }\r\n    // }).sort((a, b) => a.value - b.value)\r\n\r\n    console.log(result)\r\n\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n    console.log(state.options)\r\n  }\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      console.log(\"choose smth\")\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n    let chart = <BarChart width={14 * longestOption + 200} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n            fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, choosedOption: event.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n\r\n        {props.surveyJson.options.map((option) =>\r\n          <FormControlLabel\r\n            value={option}\r\n            control={<Radio />}\r\n            label={option}\r\n          />\r\n        )}\r\n      </RadioGroup>}\r\n      {props.Answered && state.chart}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>}\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n  }\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered && <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>}\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentError: \"\",\r\n    comment: \"\",\r\n    comments: props.surveyJson.comments,\r\n  })\r\n\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = () => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n\r\n  const handleLike = e => {\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const handleCommentSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    if (state.comment.length < 5 || state.comment.length > 200) {\r\n      setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n      return\r\n    }\r\n    setState({ ...state, commentError: \"\" })\r\n\r\n    fetch(`${properties.address}/addComment`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          content: state.comment,\r\n          surveyId: props.surveyJson.id\r\n        })\r\n      })\r\n      .then(response => {\r\n        if (response.status == 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        if (!result)\r\n          return\r\n        console.log(result)\r\n        let newComments = state.comments\r\n        let date = new Date(result.date)\r\n        newComments.push({\r\n          \"content\": state.comment,\r\n          \"likes\": 0,\r\n          \"user_id\": result.user_id,\r\n          \"username\": \"admin\",\r\n          \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n          \"id\": result.id,\r\n        })\r\n\r\n        setState({ ...state, comments: newComments })\r\n      })\r\n\r\n  }\r\n\r\n  const handleCommentLike = comment => {\r\n    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n    comment.voted = !comment.voted\r\n    setState({ ...state, comments: state.comments })\r\n\r\n    fetch(`${properties.address}/commentLike`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ commentId: comment.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status == 200) {\r\n          return response.json()\r\n        }\r\n      }).then(result => {\r\n        if (result) {\r\n          // new_comments = comments.find(comment -> comment.id === commentId)\r\n          comment.likes = result.likes\r\n          comment.voted = result.voted\r\n          setState({ ...state, comments: state.comments })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDeleteComment = commentId => {\r\n    fetch(`${properties.address}/deleteComment`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          commentId: commentId\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n          setState({ ...state, comments: newComments })\r\n        }\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"8\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.comments.length})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n\r\n\r\n\r\n\r\n      <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={state.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <List>\r\n            {state.comments.map(comment => <>\r\n              <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                    {comment.username && comment.username.charAt(0)}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n\r\n                <ListItemText\r\n                  primary={<>\r\n                    {comment.username + \"  \"}\r\n                    <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                      {comment.date}\r\n                    </Typography>\r\n                  </>}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          style={{ display: \"inline\" }}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {comment.content}\r\n                        </Typography>\r\n                        <div style={{ marginLeft: \"auto\" }}>\r\n                          {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                          {<IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>}\r\n                          <Typography component=\"span\">\r\n                            {comment.likes != 0 && comment.likes}\r\n                          </Typography>\r\n\r\n                          <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                            <ThumbUpAltIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </>)}\r\n          </List>\r\n          <FormControl style={{ display: \"flex\" }}>\r\n            <form onSubmit={handleCommentSubmit}>\r\n              <TextField\r\n                style={{ display: \"flex\" }}\r\n                id=\"standard-textarea\"\r\n                label=\"Комментировать\"\r\n                placeholder=\"\"\r\n                multiline\r\n                onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n              />\r\n              {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n              <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n            </form>\r\n          </FormControl>\r\n        </CardContent>\r\n      </Collapse>\r\n\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result)\r\n            history.push('/new')\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'multiple':\r\n      case 'single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('single')} color={state.type === 'single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('multiple')} color={state.type === 'multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('rating')} color={state.type === 'rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n\r\n  const history = useHistory()\r\n  // const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered\r\n  })\r\n  const img = props.surveyJson.image;\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    e.preventDefault()\r\n\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n\r\n  // handleClose = () => {\r\n  //   this.setState({ open: false })\r\n  // }\r\n  // handleOpen = surveyToDelete => {\r\n  //   this.setState({ open: true })\r\n  // }\r\n\r\n  const returnBody = e => {\r\n    let surveyBody\r\n    let params = { \"getStats\": getStats, \"Answered\": state.answered, \"handleSubmit\": handleSubmit, \"surveyJson\": props.surveyJson, \"HelperText\": state.helperText, \"History\": history }\r\n    switch (props.surveyJson.type) {\r\n      case \"Single\":\r\n        surveyBody = <SingleSurveyComponent props={params} />\r\n        break\r\n      case \"Multiple\":\r\n        surveyBody = <MultipleSurveyComponent props={params} />\r\n        break\r\n      case \"Rating\":\r\n        surveyBody = <RatingSurveyComponent props={params} />\r\n        // body = \"404\"\r\n        break\r\n      default:\r\n        surveyBody = <div>Ой, с этим опросом что-то не так</div>\r\n    }\r\n    console.log('setting answered to ' + state.answered)\r\n    let baseSurvey = <CardComponent\r\n      onSurveyDeleteFunc={props.onSurveyDeleteFunc}\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      LoggedInUserId={props.UserId}\r\n      LoggedInUsername={props.UserName}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {surveyBody}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <img alt=\"\" style={{ width: \"100%\" }} src={this.state.img}></img>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </CardComponent >\r\n    return baseSurvey\r\n  }\r\n  return <>\r\n    {returnBody()}\r\n  </>\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const history = useHistory();\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: props.Error,\r\n    hasMore: props.HasMore,\r\n    isLoading: props.IsLoading,\r\n    surveys: props.Surveys,\r\n    index: props.Index,\r\n    activeType: props.ActiveType\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    setMessageFunc(\"Удалено :)\")\r\n  }\r\n  const load = (tag, type) => {\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n\r\n    if (props.Mode)\r\n      request\r\n        .get(url)\r\n        .withCredentials()\r\n        .then((results) => {\r\n          const new_list = results.body.map(s =>\r\n            <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n          setState({\r\n            ...state,\r\n            hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n            isLoading: false,\r\n            surveys: [\r\n              ...state.surveys,\r\n              ...new_list\r\n            ],\r\n            index: state.index + 1\r\n          })\r\n        })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (error || isLoading || !hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  const {\r\n    error,\r\n    hasMore,\r\n    isLoading,\r\n  } = state;\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {error &&\r\n        <div style={{ color: '#900' }}>\r\n          {error}\r\n        </div>\r\n      }\r\n      {isLoading &&\r\n        <div>Loading...</div>\r\n      }\r\n      {!hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PieChart, Pie, Cell} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n// const bar_data = [\r\n//   {\r\n//     name: 'Tom Cruise', value: 20,\r\n//   },\r\n//   {\r\n//     name: 'Will Smith', value: 80,\r\n//   },\r\n//   {\r\n//     name: 'Brad Pitt', value: 80,\r\n//   },\r\n// ];\r\n\r\n\r\n// const multiple_data = {\r\n//   votes: [\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'JustUser'\r\n//       },\r\n//       options: [\"Fish\", \"Meat\", \"Vegetables\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 55,\r\n//         country: 'Ukraine',\r\n//         username: 'Sabrina'\r\n//       },\r\n//       options: [\"Fish\", \"Fruit\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'Frank'\r\n//       },\r\n//       options: [\"Meat\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 45,\r\n//         country: 'Ukraine',\r\n//         username: 'Joshua'\r\n//       },\r\n//       options: [\"Meat\",\"Alcohol\"]\r\n//     },\r\n//   ]\r\n// }\r\n// const single_data = {\r\n//     votes: [\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 20,\r\n//                 country: 'Ukraine',\r\n//                 username: 'JustUser'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 23,\r\n//                 country: 'UK',\r\n//                 username: 'Drago777'\r\n//             },\r\n//             option: \"Will Smith\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 18,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 54,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 42,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 33,\r\n//                 country: 'Russia',\r\n//                 username: 'Carol'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'female',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'Rachel'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'John'\r\n//             },\r\n//             option: \"Chriss Pratt\"\r\n//         },\r\n//     ]\r\n// }\r\n\r\nconst rating_data = [\r\n  {\r\n      user: {\r\n          sex: 'male',\r\n          age: 32,\r\n          country: 'Russia',\r\n          username: 'John'\r\n      },\r\n      rowscolumns: [\r\n        \"Халк\",\r\n        \"Железяка\",\r\n        \"Молоток с Асгарда\",\r\n      ]\r\n    },\r\n    {\r\n        user: {\r\n            sex: 'male',\r\n            age: 32,\r\n            country: 'Russia',\r\n            username: 'John'\r\n        },\r\n        rowscolumns: [\r\n          \"Халк\",\r\n          \"Молоток с Асгарда\",\r\n          \"Железяка\",\r\n        ]\r\n      },\r\n      {\r\n          user: {\r\n              sex: 'male',\r\n              age: 32,\r\n              country: 'Russia',\r\n              username: 'John'\r\n          },\r\n          rowscolumns: [\r\n            \"Халк\",\r\n            \"Молоток с Асгарда\",\r\n            \"Железяка\",\r\n          ]\r\n        },\r\n        {\r\n            user: {\r\n                sex: 'male',\r\n                age: 32,\r\n                country: 'Russia',\r\n                username: 'John'\r\n            },\r\n            rowscolumns: [\r\n              \"Молоток с Асгарда\",\r\n              \"Железяка\",\r\n              \"Халк\",\r\n            ]\r\n          },\r\n          {\r\n              user: {\r\n                  sex: 'male',\r\n                  age: 32,\r\n                  country: 'Russia',\r\n                  username: 'John'\r\n              },\r\n              rowscolumns: [\r\n                \"Молоток с Асгарда\",\r\n                \"Железяка\",\r\n                \"Халк\",\r\n              ]\r\n            },\r\n            {\r\n                user: {\r\n                    sex: 'male',\r\n                    age: 32,\r\n                    country: 'Russia',\r\n                    username: 'John'\r\n                },\r\n                rowscolumns: [\r\n                  \"Молоток с Асгарда\",\r\n                  \"Халк\",\r\n                  \"Железяка\",\r\n                ]\r\n              },\r\n              {\r\n                  user: {\r\n                      sex: 'male',\r\n                      age: 32,\r\n                      country: 'Russia',\r\n                      username: 'John'\r\n                  },\r\n                  rowscolumns: [\r\n                    \"Молоток с Асгарда\",\r\n                    \"Халк\",\r\n                    \"Железяка\",\r\n                  ]\r\n                },\r\n                {\r\n                    user: {\r\n                        sex: 'male',\r\n                        age: 32,\r\n                        country: 'Russia',\r\n                        username: 'John'\r\n                    },\r\n                    rowscolumns: [\r\n                      \"Железяка\",\r\n                      \"Молоток с Асгарда\",\r\n                      \"Халк\",\r\n                    ]\r\n                  },\r\n                  {\r\n                      user: {\r\n                          sex: 'male',\r\n                          age: 32,\r\n                          country: 'Russia',\r\n                          username: 'John'\r\n                      },\r\n                      rowscolumns: [\r\n                        \"Железяка\",\r\n                        \"Молоток с Асгарда\",\r\n                        \"Халк\",\r\n                      ]\r\n                    },\r\n                    {\r\n                        user: {\r\n                            sex: 'male',\r\n                            age: 32,\r\n                            country: 'Russia',\r\n                            username: 'John'\r\n                        },\r\n                        rowscolumns: [\r\n                          \"Железяка\",\r\n                          \"Молоток с Асгарда\",\r\n                          \"Халк\",\r\n                        ]\r\n                      },\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 40,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //     \"Молоток с Асгарда\"\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 16,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 32,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n]\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: 'Мужчины',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Женщины',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Все',\r\n  }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"75%\",\r\n        // paddingLeft: 100,\r\n        // paddingRight: 20,\r\n        marginLeft: 40\r\n    }\r\n});\r\n\r\nconst renderCustomizedLabel = (props) => {\r\n    \r\n    const {cx, cy, midAngle, innerRadius, outerRadius, percent, value} = props\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    const option = props.name\r\n\r\n    return (<>\r\n    {value === 0 ? '' : \r\n    <>\r\n      <text x={x} y={y} fontSize = {14} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n      <text \r\n        x = {cx + (outerRadius + 30) * Math.cos(-midAngle * RADIAN)} \r\n        y = {cy + (outerRadius + 30) * Math.sin(-midAngle * RADIAN)}>\r\n        {option}\r\n      </text>\r\n      </>\r\n    }\r\n    </>);\r\n};\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n\r\nexport default function StatisticsComponent(props){\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([0,99]);\r\n    const [genderValue, setGenderValue] = React.useState(2);\r\n    const [fetchedData, setFetchedData] = React.useState([])\r\n    const [data, setData] = React.useState([])\r\n    const [barData, setBarData] = React.useState([])\r\n    const [ratingData, setRatingData] = React.useState([])\r\n    const [filteredDataLength, setFilteredDataLength] = React.useState(0)\r\n    const [legend, setLegend] = React.useState({})\r\n    \r\n    const [barOptions, setBarOptions] = React.useState([]) // For multiple survey\r\n\r\n    const renderLegend = (props) => {\r\n      const { payload } = props;\r\n    \r\n      return (\r\n        Object.keys(legend).map(key => \r\n          <text  style = {{textAlign: \"center\"}}>\r\n            <text style = {{fontWeight: \"bold\", color: \"steelblue\"}}>{key}</text> : \r\n            {/* {legend[key].map(item => <text style = {{fontStyle: \"italic\"}}> {item} </text>)} */}\r\n            <text style = {{fontStyle: \"italic\"}}> {legend[key].join(\" + \")} </text>\r\n          </text>\r\n        )\r\n      );\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   fetch(`${properties.address}/getStatistics?surveyId=${props.SurveyId}`, \r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include'\r\n    //   })\r\n    //   .then(response => {\r\n    //       if (response.status === 200){\r\n    //         response.json().then(result => {\r\n    //           setFetchedData(result)\r\n    //         })\r\n    //       }\r\n    //     }\r\n    //   )\r\n    // }, [props.SurveyId])\r\n\r\n    React.useEffect(() => {\r\n      if (fetchedData.length === 0)\r\n        return\r\n      // Filtering by gender and age\r\n      let gender = genderValue === 0 ? 'male' : genderValue === 1 ? 'female' : ''\r\n      let filtered_data = fetchedData.filter(elem => \r\n          (elem.user.age > value[0] && elem.user.age < value[1])\r\n          && ((gender !== '' && elem.user.sex === gender) || (gender === ''))\r\n      )\r\n      setFilteredDataLength(filtered_data.length)\r\n\r\n      // Setting data for Pie Chart (Single and Multiple)\r\n      let arr = []\r\n      switch (props.Type){\r\n        case \"Multiple\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.options.includes(option)).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        case \"Single\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.option === option).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        default:\r\n      }\r\n      setData(arr)\r\n      \r\n      // Setting data for Bar Chart (Multiple)\r\n      if (props.Type === \"Multiple\"){\r\n        let bar_arr = props.Options.map(option => {\r\n          return {\r\n            name: option,\r\n            value: filtered_data.filter(elem => elem.options.includes(option)).length / filtered_data.length * 100\r\n          }\r\n        }).sort((a,b) => b.value - a.value)\r\n        setBarData(bar_arr)\r\n      }\r\n\r\n      // Setting data for Bar Chart (Rating)\r\n      if (props.Type === \"Rating\" && filtered_data.length !== 0){\r\n        let rating_arr = []\r\n\r\n        let accepted = []\r\n        let rows = [...props.Rows]\r\n        let index = 0\r\n        let max = 0\r\n        let max_arr = []\r\n        let bar = {}\r\n        let rating = {}\r\n\r\n        while (rows.length !== 0){\r\n          bar = {}\r\n          rows.forEach(row => {\r\n            bar[row] = filtered_data.filter(rd => rd.rowscolumns[index] === row).length / (filtered_data.length) * 100\r\n          })\r\n          let sum = Object.values(bar).reduce((a,b) => a + b, 0)\r\n          max = Math.max(...Object.values(bar))\r\n\r\n          max_arr = Object.keys(bar).filter(key => bar[key] === max)\r\n          accepted.push(...max_arr)\r\n          rating[props.Columns[index]] = [...max_arr]\r\n          let obj = {}\r\n          obj.name = props.Columns[index]\r\n          rows.forEach(elem => {\r\n            if (bar[elem] !== 0)\r\n              obj[elem] = bar[elem] / sum * 100\r\n          })\r\n          rating_arr.push(obj)\r\n\r\n          index++\r\n          rows = props.Rows.filter(row => !accepted.includes(row))\r\n        }\r\n        setLegend(rating)\r\n\r\n        setRatingData(rating_arr)\r\n      }\r\n\r\n    }, [fetchedData, value, genderValue])\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleGenderChange = (event, newValue) => {\r\n      setGenderValue(newValue)\r\n    }\r\n\r\n    return (<>\r\n    <Grid container>\r\n    <Grid container>\r\n        <Grid item xs = {7}>\r\n          <Typography color = 'primary'>\r\n            {filteredDataLength} голоса\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              Возраст\r\n            </Typography>\r\n            <Slider\r\n              value={value}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {99}\r\n            />\r\n            <Slider\r\n              value={genderValue}\r\n              onChange={handleGenderChange}\r\n              valueLabelDisplay=\"off\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {2}\r\n              marks = {marks}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs = {5}>\r\n          {(props.Type === \"Multiple\" || props.Type === \"Single\") && \r\n            <PieChart width={200} height={200}>\r\n            <Pie\r\n              data={data}\r\n              cx='50%'\r\n              cy='50%'\r\n              labelLine={true}\r\n              label={renderCustomizedLabel}\r\n              outerRadius={45}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {\r\n                data.map((entry, index) => \r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                )\r\n              }\r\n            </Pie>\r\n          </PieChart>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs = {12} alignItems = 'center' justify = 'center'>\r\n            \r\n          {props.Type === \"Multiple\" && \r\n          <BarChart\r\n            width={400}\r\n            height={200}\r\n            data={barData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain = {[0, 100]} />\r\n            <Tooltip />\r\n            <Legend formatter = {() => `% проголосовавших за категорию`}/>\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n          </BarChart>}\r\n          {props.Type === \"Rating\" && \r\n          <>\r\n          <BarChart\r\n            width={500}\r\n            height={200}\r\n            data={ratingData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend \r\n              content={renderLegend} \r\n              wrapperStyle = {{textAlign: \"center\"}}\r\n            />\r\n            {props.Rows.map((row,index) => \r\n              <Bar dataKey = {row} stackId=\"a\" fill={COLORS[index % COLORS.length]} />\r\n            )}\r\n          </BarChart>\r\n          </>}\r\n      </Grid>\r\n    </Grid>\r\n    </>)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n// import Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\nconst styles = (theme) => ({\r\n  listItem: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n});\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h5',\r\n      },\r\n    },\r\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\r\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\r\n    h4: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\r\n    },\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Divider />\r\n      {posts.map((post) =>\r\n        <>\r\n          <ReactMarkdown className={classes.markdown} options={options}>\r\n            {post}\r\n          </ReactMarkdown>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function SendFeedbackComponent(props){\r\n    \r\n  const [feedBack, setFeedBack] = React.useState(\"\")\r\n  const [sent, setSent] = React.useState(false)\r\n\r\n  const handleFeedback = e => {\r\n    if (feedBack !== \"\"){\r\n      fetch(`${properties.address}/sendFeedback`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({text : feedBack}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n          if (response.status === 200){\r\n                setSent(true)\r\n                setFeedBack(\"\")\r\n          }\r\n      })\r\n    }\r\n  }\r\n\r\n    return (<>\r\n        {!sent && <TextField multiline onBlur = { e => setFeedBack(e.target.value)}/>}\r\n        <Button onClick = {sent === false ? handleFeedback : ()=>{} }>{sent === false ? \"Отправить\" : \"Отправлено\"}</Button>\r\n    </>)\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\" width=\"1000\" height=\"400\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={1}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    const getRandom = e => {\r\n        fetch(`${properties.address}/getRandom`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }\r\n    React.useEffect(() => {\r\n        getRandom()\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        setMessageFunc(\"Удалено :)\")\r\n        setState({ ...state, isLoading: true }); \r\n        getRandom()\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={3} >\r\n                </Grid>\r\n                <Grid item sm={6} >\r\n                    {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n                    {state.survey == null && \"Не найдено голосований :(\"}\r\n                    <button onClick={() => { setState({ ...state, isLoading: true }); getRandom() }}>press me</button>\r\n                    <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n                        <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={3} >\r\n                    <CategoriesComponent />\r\n                </Grid>\r\n            </Grid>\r\n        </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n    </>\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n// import Logo from './logo'\r\n\r\n// import AddSingleComponent from \"./Components/AddSingleComponent\"\r\n// import AddRatingComponent from \"./Components/AddRatingComponent\"\r\n// import AddMultipleComponent from \"./Components/AddMultipleComponent\"\r\n// import SingleSurveyComponent from \"./Components/SingleSurveyComponent\"\r\n// import MultipleSurveyComponent from \"./Components/MultipleSurveyComponent\"\r\n// import RatingSurveyComponent from \"./Components/RatingSurveyComponent\"\r\n// import CardComponent from './Components/CardComponent'\r\n// import GridComponent from './Components/GridComponent'\r\nimport TabPanelComponent from './Components/TabPanelComponent'\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport HeaderComponent from './Components/HeaderComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\r\n// import history from './Components/history';\r\nimport InfiniteScroll from './Components/InfiniteScroll'\r\nimport StatisticsComponent from './Components/StatisticsComponent'\r\nimport TestComponent from './Components/TestComponent'\r\nimport CardComponent from \"./Components/CardComponent\";\r\nimport RatingSurveyComponent from \"./Components/RatingSurveyComponent\";\r\nimport TagsComponent from \"./Components/TagsComponent\";\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport PostComponent from \"./Components/PostComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Container, Paper, TextField, Link } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MarkdownWrapper from \"./Components/MarkdownWrapper\";\r\nimport Button from '@material-ui/core/Button';\r\nimport SendFeedbackComponent from \"./Components/SendFeedbackComponent\";\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { orange, green } from '@material-ui/core/colors';\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst header = <HeaderComponent></HeaderComponent>\r\n\r\nconst login = <LoginComponent></LoginComponent>\r\nconst signup = <SignUpComponent></SignUpComponent>\r\nconst stats = <StatisticsComponent SurveyId={155}></StatisticsComponent>\r\n\r\n\r\n\r\nconst topTab = <InfiniteScroll Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nfunction App() {\r\n\r\n  const about = './Content/about.md'\r\n\r\n  // fetch(about).then(elem => elem.text())\r\n  const [message, setMessage] = React.useState(\"\")\r\n  const [hidden, setHidden] = React.useState(true)\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    reload: () => { },\r\n    activeType: \"\",\r\n    activeTag: \"\"\r\n  })\r\n\r\n  // This function executes when categoriesComponent is triggered. It fetches new data\r\n  // depending on categories and sets Type of surveys filter to default (empty string \"\")\r\n  // thus updating child TabsComponent and erasing filters\r\n  const customFunc = (tag, type) => {\r\n    // console.log('reloading...' + \"tag = \" + tag + \" type = \" + type)\r\n    setState({ ...state, activeType: type })\r\n    setTimeout(() => { state.reload && state.reload(tag, type) }, 1000)\r\n  }\r\n\r\n  const handler = load => {\r\n    // console.log('setting reload to ' + load)\r\n    setState({ ...state, reload: load })\r\n  }\r\n  const [userInfo, setUserInfo] = React.useState({\r\n    username: null,\r\n    userId: null,\r\n    loggedIn: false\r\n  })\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setUserInfo({\r\n            ...userInfo,\r\n            username: result.username,\r\n            userId: result.user_id,\r\n            loggedIn: true\r\n          })\r\n        }\r\n      })\r\n  }\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n  // const checkLoginStatus = e => {\r\n  //   fetch(`${properties.address}/logged_in`,\r\n  //     {\r\n  //       method: 'GET',\r\n  //       credentials: 'include',\r\n  //     })\r\n  //     .then(response => {\r\n  //       if (response.status === 200 && !state.loggedIn) {\r\n  //         return response.json()\r\n  //       }\r\n  //     })\r\n  //     .then(result => {\r\n  //       if (result)\r\n  //         setState({\r\n  //           ...state,\r\n  //           loggedIn: true,\r\n  //           username: result.username,\r\n  //           userId: result.user_id,\r\n  //         })\r\n  //     })\r\n  // }\r\n\r\n  // React.useEffect(() => {\r\n  //   // console.log(\"reload \" + state.reload)\r\n  //   checkLoginStatus()\r\n  // }, [state.reload])\r\n\r\n  // const handleLoggedIn = e => {\r\n  //   checkLoginStatus()\r\n  // }\r\n  const history = createBrowserHistory()\r\n  let value = history.location.pathname === \"/new\" || history.location.pathname === \"/home\" ? 1 : 0\r\n\r\n  const setMessageFunc = msg => {\r\n    setMessage(msg)\r\n    setHidden(false)\r\n    setTimeout(() => {\r\n      setHidden(true)\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <UserContext.Provider value={userInfo}>\r\n      <PopupContext.Provider value={setMessageFunc}>\r\n        <Router>\r\n          <Box>\r\n            {/* <Box><HeaderComponent {...header} state={state} setState={setState}></HeaderComponent></Box> */}\r\n            <Fade in={!hidden} timeout={500}>\r\n              <div>\r\n                <PopupComponent message={message} />\r\n              </div>\r\n            </Fade>\r\n            {/* {!hidden && <PopupComponent message={message} />} */}\r\n\r\n            <Route path={`${properties.repo}/random`}>\r\n              <RandomPageComponent />\r\n            </Route>\r\n\r\n            <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}>\r\n              <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={8} >\r\n                    <TabsComponent DefaultType={state.activeType} Load={customFunc} Value={value}>\r\n                      <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                      <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"New\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                    </TabsComponent>\r\n                  </Grid>\r\n                  <Grid item sm={4} style={{ paddingRight: \"10px\" }}>\r\n                    <Hidden only=\"xs\">\r\n                      <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                        <CategoriesComponent LoggedIn={state.loggedIn} Load={customFunc}></CategoriesComponent>\r\n                      </Box>\r\n                    </Hidden>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Route>\r\n            <Route exact={true} path={`${properties.repo}/login`}>\r\n              <LoginComponent {...login} handleLoggedIn={checkLoginStatus}></LoginComponent>\r\n            </Route>\r\n            <Route path={`${properties.repo}/createSurvey`}>\r\n              <AddSurveyComponent UserName={state.username} UserId={state.userId} />\r\n            </Route>\r\n            <Route path={`${properties.repo}/profile`}>\r\n              <ProfileComponent Username={state.username} userId={state.userId}></ProfileComponent>\r\n            </Route>\r\n            <Route path={`${properties.repo}/register`}>\r\n              {signup}\r\n            </Route>\r\n            <Route path={`${properties.repo}/registrationConfirm`}>\r\n              <ConfirmRegistration></ConfirmRegistration>\r\n            </Route>\r\n            <Route path={`${properties.repo}/statistics`}>\r\n              <CardComponent Voted={true} Answered={true}>\r\n                <RatingSurveyComponent\r\n                  Voted={true}\r\n                  Question=\"Кто круче?\"\r\n                  Rows={[\"Железяка\", \"Халк\", \"Молоток с Асгарда\"]}\r\n                  Columns={[\"1\", \"2\", \"3\"]}\r\n                  SurveyId={76}\r\n                />\r\n              </CardComponent>\r\n            </Route>\r\n            <Route path={`${properties.repo}/survey/:id`}>\r\n              <SurveyPageComponent\r\n                LoggedInUserId={state.user_id}\r\n                LoggedInUsername={state.username}\r\n              />\r\n            </Route>\r\n            <Route path={`${properties.repo}/news`}>\r\n              <PostComponent title=\"Добро пожаловать\" posts={[`\r\n#### 4 июня, 2020\r\n\r\nПервая версия сайта \r\n\r\n- 3 вида опросов (одиночный, множественный, рейтинговый)\r\n- Вход, выход\r\n- Комментарии\r\n- Категории\r\n- Теги\r\n- Фильтры\r\n- Статистика\r\n- Страница профиля с минимальным функционалом\r\n          `]} ></PostComponent>\r\n            </Route>\r\n            <Route path={`${properties.repo}/donate`}>\r\n              <PostComponent title=\"Помощь проекту\" posts={[`\r\nДальнейшая судьба проекта зависит только от вас. Если вам нравится проект вы можете поддержать его здесь :\r\n\r\n- Patreon - [https://www.patreon.com/blogger2015](https://www.patreon.com/blogger2015)\r\n- Яндекс Кошелек - 410013995640387\r\n\r\n---\r\n\r\n###**Форма обратной связи**\r\n\r\n_Здесь можно задать любой вопрос касающийся проекта, оставить пожелания_\r\n_или просто написать как вы поживаете, есть большая вероятность, что_\r\n_я это прочту :) (только для зарегистрированных пользователей)_\r\n\r\n          `]} ></PostComponent>\r\n              <SendFeedbackComponent />\r\n\r\n            </Route>\r\n            <Route path={`${properties.repo}/about`}>\r\n              {/* <CssBaseline /> */}\r\n              <Container maxWidth='md'>\r\n                <Paper style={{ padding: 10 }} elevation={2}>\r\n                  <ReactMarkdown options={options}>\r\n                    {`\r\n###_Для чего нужен сайт?_\r\n\r\n---\r\n\r\nОсновная идея это получить ответ на самые неожиданные вопросы вроде \r\n**_Куда лучше поехать - на Мальдивы или Бали?_** или \r\n**_Кто круче в роли Бетмена - Кристиан Бэйл или Бен Аффлек_** ну или\r\n**_Оцените картину от 1 до 5_**.\r\nКак видно выбор вопросов ничем не ограничен\r\n\r\n###_Кому нужен сайт?_\r\n\r\n---\r\n\r\nЕсли вы это читаете, то есть шанс, что имеено вам :)\r\n\r\n###_Как создать опрос?_\r\n\r\n---\r\n\r\nЧтобы добавить опрос нужно [зарегистрироваться](/register), перейти по [ссылке](/createSurvey) \r\nи заполнить форму.\r\n\r\n###_Какие опросы можно создавать?_\r\n\r\n---\r\n\r\nНа данный момент существует возможность создания трех видов опросов \r\n\r\n1. Обычный (одиночный) опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={349}\r\n  CommentsSection = {false}\r\n/>\r\n_хотя для меня очевидно, что платье синее :/_\r\n</details>\r\n2. Множественный опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={352}\r\n  CommentsSection = {false}\r\n/>\r\n</details>\r\n3. Рейтинговый опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={354}\r\n  CommentsSection = {false}\r\n/>\r\n</details>\r\n\r\n###_Как узнать статистику опроса?_\r\n\r\n---\r\n\r\nЧтобы узнать статистику достаточно проголосовать самому и нажать _показать статистику_\r\n![статистика](https://i.ibb.co/S3T2P2D/Capture1.png). **Внимание** Статистику могут просматривать\r\nтолько проголосовавшие пользователи.\r\n\r\n###_Как удалить свой опрос?_\r\n\r\n---\r\n\r\nДостаточно перейти в [свой профиль](/profile), найти свой опрос и выбрать кнопу _удалить_\r\n\r\n###_Есть ли у сайта будущее?_\r\n\r\n---\r\n\r\nЭто решаете только вы. Лично мне идея поиска ответов на все что угодно нравится. Вы\r\nвсегда можете помочь проекту перейдя по [ссылке](/donate) \r\n\r\n###_Будет ли сайт развиваться?_\r\n\r\n---\r\n\r\nЕсли поступит помощь то ближайшие к реализации возможности это приобретение доменного имени,\r\nзалив на хостинг, возможность анонимного голосования, возможность встраивания\r\nопроса на любой сайт с помощью iframe, выделение _экспертной_ группы или фильтр результатов\r\nпо тем пользователям, которые имеют много лайков в данной категории дабы спрашивать только\r\nу _предположительно знающих_. А также система рейтингов и много много еще чего. На данный\r\nмомент (первая версия) в сайт были добавлены только основные и самые нужные возможности.\r\n\r\n\r\n###_Не получилось пройти регистрацию, что делать?_\r\n\r\n---\r\n\r\nтест234\r\nОбратитесь, пожалуйста, по адресу surveyseveryone@gmail.com с указанием\r\nпроблемы и почтой, которая была указана при регистрации.\r\n                `}\r\n                  </ReactMarkdown>\r\n                </Paper>\r\n              </Container>\r\n            </Route>\r\n            <Copyright />\r\n          </Box>\r\n        </Router>\r\n      </PopupContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\nconst options = {\r\n  overrides: {\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    SurveyPageComponent: { component: SurveyPageComponent }\r\n  }\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n  // status: {\r\n  //   danger: orange[500]\r\n  // },\r\n  overrides: {\r\n\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 14,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}