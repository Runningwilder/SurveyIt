{"version":3,"sources":["news sync nonrecursive /.md$","news/news1.md","news/news2.md","about sync nonrecursive /.md$","about/news1.md","donate sync nonrecursive /.md$","donate/donate.md","Properties/Properties.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CommentsComponent.js","Components/CardComponent.js","Components/BaseSurveyComponent.js","Components/InfiniteScroll.js","Components/TabsComponent.js","Components/CategoriesComponent.js","Components/MainMenuComponent.js","Components/HeaderComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/StatisticsComponent.js","Components/ProfileComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/Pages/SurveyPageComponent.js","Components/Pages/NewsPageComponent.js","Components/SeparateSurveyComponent.js","Components/Pages/AboutPageComponent.js","Components/Pages/DonatePageComponent.js","Components/PopupComponent.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","properties","SingleSurveyComponent","props","React","useState","error","voted","surveyJson","answered","options","helperText","HelperText","chart","undefined","state","setState","processDataFunc","result","console","log","longestOption","elem","name","sort","e1","e2","length","choosedOptions","filter","key","width","height","data","layout","type","hide","tick","x","y","textAnchor","fontWeight","includes","payload","value","fill","r","dataKey","content","newPayload","count","useEffect","Answered","getStats","validate","values","handleChange","event","target","checked","FormControl","component","flipped","onSubmit","preventDefault","submitOptions","handleSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","Checkbox","onChange","label","FormHelperText","Button","variant","color","useStyles","makeStyles","theme","bar","fontSize","choosedOption","classes","forEach","opt","barSize","background","RadioGroup","index","Radio","style","className","RatingSurveyComponent","errors","duplicate","selectedValues","Array","rows","totalError","Set","val","size","TableContainer","Paper","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","oldValues","i","indexOf","avatar","backgroundColor","CommentsComponent","commentError","comment","comments","userInfo","useContext","UserContext","setMessageFunc","PopupContext","handleCommentSubmit","fetch","headers","method","credentials","body","JSON","stringify","surveyId","then","response","status","json","newComments","date","Date","push","user_id","getFullYear","getMonth","getDate","setCommentsLength","Collapse","borderTop","in","expanded","timeout","unmountOnExit","CardContent","List","ListItem","padding","paddingLeft","alignItems","ListItemAvatar","Avatar","aria-label","username","charAt","ListItemText","primary","Typography","secondary","Fragment","display","wordBreak","marginLeft","userId","IconButton","icon","onClick","commentId","redirect","likes","handleCommentLike","Divider","TextField","placeholder","multiline","onBlur","header","palette","main","expand","transform","transition","transitions","create","duration","shortest","expandOpen","tag","margin","typography","fontFamily","action","CardComponent","answeredAmount","answered_amount","anchorEl","commentsCount","handleClose","Menu","keepMounted","open","Boolean","onClose","MenuItem","Card","CardHeader","currentTarget","edge","subheader","to","textDecoration","Children","children","child","cloneElement","CardActions","disableSpacing","Tooltip","title","tags","marginRight","marginBottom","paragraph","clsx","aria-expanded","BaseSurveyComponent","history","useHistory","img","image","validatingFunc","History","surveyBody","params","LoggedInUserId","UserId","LoggedInUsername","UserName","Grid","container","item","xs","alt","maxWidth","src","returnBody","InfiniteScroll","ref","useRef","hasMore","isLoading","surveys","onSurveyDeleteFunc","load","clearSurveys","url","Mode","request","get","withCredentials","results","new_list","s","window","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","ActiveType","SetReloadFunction","survey","ElementId","tabs","mainBox","indicator","TabsComponent","path","location","pathname","split","pop","activeType","reloadFunc","newValue","handleFilter","newType","changeReloadFunc","Box","paddingRight","paddingTop","spacing","justify","Tabs","TabIndicatorProps","selectionFollowsFocus","centered","Tab","Link","menu","root","grey","checkbox","CategoriesComponent","categories","setCategories","setChecked","category","disablePadding","dense","labelId","button","currentIndex","checkBoxArr","splice","ListItemIcon","tabIndex","disableRipple","inputProps","list","inactive","common","white","rotate","animation","MainMenuComponent","checkLoginStatus","LoginContext","links","link","profileLinks","callback","selectedIndex","selected","search","loggedIn","logo","toolbar","borderBottom","divider","info","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","position","borderRadius","shape","fade","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paper","marginTop","flexDirection","form","submit","LoginComponent","password","jwt","connected","handleOnChange","Container","CssBaseline","noValidate","required","fullWidth","autoComplete","autoFocus","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","serverErrors","clientErrors","succesMessage","countries","setCountries","errs","defaultValue","select","SelectProps","native","max","min","from","el","border","outline","borderColor","boxShadow","input","popper","fetchedTag","cursor","h1","TagsComponent","setTags","setValue","setAnchorEl","fetchedTags","setFetchedTags","CallBack","handleClick","Input","some","Popper","anchorOrigin","vertical","horizontal","transformOrigin","elevation","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","InputLabel","htmlFor","c","renderBody","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","Math","PI","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","Username","CircularProgress","ListItemSecondaryAction","handleOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","MapChart","setContent","markers","data-tip","projection","projectionConfig","zoom","center","geography","geographies","geo","onMouseEnter","onMouseLeave","default","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","RandomComponent","getRandom","sm","locations","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","NewsPageComponent","posts","setPosts","markdownFiles","require","reverse","a","Promise","all","file","res","text","catch","err","fetchData","renderers","overrides","p","li","h4","post","idx","SurveyId","AboutPageComponent","DonatePageComponent","popup","zIndex","bottom","left","PopupComponent","Slide","direction","mountOnEnter","Copyright","href","createContext","App","activeTag","hidden","Provider","msg","setTimeout","Fade","exact","render","Hidden","only","top","LoggedIn","christmasTheme","createMuiTheme","MuiListItem","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4954e50e.chunk.js","sourcesContent":["var map = {\n\t\"./news1.md\": 546,\n\t\"./news2.md\": 547\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 545;","module.exports = __webpack_public_path__ + \"static/media/news1.4399bb34.md\";","module.exports = __webpack_public_path__ + \"static/media/news2.2268c892.md\";","var map = {\n\t\"./news1.md\": 549\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 548;","module.exports = __webpack_public_path__ + \"static/media/news1.a4a7d84c.md\";","var map = {\n\t\"./donate.md\": 551\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 550;","module.exports = __webpack_public_path__ + \"static/media/donate.ac8b0735.md\";","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     repo: \"/SurveyIt\", // For redirecting issues at GitHub Pages\r\n     // repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    // let arr = props.surveyJson.options.map(option => {\r\n    //   return {\r\n    //     name: option,\r\n    //     value: result.filter(vote => vote.options.includes(option)).length\r\n    //   }\r\n    // }).sort((a, b) => a.value - b.value)\r\n\r\n    console.log(result)\r\n\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n    console.log(state.options)\r\n  }\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  bar: {\r\n    color: \"red\",\r\n    fontSize: \"smaller\"\r\n  },\r\n}))\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined,\r\n    options: props.surveyJson.options.map(option => ({ name: option, chart: <br /> })),\r\n  })\r\n  const classes = useStyles()\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      console.log(\"choose smth\")\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n\r\n    state.options.forEach(option => {\r\n      let data = result.filter(opt => opt.name === option.name)\r\n      console.log(\"data\")\r\n      console.log(data)\r\n      option.name = option.name\r\n      option.value = data[0].value\r\n      let chart = <BarChart\r\n\r\n        width={14 * longestOption + 200}\r\n        height={20}\r\n        data={data}\r\n        barSize={10}\r\n        layout=\"vertical\">\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          // height={10}\r\n          hide\r\n          tick={props => {\r\n            return <text\r\n              x={props.x}\r\n              y={props.y}\r\n              textAnchor=\"end\"\r\n              fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n              fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n            >\r\n              {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n            </text>\r\n          }}\r\n          type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n        <Tooltip content={props => {\r\n          if (props.payload[0] != null) {\r\n            const newPayload = [{\r\n              name: 'голосов',\r\n              value: props.payload[0].payload.count\r\n            }]\r\n            return <DefaultTooltipContent {...props} payload={newPayload} />\r\n          }\r\n          return <DefaultTooltipContent {...props} />\r\n        }} />\r\n        <Bar background={{ fill: '#eee' }} dataKey=\"value\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n      option.chart = chart\r\n    })\r\n\r\n    setState({ ...state, options: state.options, voted: true })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if (state.voted)\r\n      return\r\n    setState({ ...state, choosedOption: event.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {/* {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n    \r\n        {props.surveyJson.options.map(option =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          test\r\n          </>\r\n        )}  */}\r\n      <RadioGroup value={props.surveyJson.choosedOption ? props.surveyJson.choosedOption : state.choosedOption} onChange={handleChange}>\r\n\r\n        {state.options.map((option, index) =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option.name}\r\n              control={<Radio />}\r\n              label={<div style={{ color: state.choosedOption === option.name ? \"blue\" : \"black\" }}>{option.name}{state.voted ? ` (${option.value}%)` : \"\"}</div>}\r\n            />\r\n            <div className={classes.bar}>\r\n              {option.chart}\r\n            </div>\r\n          </>\r\n        )}\r\n      </RadioGroup>\r\n      {/* {props.Answered && state.chart} */}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>\r\n    }\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl >\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n  }\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered && <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>}\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PopupContext } from '../index'\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        backgroundColor: \"#41465f\",\r\n    }\r\n}));\r\n\r\nexport default function CommentsComponent(props) {\r\n    const [state, setState] = React.useState({\r\n        commentError: \"\",\r\n        comment: \"\",\r\n        comments: props.surveyJson.comments,\r\n    })\r\n    const userInfo = React.useContext(UserContext)\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n    const handleCommentSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (state.comment.length < 5 || state.comment.length > 200) {\r\n            setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n            return\r\n        }\r\n        setState({ ...state, commentError: \"\" })\r\n\r\n        fetch(`${properties.address}/addComment`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    content: state.comment,\r\n                    surveyId: props.surveyJson.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (!result)\r\n                    return\r\n                console.log(result)\r\n                let newComments = state.comments\r\n                let date = new Date(result.date)\r\n                newComments.push({\r\n                    \"content\": state.comment,\r\n                    \"likes\": 0,\r\n                    \"user_id\": result.user_id,\r\n                    \"username\": \"admin\",\r\n                    \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n                    \"id\": result.id,\r\n                })\r\n\r\n                setState({ ...state, comments: newComments })\r\n                if (props.setCommentsLength)\r\n                    props.setCommentsLength(newComments.length)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCommentLike = comment => {\r\n\r\n        if (userInfo.userId === null) {\r\n            setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n            return\r\n        }\r\n\r\n        comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n        comment.voted = !comment.voted\r\n        setState({ ...state, comments: state.comments })\r\n\r\n        fetch(`${properties.address}/commentLike`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ commentId: comment.id })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n                    comment.voted = !comment.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            }).then(result => {\r\n                if (result) {\r\n                    // new_comments = comments.find(comment -> comment.id === commentId)\r\n                    comment.likes = result.likes\r\n                    comment.voted = result.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDeleteComment = commentId => {\r\n        fetch(`${properties.address}/deleteComment`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    commentId: commentId\r\n                }),\r\n                redirect: 'follow',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n                    setState({ ...state, comments: newComments })\r\n                    if (props.setCommentsLength)\r\n                        props.setCommentsLength(newComments.length)\r\n                    setMessageFunc(\"Комментарий удален :)\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            <List>\r\n                {state.comments.map(comment => <>\r\n                    <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                                {comment.username && comment.username.charAt(0)}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={<>\r\n                                {comment.username + \"  \"}\r\n                                <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                                    {comment.date}\r\n                                </Typography>\r\n                            </>}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            style={{ display: \"inline\" }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {comment.content}\r\n                                        </Typography>\r\n                                        <div style={{ marginLeft: \"auto\" }}>\r\n                                            {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                                            {userInfo.userId === props.surveyJson.userId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                                                <DeleteOutlineOutlinedIcon />\r\n                                            </IconButton>}\r\n                                            <Typography component=\"span\">\r\n                                                {comment.likes != 0 && comment.likes}\r\n                                            </Typography>\r\n\r\n                                            <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                                                <ThumbUpAltIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </>)}\r\n            </List>\r\n            <FormControl style={{ display: \"flex\" }}>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <TextField\r\n                        style={{ display: \"flex\" }}\r\n                        id=\"standard-textarea\"\r\n                        label=\"Комментировать\"\r\n                        placeholder=\"\"\r\n                        multiline\r\n                        onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n                    />\r\n                    {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n                    <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n                </form>\r\n            </FormControl>\r\n        </CardContent>\r\n    </Collapse>\r\n\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\nimport CommentsComponent from \"./CommentsComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentsCount: props.surveyJson.comments.length\r\n  })\r\n  \r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = () => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const handleLike = e => {\r\n    if (userInfo.userId === null){\r\n      setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n      return\r\n    }\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          setMessageFunc(\"Удалено :)\")\r\n          // props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const setCommentsLength = count => {\r\n    setState({ ...state, commentsCount: count })\r\n  }\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`${properties.repo}/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"8\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.commentsCount})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <CommentsComponent surveyJson={props.surveyJson}\r\n        expanded={state.expanded}\r\n        setCommentsLength={setCommentsLength}\r\n      />\r\n\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n\r\n  const history = useHistory()\r\n  // const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered\r\n  })\r\n  const img = props.surveyJson.image;\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    e.preventDefault()\r\n\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n\r\n  const returnBody = e => {\r\n    let surveyBody\r\n    let params = { \"getStats\": getStats, \"Answered\": state.answered, \"handleSubmit\": handleSubmit, \"surveyJson\": props.surveyJson, \"HelperText\": state.helperText, \"History\": history }\r\n    switch (props.surveyJson.type) {\r\n      case \"Single\":\r\n        surveyBody = <SingleSurveyComponent props={params} />\r\n        break\r\n      case \"Multiple\":\r\n        surveyBody = <MultipleSurveyComponent props={params} />\r\n        break\r\n      case \"Rating\":\r\n        surveyBody = <RatingSurveyComponent props={params} />\r\n        // body = \"404\"\r\n        break\r\n      default:\r\n        surveyBody = <div>Ой, с этим опросом что-то не так</div>\r\n    }\r\n    console.log('setting answered to ' + state.answered)\r\n    let baseSurvey = <CardComponent\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      LoggedInUserId={props.UserId}\r\n      LoggedInUsername={props.UserName}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {surveyBody}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <img alt=\"\" style={{ width: \"100%\" }} src={this.state.img}></img>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </CardComponent >\r\n    return baseSurvey\r\n  }\r\n  return <>\r\n    {returnBody()}\r\n  </>\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    hasMore: true,\r\n    isLoading: true,\r\n    surveys: [],\r\n    index: 0,\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    // alert('Удалено :)')\r\n  }\r\n  const load = (tag, type, clearSurveys) => {\r\n    if (clearSurveys)\r\n      setState({ ...state, surveys: [] })\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n    request\r\n      .get(url)\r\n      .withCredentials()\r\n      .then((results) => {\r\n        const new_list = results.body.map(s =>\r\n          <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n        setState({\r\n          ...state,\r\n          hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n          isLoading: false,\r\n          surveys: [\r\n            ...state.surveys,\r\n            ...new_list\r\n          ],\r\n          index: state.index + 1\r\n        })\r\n      })\r\n  }\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (state.error || state.isLoading || !state.hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {state.error &&\r\n        <div style={{ color: '#900' }}>\r\n          {state.error}\r\n        </div>\r\n      }\r\n      {state.isLoading && <div>Loading...</div>}\r\n      {!state.hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { PopupContext } from '../index'\r\nimport InfiniteScroll from './InfiniteScroll'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: 'white',\r\n  }\r\n}))\r\n\r\nexport default function TabsComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const classes = useStyles()\r\n  const path = history.location.pathname.split(\"/\").pop()\r\n  const [state, setState] = React.useState({\r\n    value: path === \"new\" || path === \"home\" ? 1 : 0,\r\n    activeType: \"\",\r\n    reloadFunc: undefined,\r\n  })\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setState({ ...state, value: newValue })\r\n  }\r\n\r\n  const handleFilter = type => {\r\n    let newType = state.activeType === type ? \"\" : type\r\n    setState({ ...state, activeType: newType })\r\n    state.reloadFunc(undefined, newType)\r\n  }\r\n\r\n  const changeReloadFunc = load => {\r\n    setState({ ...state, reloadFunc: load })\r\n  }\r\n\r\n  return <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n    <Grid container spacing={3} alignItems=\"flex-start\" justify=\"flex-start\">\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.tabs}>\r\n          <Tabs TabIndicatorProps={{ style: { backgroundColor: 'white' } }} selectionFollowsFocus centered value={state.value}  >\r\n            <Tab onClick={e => handleChange(e, 0)} component={Link} to={`${properties.repo}/top`} label=\"TOP\" />\r\n            <Tab onClick={e => handleChange(e, 1)} component={Link} to={`${properties.repo}/new`} label=\"NEW\" />\r\n\r\n            <Tooltip title=\"Единичный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"SINGLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"SINGLE\") }}\r\n              >\r\n                <ViewListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Множественный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"MULTIPLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"MULTIPLE\") }}\r\n              >\r\n                <FormatListBulletedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Рейтинговый выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"RATING\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"RATING\") }}\r\n              >\r\n                <AppsIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Tabs>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} id=\"surveys\">\r\n        <Paper className={classes.mainBox}>\r\n          <Box  >\r\n            {state.value == 0 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"Top\" />}\r\n            {state.value == 1 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"New\" />}\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  </Box>\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    backgroundColor: \"#4c546391\"\r\n  },\r\n  root: {\r\n    color: theme.palette.grey[300],\r\n    \"&:hover\": {\r\n      background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  // tag: {\r\n  //   margin: 2,\r\n  //   backgroundColor: \"#a2a2dc\",\r\n  //   margin: 2,\r\n  //   borderRadius: 5,\r\n  //   cursor: \"pointer\",\r\n  //   '&:hover': {\r\n  //     backgroundColor: \"#c3c3ec\",\r\n  //   },\r\n  //   fontSize: 10,\r\n  //   color: \"#2f4f4f\",\r\n  //   padding: 2,\r\n  //   width: \"max-content\"\r\n  // },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card className={classes.menu}>\r\n      <List disablePadding dense>\r\n        {categories.map(category => {\r\n          const labelId = `checkbox-list-label-${category.name}`\r\n          return (\r\n            <ListItem\r\n              className={classes.root}\r\n              key={`category-${category.id}`}\r\n              button\r\n              onClick={handleToggle(category.name)}\r\n\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n        }\r\n        )}\r\n      </List>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js'\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { UserContext } from '../index'\r\nimport { PopupContext } from '../index'\r\nimport { LoginContext } from '../index'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        padding: 0\r\n    },\r\n    checkbox: {\r\n        padding: 3\r\n    },\r\n    inactive: {\r\n        color: theme.palette.grey[300],\r\n        textDecoration: \"none\"\r\n    },\r\n    menu: {\r\n        backgroundColor: \"#4c546391\"\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[300],\r\n    },\r\n    root: {\r\n        \"&:hover\": {\r\n            // backgroundColor: theme.palette.grey[700],\r\n            background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n            // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n        },\r\n        color: theme.palette.common.white,\r\n    },\r\n    rotate: {\r\n        // transform: \"rotate(70deg)\"\r\n        animation: `spin 15s linear infinite`\r\n    }\r\n\r\n}))\r\nexport default function MainMenuComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const userInfo = React.useContext(UserContext)\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const checkLoginStatus = React.useContext(LoginContext)\r\n    const signOut = e => {\r\n        fetch(`${properties.address}/signout`,\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // props.CheckLoginStatus()\r\n                    checkLoginStatus()\r\n                    setMessageFunc(\"Вы вышли :(\")\r\n\r\n                }\r\n            })\r\n    }\r\n    const [state, setState] = React.useState({\r\n        links: [{\r\n            name: \"Новогодние\",\r\n            link: `random?tag=newyear`,\r\n            icon: <AcUnitIcon className={classes.rotate} />,\r\n        }, {\r\n            name: \"Домашняя\",\r\n            // link: `${properties.repo}/home`,\r\n            link: `home`,\r\n            icon: <HomeIcon />,\r\n        }, {\r\n            name: \"Рандом\",\r\n            // link: `${properties.repo}/random`,\r\n            link: `random`,\r\n            icon: <ContactSupportIcon />,\r\n        }, {\r\n            name: \"Купить кофе\",\r\n            link: `donate`,\r\n            icon: <FreeBreakfastIcon />,\r\n        }, {\r\n            name: \"История изменений\",\r\n            link: `news`,\r\n            icon: <UpdateIcon />,\r\n        }, {\r\n            name: \"О сайте\",\r\n            link: `about`,\r\n            icon: <InfoIcon />\r\n        }],\r\n        profileLinks: [{\r\n            name: \"Профиль\",\r\n            link: `profile`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Создать\",\r\n            link: `createSurvey`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Выйти\",\r\n            link: `signout`,\r\n            icon: null,\r\n            callback: signOut\r\n        }],\r\n        // selectedIndex: 0,\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setState({ ...state, open: !state.open })\r\n    }\r\n\r\n    return <>\r\n        <Card className={classes.menu}>\r\n            <List disablePadding dense>\r\n                {state.links.map((link, index) => <>\r\n                    <Link to={`${properties.repo}/${link.link}`}\r\n                        className={classes.inactive}\r\n                        onClick={e => setState({ ...state, selectedIndex: index })}\r\n                    >\r\n                        <ListItem\r\n                            button\r\n                            selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                            className={classes.root}\r\n                        >\r\n                            <ListItemIcon\r\n                                className={classes.icon}>\r\n                                {link.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={link.name} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </>\r\n                )}\r\n                {!userInfo.loggedIn && <Link to={`${properties.repo}/login`}\r\n                    className={classes.inactive}\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/login`}\r\n                        className={classes.root}\r\n                    >\r\n                        <ListItemText primary={\"Sign In / Sign Up\"} />\r\n                    </ListItem>\r\n                </Link>}\r\n                {userInfo.loggedIn && <><ListItem className={classes.root} button onClick={handleClick}>\r\n\r\n                    <ListItemIcon\r\n                        className={classes.icon}>\r\n                        <AccountCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Профиль\" />\r\n                    {state.open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                    <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n                        <List disablePadding dense>\r\n                            {state.profileLinks.map((link, index) =>\r\n                                <Link to={`${properties.repo}/${link.link}`}\r\n                                    className={classes.inactive}\r\n                                >\r\n                                    <ListItem\r\n                                        button\r\n                                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                                        className={classes.root}\r\n                                        onClick={link.callback}\r\n                                    >\r\n                                        <ListItemText primary={link.name} />\r\n                                    </ListItem>\r\n                                </Link>)}\r\n                        </List>\r\n                    </Collapse></>}\r\n            </List>\r\n        </Card>\r\n    </>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Link } from 'react-router-dom'\r\nimport AccountIconComponent from './AccountIconComponent'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"40px\",\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.info\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    color: 'black'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 10,\r\n    //width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   width: '12ch',\r\n    //   '&:focus': {\r\n    //     width: '100ch',\r\n    //   },\r\n    // },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles(props);\r\n  const { title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <a href = \"/about.html\">About</a> */}\r\n\r\n      <AppBar position=\"static\" className={classes.toolbar}>\r\n        <Toolbar >\r\n          <Link to={`${properties.repo}/home`}>\r\n            <img src=\"images/logo.png\" alt=\"\" className={classes.logo}></img>\r\n          </Link>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link to={`${properties.repo}/home`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Домой\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/news`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Новости\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/donate`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Помочь проекту\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/about`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Про сайт\r\n            </Link>\r\n          </Typography>\r\n\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          {props.state.loggedIn ? <>\r\n            <AccountIconComponent {...props}></AccountIconComponent>\r\n          </>\r\n            :\r\n            <>\r\n              <Link to={`${properties.repo}/login`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"text\" size=\"small\">\r\n                  Login\r\n            </Button>\r\n              </Link>\r\n              <Link to={`${properties.repo}/register`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  <Typography noWrap>Sign up</Typography>\r\n                </Button>\r\n              </Link>\r\n            </>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"username\": state.username, \"password\": state.password }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          setState({ ...state, error: true })\r\n        }\r\n        else if (response.status === 200) {\r\n          props.handleLoggedIn()\r\n          history.push(`${properties.repo}/home`)\r\n        }\r\n      }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <FormHelperText error={true}>\r\n              {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n            </FormHelperText>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.username}\r\n              onChange={handleOnChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={state.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/register`} variant=\"body2\">\r\n                  Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    matchingPassword: '',\r\n    gender: '',\r\n    age: '',\r\n    country: '',\r\n    errors: {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        // credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          setCountries([{ name: \"\", id: 0 }, ...result])\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0) {\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150) {\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\") {\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\") {\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/signUp`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"name\": state.name,\r\n          \"password\": state.password,\r\n          \"email\": state.email,\r\n          \"matchingPassword\": state.matchingPassword,\r\n          \"country\": state.country,\r\n          \"age\": state.age,\r\n          \"gender\": state.gender,\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 400) {\r\n          response.json().then(result => {\r\n\r\n            setState({\r\n              ...state, errors: {\r\n                ...state.errors,\r\n                serverErrors: result,\r\n                clientErrors: validate()\r\n              }\r\n            })\r\n          })\r\n        }\r\n        else if (response.status === 200) {\r\n          setState({\r\n            ...state,\r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"\r\n          })\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <Typography component=\"h2\">\r\n            {state.succesMessage}\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"login\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  defaultValue={state.name}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"gender\"\r\n                  label=\"Пол\"\r\n                  defaultValue={\"none\"}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                >\r\n                  <option value=\"\" ></option>\r\n                  <option value=\"male\" >Мужской</option>\r\n                  <option value=\"female\" >Женский</option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    max: 150,\r\n                    min: 0\r\n                  }}\r\n                  name=\"age\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"age\"\r\n                  type=\"number\"\r\n                  label=\"Возраст\"\r\n                  defaultValue={state.age}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  name=\"country\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Страна\"\r\n                  // native\r\n                  // defaultValue = {state.country}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                // autoFocus\r\n                >\r\n                  {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country =>\r\n                    <option key={`country-${country.id}`} value={country.name} >{country.name}</option>\r\n                  )}\r\n                  {/* </FixedSizeList> */}\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  defaultValue={state.email}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.password}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"matchingPassword\"\r\n                  label=\"Confirm your password\"\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.matchingPassword}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n                <FormHelperText error={true}>\r\n                  {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n                </FormHelperText>\r\n\r\n                {Array.from(state.errors.clientErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n                {Array.from(state.errors.serverErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/login`} variant=\"body2\">\r\n                  Уже есть аккаунт? Войти\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'Single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'Rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result){\r\n            setMessageFunc(\"Опрос создан :)\")\r\n            history.push(`${properties.repo}/new`)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'Single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'Multiple':\r\n      case 'Single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'Rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('Single')} color={state.type === 'Single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('Multiple')} color={state.type === 'Multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('Rating')} color={state.type === 'Rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <BaseSurveyComponent\r\n              surveyJson={{\r\n                type: state.type,\r\n                comments: [],\r\n                tags: [],\r\n                options: Array.from(state.options),\r\n                rows: Array.from(state.rows),\r\n                columns: Array.from(state.columns)\r\n              }} />\r\n            {/* <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent> */}\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PieChart, Pie, Cell} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n// const bar_data = [\r\n//   {\r\n//     name: 'Tom Cruise', value: 20,\r\n//   },\r\n//   {\r\n//     name: 'Will Smith', value: 80,\r\n//   },\r\n//   {\r\n//     name: 'Brad Pitt', value: 80,\r\n//   },\r\n// ];\r\n\r\n\r\n// const multiple_data = {\r\n//   votes: [\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'JustUser'\r\n//       },\r\n//       options: [\"Fish\", \"Meat\", \"Vegetables\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 55,\r\n//         country: 'Ukraine',\r\n//         username: 'Sabrina'\r\n//       },\r\n//       options: [\"Fish\", \"Fruit\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'Frank'\r\n//       },\r\n//       options: [\"Meat\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 45,\r\n//         country: 'Ukraine',\r\n//         username: 'Joshua'\r\n//       },\r\n//       options: [\"Meat\",\"Alcohol\"]\r\n//     },\r\n//   ]\r\n// }\r\n// const single_data = {\r\n//     votes: [\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 20,\r\n//                 country: 'Ukraine',\r\n//                 username: 'JustUser'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 23,\r\n//                 country: 'UK',\r\n//                 username: 'Drago777'\r\n//             },\r\n//             option: \"Will Smith\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 18,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 54,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 42,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 33,\r\n//                 country: 'Russia',\r\n//                 username: 'Carol'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'female',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'Rachel'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'John'\r\n//             },\r\n//             option: \"Chriss Pratt\"\r\n//         },\r\n//     ]\r\n// }\r\n\r\nconst rating_data = [\r\n  {\r\n      user: {\r\n          sex: 'male',\r\n          age: 32,\r\n          country: 'Russia',\r\n          username: 'John'\r\n      },\r\n      rowscolumns: [\r\n        \"Халк\",\r\n        \"Железяка\",\r\n        \"Молоток с Асгарда\",\r\n      ]\r\n    },\r\n    {\r\n        user: {\r\n            sex: 'male',\r\n            age: 32,\r\n            country: 'Russia',\r\n            username: 'John'\r\n        },\r\n        rowscolumns: [\r\n          \"Халк\",\r\n          \"Молоток с Асгарда\",\r\n          \"Железяка\",\r\n        ]\r\n      },\r\n      {\r\n          user: {\r\n              sex: 'male',\r\n              age: 32,\r\n              country: 'Russia',\r\n              username: 'John'\r\n          },\r\n          rowscolumns: [\r\n            \"Халк\",\r\n            \"Молоток с Асгарда\",\r\n            \"Железяка\",\r\n          ]\r\n        },\r\n        {\r\n            user: {\r\n                sex: 'male',\r\n                age: 32,\r\n                country: 'Russia',\r\n                username: 'John'\r\n            },\r\n            rowscolumns: [\r\n              \"Молоток с Асгарда\",\r\n              \"Железяка\",\r\n              \"Халк\",\r\n            ]\r\n          },\r\n          {\r\n              user: {\r\n                  sex: 'male',\r\n                  age: 32,\r\n                  country: 'Russia',\r\n                  username: 'John'\r\n              },\r\n              rowscolumns: [\r\n                \"Молоток с Асгарда\",\r\n                \"Железяка\",\r\n                \"Халк\",\r\n              ]\r\n            },\r\n            {\r\n                user: {\r\n                    sex: 'male',\r\n                    age: 32,\r\n                    country: 'Russia',\r\n                    username: 'John'\r\n                },\r\n                rowscolumns: [\r\n                  \"Молоток с Асгарда\",\r\n                  \"Халк\",\r\n                  \"Железяка\",\r\n                ]\r\n              },\r\n              {\r\n                  user: {\r\n                      sex: 'male',\r\n                      age: 32,\r\n                      country: 'Russia',\r\n                      username: 'John'\r\n                  },\r\n                  rowscolumns: [\r\n                    \"Молоток с Асгарда\",\r\n                    \"Халк\",\r\n                    \"Железяка\",\r\n                  ]\r\n                },\r\n                {\r\n                    user: {\r\n                        sex: 'male',\r\n                        age: 32,\r\n                        country: 'Russia',\r\n                        username: 'John'\r\n                    },\r\n                    rowscolumns: [\r\n                      \"Железяка\",\r\n                      \"Молоток с Асгарда\",\r\n                      \"Халк\",\r\n                    ]\r\n                  },\r\n                  {\r\n                      user: {\r\n                          sex: 'male',\r\n                          age: 32,\r\n                          country: 'Russia',\r\n                          username: 'John'\r\n                      },\r\n                      rowscolumns: [\r\n                        \"Железяка\",\r\n                        \"Молоток с Асгарда\",\r\n                        \"Халк\",\r\n                      ]\r\n                    },\r\n                    {\r\n                        user: {\r\n                            sex: 'male',\r\n                            age: 32,\r\n                            country: 'Russia',\r\n                            username: 'John'\r\n                        },\r\n                        rowscolumns: [\r\n                          \"Железяка\",\r\n                          \"Молоток с Асгарда\",\r\n                          \"Халк\",\r\n                        ]\r\n                      },\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 40,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //     \"Молоток с Асгарда\"\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 16,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 32,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n]\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: 'Мужчины',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Женщины',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Все',\r\n  }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"75%\",\r\n        // paddingLeft: 100,\r\n        // paddingRight: 20,\r\n        marginLeft: 40\r\n    }\r\n});\r\n\r\nconst renderCustomizedLabel = (props) => {\r\n    \r\n    const {cx, cy, midAngle, innerRadius, outerRadius, percent, value} = props\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    const option = props.name\r\n\r\n    return (<>\r\n    {value === 0 ? '' : \r\n    <>\r\n      <text x={x} y={y} fontSize = {14} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n      <text \r\n        x = {cx + (outerRadius + 30) * Math.cos(-midAngle * RADIAN)} \r\n        y = {cy + (outerRadius + 30) * Math.sin(-midAngle * RADIAN)}>\r\n        {option}\r\n      </text>\r\n      </>\r\n    }\r\n    </>);\r\n};\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n\r\nexport default function StatisticsComponent(props){\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([0,99]);\r\n    const [genderValue, setGenderValue] = React.useState(2);\r\n    const [fetchedData, setFetchedData] = React.useState([])\r\n    const [data, setData] = React.useState([])\r\n    const [barData, setBarData] = React.useState([])\r\n    const [ratingData, setRatingData] = React.useState([])\r\n    const [filteredDataLength, setFilteredDataLength] = React.useState(0)\r\n    const [legend, setLegend] = React.useState({})\r\n    \r\n    const [barOptions, setBarOptions] = React.useState([]) // For multiple survey\r\n\r\n    const renderLegend = (props) => {\r\n      const { payload } = props;\r\n    \r\n      return (\r\n        Object.keys(legend).map(key => \r\n          <text  style = {{textAlign: \"center\"}}>\r\n            <text style = {{fontWeight: \"bold\", color: \"steelblue\"}}>{key}</text> : \r\n            {/* {legend[key].map(item => <text style = {{fontStyle: \"italic\"}}> {item} </text>)} */}\r\n            <text style = {{fontStyle: \"italic\"}}> {legend[key].join(\" + \")} </text>\r\n          </text>\r\n        )\r\n      );\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   fetch(`${properties.address}/getStatistics?surveyId=${props.SurveyId}`, \r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include'\r\n    //   })\r\n    //   .then(response => {\r\n    //       if (response.status === 200){\r\n    //         response.json().then(result => {\r\n    //           setFetchedData(result)\r\n    //         })\r\n    //       }\r\n    //     }\r\n    //   )\r\n    // }, [props.SurveyId])\r\n\r\n    React.useEffect(() => {\r\n      if (fetchedData.length === 0)\r\n        return\r\n      // Filtering by gender and age\r\n      let gender = genderValue === 0 ? 'male' : genderValue === 1 ? 'female' : ''\r\n      let filtered_data = fetchedData.filter(elem => \r\n          (elem.user.age > value[0] && elem.user.age < value[1])\r\n          && ((gender !== '' && elem.user.sex === gender) || (gender === ''))\r\n      )\r\n      setFilteredDataLength(filtered_data.length)\r\n\r\n      // Setting data for Pie Chart (Single and Multiple)\r\n      let arr = []\r\n      switch (props.Type){\r\n        case \"Multiple\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.options.includes(option)).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        case \"Single\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.option === option).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        default:\r\n      }\r\n      setData(arr)\r\n      \r\n      // Setting data for Bar Chart (Multiple)\r\n      if (props.Type === \"Multiple\"){\r\n        let bar_arr = props.Options.map(option => {\r\n          return {\r\n            name: option,\r\n            value: filtered_data.filter(elem => elem.options.includes(option)).length / filtered_data.length * 100\r\n          }\r\n        }).sort((a,b) => b.value - a.value)\r\n        setBarData(bar_arr)\r\n      }\r\n\r\n      // Setting data for Bar Chart (Rating)\r\n      if (props.Type === \"Rating\" && filtered_data.length !== 0){\r\n        let rating_arr = []\r\n\r\n        let accepted = []\r\n        let rows = [...props.Rows]\r\n        let index = 0\r\n        let max = 0\r\n        let max_arr = []\r\n        let bar = {}\r\n        let rating = {}\r\n\r\n        while (rows.length !== 0){\r\n          bar = {}\r\n          rows.forEach(row => {\r\n            bar[row] = filtered_data.filter(rd => rd.rowscolumns[index] === row).length / (filtered_data.length) * 100\r\n          })\r\n          let sum = Object.values(bar).reduce((a,b) => a + b, 0)\r\n          max = Math.max(...Object.values(bar))\r\n\r\n          max_arr = Object.keys(bar).filter(key => bar[key] === max)\r\n          accepted.push(...max_arr)\r\n          rating[props.Columns[index]] = [...max_arr]\r\n          let obj = {}\r\n          obj.name = props.Columns[index]\r\n          rows.forEach(elem => {\r\n            if (bar[elem] !== 0)\r\n              obj[elem] = bar[elem] / sum * 100\r\n          })\r\n          rating_arr.push(obj)\r\n\r\n          index++\r\n          rows = props.Rows.filter(row => !accepted.includes(row))\r\n        }\r\n        setLegend(rating)\r\n\r\n        setRatingData(rating_arr)\r\n      }\r\n\r\n    }, [fetchedData, value, genderValue])\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleGenderChange = (event, newValue) => {\r\n      setGenderValue(newValue)\r\n    }\r\n\r\n    return (<>\r\n    <Grid container>\r\n    <Grid container>\r\n        <Grid item xs = {7}>\r\n          <Typography color = 'primary'>\r\n            {filteredDataLength} голоса\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              Возраст\r\n            </Typography>\r\n            <Slider\r\n              value={value}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {99}\r\n            />\r\n            <Slider\r\n              value={genderValue}\r\n              onChange={handleGenderChange}\r\n              valueLabelDisplay=\"off\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {2}\r\n              marks = {marks}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs = {5}>\r\n          {(props.Type === \"Multiple\" || props.Type === \"Single\") && \r\n            <PieChart width={200} height={200}>\r\n            <Pie\r\n              data={data}\r\n              cx='50%'\r\n              cy='50%'\r\n              labelLine={true}\r\n              label={renderCustomizedLabel}\r\n              outerRadius={45}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {\r\n                data.map((entry, index) => \r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                )\r\n              }\r\n            </Pie>\r\n          </PieChart>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs = {12} alignItems = 'center' justify = 'center'>\r\n            \r\n          {props.Type === \"Multiple\" && \r\n          <BarChart\r\n            width={400}\r\n            height={200}\r\n            data={barData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain = {[0, 100]} />\r\n            <Tooltip />\r\n            <Legend formatter = {() => `% проголосовавших за категорию`}/>\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n          </BarChart>}\r\n          {props.Type === \"Rating\" && \r\n          <>\r\n          <BarChart\r\n            width={500}\r\n            height={200}\r\n            data={ratingData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend \r\n              content={renderLegend} \r\n              wrapperStyle = {{textAlign: \"center\"}}\r\n            />\r\n            {props.Rows.map((row,index) => \r\n              <Bar dataKey = {row} stackId=\"a\" fill={COLORS[index % COLORS.length]} />\r\n            )}\r\n          </BarChart>\r\n          </>}\r\n      </Grid>\r\n    </Grid>\r\n    </>)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`${properties.repo}/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"   height=\"300\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={3} center={[50, 50]}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PopupContext } from '../../index'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    const getRandom = e => {\r\n        console.log('getting random ')\r\n        fetch(`${properties.address}/getRandom${window.location.search}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                setState({ ...state, survey: result, isLoading: false })\r\n                if (result == null)\r\n                    setMessageFunc(\"Ничего не найдено :(\")\r\n            })\r\n    }\r\n    const onSurveyDeleteFunc = e => {\r\n        setState({ ...state, isLoading: true });\r\n        getRandom()\r\n    }\r\n    React.useEffect(() => {\r\n        setState({ ...state, isLoading: true });\r\n        getRandom()\r\n    }, [props.location.search])\r\n    return (\r\n        <>\r\n            <Grid item sm={9} style = {{margin: \"auto\"}}>\r\n                {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} onSurveyDeleteFunc={onSurveyDeleteFunc} />}\r\n                <button title={\"Дизайн современных кнопок - обращаться по адресу languageblog96@gmail.com\"} onClick={() => { setState({ ...state, isLoading: true }); getRandom() }}>press me</button>\r\n\r\n                <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n            </Grid>\r\n        </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\nimport CommentsComponent from \"../CommentsComponent\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        history.push(`${properties.repo}/profile`)\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n        {/* <CommentsComponent /> */}\r\n    </>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nexport default function NewsPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n    console.log(\"importing...\")\r\n    const markdownFiles = importAll(require.context('../../news', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const renderers = {\r\n        overrides: {\r\n            p: { component: Typography, props: { paragraph: true } },\r\n            li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n            h4: { component: Typography, props: { variant: \"h6\" } }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n\r\n                        <ReactMarkdown options={renderers}>\r\n\r\n                            {\r\n                                // <Typography> post </Typography>\r\n                                post\r\n                            }\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { properties } from '../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport CategoriesComponent from \"./CategoriesComponent\"\r\nimport MainMenuComponent from \"./MainMenuComponent\"\r\nimport MapChart from './MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${props.SurveyId}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }, [])\r\n    return <>\r\n        {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} />}</>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function AboutPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../about', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function DonatePageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../donate', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport MainMenuComponent from './Components/MainMenuComponent'\r\nimport HeaderComponent from './Components/HeaderComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InfiniteScroll from './Components/InfiniteScroll'\r\nimport StatisticsComponent from './Components/StatisticsComponent'\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport NewsPageComponent from \"./Components/Pages/NewsPageComponent\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport AboutPageComponent from \"./Components/Pages/AboutPageComponent\";\r\nimport DonatePageComponent from \"./Components/Pages/DonatePageComponent\";\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nexport const LoginContext = React.createContext(() => { })\r\n\r\nfunction App() {\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    activeType: \"\",\r\n    activeTag: \"\",\r\n    message: \"\",\r\n    hidden: true,\r\n    userInfo: {\r\n      username: null,\r\n      userId: null,\r\n      loggedIn: null\r\n    }\r\n  })\r\n\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n        else {\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: null,\r\n              userId: null,\r\n              loggedIn: false\r\n            }\r\n          })\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: result.username,\r\n              userId: result.user_id,\r\n              loggedIn: true\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  const setMessageFunc = msg => {\r\n    setState({ ...state, message: msg, hidden: false })\r\n    setTimeout(() => {\r\n      setState({ ...state, message: msg, hidden: true })\r\n    }, 3000)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={checkLoginStatus}>\r\n      <UserContext.Provider value={state.userInfo}>\r\n        <PopupContext.Provider value={setMessageFunc}>\r\n          <Router>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={9} >\r\n                <Box>\r\n                  <Fade in={!state.hidden} timeout={500}>\r\n                    <div>\r\n                      <PopupComponent message={state.message} />\r\n                    </div>\r\n                  </Fade>\r\n                  <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}><TabsComponent /></Route>\r\n                  <Route path={`${properties.repo}/random`} render={props => <RandomPageComponent {...props} />} />\r\n                  <Route path={`${properties.repo}/login`}><LoginComponent handleLoggedIn={checkLoginStatus} /></Route>\r\n                  <Route path={`${properties.repo}/createSurvey`}><AddSurveyComponent /></Route>\r\n                  <Route path={`${properties.repo}/profile`}><ProfileComponent /></Route>\r\n                  <Route path={`${properties.repo}/register`}><SignUpComponent /></Route>\r\n                  <Route path={`${properties.repo}/registrationConfirm`}><ConfirmRegistration /></Route>\r\n                  <Route path={`${properties.repo}/survey/:id`}><SurveyPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/news`}><NewsPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/donate`}> <DonatePageComponent /> {/* <SendFeedbackComponent /> */} </Route>\r\n                  <Route path={`${properties.repo}/about`}><AboutPageComponent /></Route>\r\n                  {/* <Route path={`${properties.repo}/signout`}>{ history.push(`${properties.repo}/`)} </Route> */}\r\n                  <Route path={`${properties.repo}/signout`}><Redirect to={`${properties.repo}/`} /></Route>\r\n                  <Copyright />\r\n                </Box>\r\n              </Grid>\r\n              {/* </Grid> */}\r\n              <Grid item sm={3} style={{ paddingRight: \"10px\" }}>\r\n                <Hidden only=\"xs\">\r\n                  <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                    <CategoriesComponent LoggedIn={state.loggedIn} />\r\n                  </Box>\r\n                  <MainMenuComponent />\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Router>\r\n        </PopupContext.Provider>\r\n      </UserContext.Provider>\r\n    </LoginContext.Provider >\r\n  );\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          // backgroundColor: grey[800],\r\n          background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n        },\r\n        \"&$selected:hover\": {\r\n          backgroundColor: grey[700],\r\n        },\r\n      },\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    secondary: {\r\n      main: \"#3d608c\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 13,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}