{"version":3,"sources":["news sync nonrecursive /.md$","news/news1.md","news/news2.md","about sync nonrecursive /.md$","about/news1.md","donate sync nonrecursive /.md$","donate/donate.md","Components/TabsComponent.js","Properties/Properties.js","Components/CategoriesComponent.js","Components/MainMenuComponent.js","Components/HeaderComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CommentsComponent.js","Components/CardComponent.js","Components/BaseSurveyComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/InfiniteScroll.js","Components/StatisticsComponent.js","Components/ProfileComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/Pages/SurveyPageComponent.js","Components/Pages/NewsPageComponent.js","Components/SeparateSurveyComponent.js","Components/Pages/AboutPageComponent.js","Components/Pages/DonatePageComponent.js","Components/PopupComponent.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","tabs","backgroundColor","palette","secondary","main","mainBox","indicator","TabsComponent","props","React","useState","Value","value","setValue","classes","gridBody","setGrid","handleChange","event","newValue","activeType","setActiveType","useEffect","children","DefaultType","handleFilter","type","newType","Load","undefined","Grid","container","spacing","alignItems","justify","item","xs","Paper","className","Tabs","TabIndicatorProps","style","selectionFollowsFocus","centered","aria-label","Tab","onClick","component","Link","to","label","aria-controls","Tooltip","title","IconButton","color","Box","properties","menu","root","grey","background","checkbox","padding","CategoriesComponent","categories","checked","setCategories","setChecked","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","name","Card","List","disablePadding","dense","labelId","ListItem","key","button","currentIndex","indexOf","checkBoxArr","push","splice","body","includes","headers","JSON","stringify","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","list","inactive","textDecoration","icon","rotate","animation","MainMenuComponent","userInfo","useContext","UserContext","useHistory","console","log","links","link","selectedIndex","state","setState","userId","loggedIn","window","location","index","selected","pathname","search","logo","maxWidth","toolbar","borderBottom","divider","info","toolbarTitle","flex","marginLeft","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","position","borderRadius","shape","fade","common","white","breakpoints","up","width","searchIcon","height","pointerEvents","display","inputRoot","inputInput","paddingLeft","transition","transitions","create","paper","marginTop","flexDirection","avatar","margin","form","submit","LoginComponent","history","password","username","jwt","connected","error","handleOnChange","target","Container","CssBaseline","Typography","Avatar","variant","noValidate","FormHelperText","TextField","required","fullWidth","autoComplete","autoFocus","onChange","Button","preventDefault","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","errors","serverErrors","clientErrors","succesMessage","countries","setCountries","validate","errs","defaultValue","select","SelectProps","native","max","min","Array","from","el","border","outline","borderColor","boxShadow","tag","fontSize","input","popper","fetchedTag","cursor","h1","fontWeight","TagsComponent","tags","setTags","anchorEl","setAnchorEl","fetchedTags","setFetchedTags","open","Boolean","CallBack","handleClose","handleClick","Input","currentTarget","some","Popper","onClose","anchorOrigin","vertical","horizontal","transformOrigin","elevation","length","SingleSurveyComponent","voted","surveyJson","answered","options","helperText","HelperText","chart","processDataFunc","longestOption","elem","sort","e1","e2","choosedOptions","data","layout","hide","tick","x","y","textAnchor","payload","fill","r","dataKey","content","newPayload","count","Answered","getStats","values","FormControl","flipped","onSubmit","submitOptions","handleSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","bar","choosedOption","forEach","opt","barSize","RadioGroup","Radio","RatingSurveyComponent","duplicate","selectedValues","rows","totalError","Set","val","size","TableContainer","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","oldValues","i","CommentsComponent","commentError","comment","comments","setMessageFunc","PopupContext","handleCommentSubmit","surveyId","newComments","date","Date","user_id","getFullYear","getMonth","getDate","setCommentsLength","Collapse","borderTop","in","expanded","timeout","unmountOnExit","CardContent","ListItemAvatar","charAt","Fragment","wordBreak","commentId","likes","handleCommentLike","Divider","placeholder","multiline","onBlur","header","expand","transform","duration","shortest","expandOpen","typography","fontFamily","action","CardComponent","answeredAmount","answered_amount","commentsCount","Menu","keepMounted","MenuItem","CardHeader","subheader","Children","child","cloneElement","CardActions","disableSpacing","marginRight","marginBottom","paragraph","clsx","aria-expanded","BaseSurveyComponent","img","image","validatingFunc","History","surveyBody","params","LoggedInUserId","UserId","LoggedInUsername","UserName","alt","src","returnBody","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","InputLabel","htmlFor","c","renderBody","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","get","InfiniteScroll","ref","useRef","hasMore","HasMore","isLoading","IsLoading","surveys","Surveys","Index","ActiveType","onSurveyDeleteFunc","load","url","Mode","request","withCredentials","results","new_list","s","SetReloadFunction","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","survey","ElementId","Math","PI","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","Username","CircularProgress","ListItemSecondaryAction","handleOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","MapChart","setContent","markers","data-tip","projection","projectionConfig","zoom","center","geography","geographies","geo","onMouseEnter","onMouseLeave","default","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","RandomComponent","getRandom","sm","locations","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","NewsPageComponent","posts","setPosts","markdownFiles","require","reverse","a","Promise","all","file","res","text","catch","err","fetchData","renderers","overrides","p","li","h4","post","idx","SurveyId","AboutPageComponent","DonatePageComponent","popup","zIndex","bottom","left","PopupComponent","Slide","direction","mountOnEnter","Copyright","href","createContext","App","hidden","setHidden","reload","activeTag","customFunc","setTimeout","handler","setUserInfo","checkLoginStatus","createBrowserHistory","Provider","msg","Fade","exact","path","paddingRight","paddingTop","Hidden","only","top","LoggedIn","christmasTheme","createMuiTheme","MuiListItem","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.d113d764.chunk.js","sourcesContent":["var map = {\n\t\"./news1.md\": 542,\n\t\"./news2.md\": 543\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 541;","module.exports = __webpack_public_path__ + \"static/media/news1.4399bb34.md\";","module.exports = __webpack_public_path__ + \"static/media/news2.a06e060d.md\";","var map = {\n\t\"./news1.md\": 545\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 544;","module.exports = __webpack_public_path__ + \"static/media/news1.a4a7d84c.md\";","var map = {\n\t\"./donate.md\": 547\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 546;","module.exports = __webpack_public_path__ + \"static/media/donate.ac8b0735.md\";","import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    mainBox: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    indicator: {\r\n      backgroundColor: 'white',\r\n    }\r\n}))\r\n\r\nexport default function TabsComponent(props){\r\n    const [value, setValue] = React.useState(props.Value)\r\n    const {tabs} = props\r\n    const classes = useStyles()\r\n    const [gridBody, setGrid] = React.useState(<div>Loading...</div>)\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      setGrid(<div>...Loading</div>)\r\n    };\r\n    const [activeType, setActiveType] = React.useState(\"\")\r\n    \r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n      // setGrid(React.cloneElement(props.children[value], {ActiveType: activeType}))\r\n    }, [value])\r\n    \r\n    React.useEffect(() => {\r\n      setActiveType(props.DefaultType)\r\n    },[props.DefaultType])\r\n\r\n    const handleFilter = type => {\r\n      let newType = activeType === type ? \"\" : type\r\n      setActiveType(newType)\r\n      props.Load(undefined, newType)\r\n    }\r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n    }, [activeType])\r\n\r\n    return <Grid container spacing={3}  alignItems=\"flex-start\" justify = \"flex-start\">\r\n              <Grid  item xs={12}>\r\n                <Paper className = {classes.tabs}>\r\n                  <Tabs TabIndicatorProps={{style: { backgroundColor: 'white'}}}  selectionFollowsFocus centered value={value} aria-label=\"simple tabs example\">\r\n                      <Tab onClick = {e=> handleChange(e, 0)} component = {Link} to = \"top\" label=\"TOP\" id = \"simple-tab-0\" aria-controls = \"simple-tabpanel-0\" />\r\n                      <Tab onClick = {e=> handleChange(e, 1)} component = {Link} to = \"new\" label=\"NEW\" id = \"simple-tab-1\" aria-controls = \"simple-tabpanel-1\"  />\r\n\r\n                      <Tooltip title = \"Единичный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"SINGLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"SINGLE\")}}\r\n                        >\r\n                          <ViewListIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Множественный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"MULTIPLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"MULTIPLE\")}}\r\n                        >\r\n                          <FormatListBulletedIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Рейтинговый выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"RATING\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"RATING\")}}\r\n                        >\r\n                          <AppsIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid  item xs={12} id = \"surveys\">\r\n                <Paper  className = {classes.mainBox}>\r\n                  <Box  >\r\n                    {gridBody}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n}","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     repo: \"/SurveyIt\", // For redirecting issues at GitHub Pages\r\n     // repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // list: {\r\n  //   padding: 0\r\n  // },\r\n  menu: {\r\n    backgroundColor: \"#4c546391\"\r\n  },\r\n  root: {\r\n    color: theme.palette.grey[300],\r\n    \"&:hover\": {\r\n      // backgroundColor: theme.palette.grey[700],\r\n      background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n      // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  // tag: {\r\n  //   margin: 2,\r\n  //   backgroundColor: \"#a2a2dc\",\r\n  //   margin: 2,\r\n  //   borderRadius: 5,\r\n  //   cursor: \"pointer\",\r\n  //   '&:hover': {\r\n  //     backgroundColor: \"#c3c3ec\",\r\n  //   },\r\n  //   fontSize: 10,\r\n  //   color: \"#2f4f4f\",\r\n  //   padding: 2,\r\n  //   width: \"max-content\"\r\n  // },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.Load(undefined, \"\")\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card className={classes.menu}>\r\n      <List disablePadding dense>\r\n        {categories.map(category => {\r\n          const labelId = `checkbox-list-label-${category.name}`\r\n          return (\r\n            <ListItem\r\n              className={classes.root}\r\n              key={`category-${category.id}`}\r\n              button\r\n              onClick={handleToggle(category.name)}\r\n\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n        }\r\n        )}\r\n      </List>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js'\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { UserContext } from '../index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        padding: 0\r\n    },\r\n    checkbox: {\r\n        padding: 3\r\n    },\r\n    inactive: {\r\n        color: theme.palette.grey[300],\r\n        textDecoration: \"none\"\r\n    },\r\n    menu: {\r\n        backgroundColor: \"#4c546391\"\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[300],\r\n    },\r\n    root: {\r\n        \"&:hover\": {\r\n            // backgroundColor: theme.palette.grey[700],\r\n            background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n            // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n        }\r\n    },\r\n    rotate: {\r\n        // transform: \"rotate(70deg)\"\r\n        animation: `spin 15s linear infinite`\r\n    }\r\n\r\n}))\r\nexport default function MainMenuComponent(props) {\r\n    const userInfo = React.useContext(UserContext)\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    console.log(\"mainmeni\")\r\n    console.log(userInfo)\r\n    const [state, setState] = React.useState({\r\n        links: [{\r\n            name: \"Новогодние\",\r\n            link: `random?tag=newyear`,\r\n            icon: <AcUnitIcon className={classes.rotate} />,\r\n        }, {\r\n            name: \"Домашняя\",\r\n            // link: `${properties.repo}/home`,\r\n            link: `home`,\r\n            icon: <HomeIcon />,\r\n        }, {\r\n            name: \"Рандом\",\r\n            // link: `${properties.repo}/random`,\r\n            link: `random`,\r\n            icon: <ContactSupportIcon />,\r\n        }, {\r\n            name: \"Купить кофе\",\r\n            link: `donate`,\r\n            icon: <FreeBreakfastIcon />,\r\n        }, {\r\n            name: \"История изменений\",\r\n            link: `news`,\r\n            icon: <UpdateIcon />,\r\n        }, {\r\n            name: \"О сайте\",\r\n            link: `about`,\r\n            icon: null\r\n        }],\r\n        selectedIndex: 0,\r\n    })\r\n    const handleListItemClick = (e, index, link) => {\r\n        history.push(`${properties.repo}/${link}`)\r\n    }\r\n    React.useEffect(() => {\r\n        if (!userInfo.userId === null)\r\n            return\r\n        state.links.push({\r\n            name: userInfo.loggedIn == true ? \"Выйти\" : \"Sign In / Sign Up\",\r\n            link: userInfo.loggedIn ? `logout` : `login`,\r\n            icon: null\r\n        })        \r\n        state.links.push({\r\n            name: \"Профиль\",\r\n            link: `profile`,\r\n            icon: null\r\n        })\r\n        state.links.push({\r\n            name: \"Создать\",\r\n            link: `createSurvey`,\r\n            icon: null\r\n        })\r\n        setState({ ...state, links: state.links })\r\n\r\n    }, [userInfo])\r\n    console.log(window.location)\r\n    return <>\r\n        <Card className={classes.menu}>\r\n            <List disablePadding dense>\r\n                {state.links.map((link, index) => <>\r\n                    {/* <Link to = {link.link} > test </Link>  */}\r\n                    <Link to={`${properties.repo}/${link.link}`}\r\n                        className={classes.inactive}\r\n                        // activeStyle={{\r\n                        //     color: \"red\",\r\n                        //     background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n                        // }}\r\n                        onClick={e => setState({ ...state, selectedIndex: index })} >\r\n                        <ListItem\r\n                            button\r\n                            // selected={state.selectedIndex === index}\r\n                            selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                            // selected = {true}\r\n                            className={classes.root}\r\n                        >\r\n                            <ListItemIcon\r\n                                className={classes.icon}>\r\n                                {link.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={link.name} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </>\r\n                )}\r\n            </List>\r\n        </Card>\r\n    </>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Link } from 'react-router-dom'\r\nimport AccountIconComponent from './AccountIconComponent'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"40px\",\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.info\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    color: 'black'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 10,\r\n    //width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   width: '12ch',\r\n    //   '&:focus': {\r\n    //     width: '100ch',\r\n    //   },\r\n    // },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles(props);\r\n  const { title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <a href = \"/about.html\">About</a> */}\r\n\r\n      <AppBar position=\"static\" className={classes.toolbar}>\r\n        <Toolbar >\r\n          <Link to={`${properties.repo}/home`}>\r\n            <img src=\"images/logo.png\" alt=\"\" className={classes.logo}></img>\r\n          </Link>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link to={`${properties.repo}/home`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Домой\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/news`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Новости\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/donate`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Помочь проекту\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/about`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Про сайт\r\n            </Link>\r\n          </Typography>\r\n\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          {props.state.loggedIn ? <>\r\n            <AccountIconComponent {...props}></AccountIconComponent>\r\n          </>\r\n            :\r\n            <>\r\n              <Link to={`${properties.repo}/login`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"text\" size=\"small\">\r\n                  Login\r\n            </Button>\r\n              </Link>\r\n              <Link to={`${properties.repo}/register`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  <Typography noWrap>Sign up</Typography>\r\n                </Button>\r\n              </Link>\r\n            </>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"username\": state.username, \"password\": state.password }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          setState({ ...state, error: true })\r\n        }\r\n        else if (response.status === 200) {\r\n          props.handleLoggedIn()\r\n          history.push(`${properties.repo}/home`)\r\n        }\r\n      }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <FormHelperText error={true}>\r\n              {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n            </FormHelperText>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.username}\r\n              onChange={handleOnChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={state.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/register`} variant=\"body2\">\r\n                  Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    matchingPassword: '',\r\n    gender: '',\r\n    age: '',\r\n    country: '',\r\n    errors: {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        // credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          setCountries([{ name: \"\", id: 0 }, ...result])\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0) {\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150) {\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\") {\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\") {\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/signUp`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"name\": state.name,\r\n          \"password\": state.password,\r\n          \"email\": state.email,\r\n          \"matchingPassword\": state.matchingPassword,\r\n          \"country\": state.country,\r\n          \"age\": state.age,\r\n          \"gender\": state.gender,\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 400) {\r\n          response.json().then(result => {\r\n\r\n            setState({\r\n              ...state, errors: {\r\n                ...state.errors,\r\n                serverErrors: result,\r\n                clientErrors: validate()\r\n              }\r\n            })\r\n          })\r\n        }\r\n        else if (response.status === 200) {\r\n          setState({\r\n            ...state,\r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"\r\n          })\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <Typography component=\"h2\">\r\n            {state.succesMessage}\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"login\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  defaultValue={state.name}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"gender\"\r\n                  label=\"Пол\"\r\n                  defaultValue={\"none\"}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                >\r\n                  <option value=\"\" ></option>\r\n                  <option value=\"male\" >Мужской</option>\r\n                  <option value=\"female\" >Женский</option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    max: 150,\r\n                    min: 0\r\n                  }}\r\n                  name=\"age\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"age\"\r\n                  type=\"number\"\r\n                  label=\"Возраст\"\r\n                  defaultValue={state.age}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  name=\"country\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Страна\"\r\n                  // native\r\n                  // defaultValue = {state.country}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                // autoFocus\r\n                >\r\n                  {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country =>\r\n                    <option key={`country-${country.id}`} value={country.name} >{country.name}</option>\r\n                  )}\r\n                  {/* </FixedSizeList> */}\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  defaultValue={state.email}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.password}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"matchingPassword\"\r\n                  label=\"Confirm your password\"\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.matchingPassword}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n                <FormHelperText error={true}>\r\n                  {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n                </FormHelperText>\r\n\r\n                {Array.from(state.errors.clientErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n                {Array.from(state.errors.serverErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/login`} variant=\"body2\">\r\n                  Уже есть аккаунт? Войти\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    // let arr = props.surveyJson.options.map(option => {\r\n    //   return {\r\n    //     name: option,\r\n    //     value: result.filter(vote => vote.options.includes(option)).length\r\n    //   }\r\n    // }).sort((a, b) => a.value - b.value)\r\n\r\n    console.log(result)\r\n\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n    console.log(state.options)\r\n  }\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  bar: {\r\n    color: \"red\",\r\n    fontSize: \"smaller\"\r\n  },\r\n}))\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined,\r\n    options: props.surveyJson.options.map(option => ({ name: option, chart: <br /> })),\r\n  })\r\n  const classes = useStyles()\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      console.log(\"choose smth\")\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n\r\n    state.options.forEach(option => {\r\n      let data = result.filter(opt => opt.name === option.name)\r\n      console.log(\"data\")\r\n      console.log(data)\r\n      option.name = option.name\r\n      option.value = data[0].value\r\n      let chart = <BarChart\r\n\r\n        width={14 * longestOption + 200}\r\n        height={20}\r\n        data={data}\r\n        barSize={10}\r\n        layout=\"vertical\">\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          // height={10}\r\n          hide\r\n          tick={props => {\r\n            return <text\r\n              x={props.x}\r\n              y={props.y}\r\n              textAnchor=\"end\"\r\n              fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n              fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n            >\r\n              {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n            </text>\r\n          }}\r\n          type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n        <Tooltip content={props => {\r\n          if (props.payload[0] != null) {\r\n            const newPayload = [{\r\n              name: 'голосов',\r\n              value: props.payload[0].payload.count\r\n            }]\r\n            return <DefaultTooltipContent {...props} payload={newPayload} />\r\n          }\r\n          return <DefaultTooltipContent {...props} />\r\n        }} />\r\n        <Bar background={{ fill: '#eee' }} dataKey=\"value\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n      option.chart = chart\r\n    })\r\n\r\n    setState({ ...state, options: state.options, voted: true })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if (state.voted)\r\n      return\r\n    setState({ ...state, choosedOption: event.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {/* {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n    \r\n        {props.surveyJson.options.map(option =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          test\r\n          </>\r\n        )}  */}\r\n      <RadioGroup value={props.surveyJson.choosedOption ? props.surveyJson.choosedOption : state.choosedOption} onChange={handleChange}>\r\n\r\n        {state.options.map((option, index) =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option.name}\r\n              control={<Radio />}\r\n              label={<div style={{ color: state.choosedOption === option.name ? \"blue\" : \"black\" }}>{option.name}{state.voted ? ` (${option.value}%)` : \"\"}</div>}\r\n            />\r\n            <div className={classes.bar}>\r\n              {option.chart}\r\n            </div>\r\n          </>\r\n        )}\r\n      </RadioGroup>\r\n      {/* {props.Answered && state.chart} */}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>\r\n    }\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl >\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n  }\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered && <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>}\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PopupContext } from '../index'\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        backgroundColor: \"#41465f\",\r\n    }\r\n}));\r\n\r\nexport default function CommentsComponent(props) {\r\n    const [state, setState] = React.useState({\r\n        commentError: \"\",\r\n        comment: \"\",\r\n        comments: props.surveyJson.comments,\r\n    })\r\n    const userInfo = React.useContext(UserContext)\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n    const handleCommentSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (state.comment.length < 5 || state.comment.length > 200) {\r\n            setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n            return\r\n        }\r\n        setState({ ...state, commentError: \"\" })\r\n\r\n        fetch(`${properties.address}/addComment`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    content: state.comment,\r\n                    surveyId: props.surveyJson.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (!result)\r\n                    return\r\n                console.log(result)\r\n                let newComments = state.comments\r\n                let date = new Date(result.date)\r\n                newComments.push({\r\n                    \"content\": state.comment,\r\n                    \"likes\": 0,\r\n                    \"user_id\": result.user_id,\r\n                    \"username\": \"admin\",\r\n                    \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n                    \"id\": result.id,\r\n                })\r\n\r\n                setState({ ...state, comments: newComments })\r\n                if (props.setCommentsLength)\r\n                    props.setCommentsLength(newComments.length)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCommentLike = comment => {\r\n\r\n        if (userInfo.userId === null) {\r\n            setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n            return\r\n        }\r\n\r\n        comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n        comment.voted = !comment.voted\r\n        setState({ ...state, comments: state.comments })\r\n\r\n        fetch(`${properties.address}/commentLike`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ commentId: comment.id })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n                    comment.voted = !comment.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            }).then(result => {\r\n                if (result) {\r\n                    // new_comments = comments.find(comment -> comment.id === commentId)\r\n                    comment.likes = result.likes\r\n                    comment.voted = result.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDeleteComment = commentId => {\r\n        fetch(`${properties.address}/deleteComment`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    commentId: commentId\r\n                }),\r\n                redirect: 'follow',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n                    setState({ ...state, comments: newComments })\r\n                    if (props.setCommentsLength)\r\n                        props.setCommentsLength(newComments.length)\r\n                    setMessageFunc(\"Комментарий удален :)\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            <List>\r\n                {state.comments.map(comment => <>\r\n                    <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                                {comment.username && comment.username.charAt(0)}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={<>\r\n                                {comment.username + \"  \"}\r\n                                <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                                    {comment.date}\r\n                                </Typography>\r\n                            </>}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            style={{ display: \"inline\" }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {comment.content}\r\n                                        </Typography>\r\n                                        <div style={{ marginLeft: \"auto\" }}>\r\n                                            {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                                            {userInfo.userId === props.surveyJson.userId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                                                <DeleteOutlineOutlinedIcon />\r\n                                            </IconButton>}\r\n                                            <Typography component=\"span\">\r\n                                                {comment.likes != 0 && comment.likes}\r\n                                            </Typography>\r\n\r\n                                            <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                                                <ThumbUpAltIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </>)}\r\n            </List>\r\n            <FormControl style={{ display: \"flex\" }}>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <TextField\r\n                        style={{ display: \"flex\" }}\r\n                        id=\"standard-textarea\"\r\n                        label=\"Комментировать\"\r\n                        placeholder=\"\"\r\n                        multiline\r\n                        onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n                    />\r\n                    {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n                    <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n                </form>\r\n            </FormControl>\r\n        </CardContent>\r\n    </Collapse>\r\n\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\nimport CommentsComponent from \"./CommentsComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentsCount: props.surveyJson.comments.length\r\n  })\r\n  \r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = () => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const handleLike = e => {\r\n    if (userInfo.userId === null){\r\n      setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n      return\r\n    }\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          setMessageFunc(\"Удалено :)\")\r\n          // props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const setCommentsLength = count => {\r\n    setState({ ...state, commentsCount: count })\r\n  }\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`${properties.repo}/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"8\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.commentsCount})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <CommentsComponent surveyJson={props.surveyJson}\r\n        expanded={state.expanded}\r\n        setCommentsLength={setCommentsLength}\r\n      />\r\n\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n\r\n  const history = useHistory()\r\n  // const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered\r\n  })\r\n  const img = props.surveyJson.image;\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    e.preventDefault()\r\n\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n\r\n  const returnBody = e => {\r\n    let surveyBody\r\n    let params = { \"getStats\": getStats, \"Answered\": state.answered, \"handleSubmit\": handleSubmit, \"surveyJson\": props.surveyJson, \"HelperText\": state.helperText, \"History\": history }\r\n    switch (props.surveyJson.type) {\r\n      case \"Single\":\r\n        surveyBody = <SingleSurveyComponent props={params} />\r\n        break\r\n      case \"Multiple\":\r\n        surveyBody = <MultipleSurveyComponent props={params} />\r\n        break\r\n      case \"Rating\":\r\n        surveyBody = <RatingSurveyComponent props={params} />\r\n        // body = \"404\"\r\n        break\r\n      default:\r\n        surveyBody = <div>Ой, с этим опросом что-то не так</div>\r\n    }\r\n    console.log('setting answered to ' + state.answered)\r\n    let baseSurvey = <CardComponent\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      LoggedInUserId={props.UserId}\r\n      LoggedInUsername={props.UserName}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {surveyBody}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <img alt=\"\" style={{ width: \"100%\" }} src={this.state.img}></img>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </CardComponent >\r\n    return baseSurvey\r\n  }\r\n  return <>\r\n    {returnBody()}\r\n  </>\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'Single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'Rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result){\r\n            setMessageFunc(\"Опрос создан :)\")\r\n            history.push(`${properties.repo}/new`)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'Single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'Multiple':\r\n      case 'Single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'Rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('Single')} color={state.type === 'Single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('Multiple')} color={state.type === 'Multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('Rating')} color={state.type === 'Rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <BaseSurveyComponent\r\n              surveyJson={{\r\n                type: state.type,\r\n                comments: [],\r\n                tags: [],\r\n                options: Array.from(state.options),\r\n                rows: Array.from(state.rows),\r\n                columns: Array.from(state.columns)\r\n              }} />\r\n            {/* <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent> */}\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const history = useHistory();\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: props.Error,\r\n    hasMore: props.HasMore,\r\n    isLoading: props.IsLoading,\r\n    surveys: props.Surveys,\r\n    index: props.Index,\r\n    activeType: props.ActiveType\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    // alert('Удалено :)')\r\n  }\r\n  const load = (tag, type) => {\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n\r\n    if (props.Mode)\r\n      request\r\n        .get(url)\r\n        .withCredentials()\r\n        .then((results) => {\r\n          const new_list = results.body.map(s =>\r\n            <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n          setState({\r\n            ...state,\r\n            hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n            isLoading: false,\r\n            surveys: [\r\n              ...state.surveys,\r\n              ...new_list\r\n            ],\r\n            index: state.index + 1\r\n          })\r\n        })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (error || isLoading || !hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  const {\r\n    error,\r\n    hasMore,\r\n    isLoading,\r\n  } = state;\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {error &&\r\n        <div style={{ color: '#900' }}>\r\n          {error}\r\n        </div>\r\n      }\r\n      {isLoading &&\r\n        <div>Loading...</div>\r\n      }\r\n      {!hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PieChart, Pie, Cell} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n// const bar_data = [\r\n//   {\r\n//     name: 'Tom Cruise', value: 20,\r\n//   },\r\n//   {\r\n//     name: 'Will Smith', value: 80,\r\n//   },\r\n//   {\r\n//     name: 'Brad Pitt', value: 80,\r\n//   },\r\n// ];\r\n\r\n\r\n// const multiple_data = {\r\n//   votes: [\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'JustUser'\r\n//       },\r\n//       options: [\"Fish\", \"Meat\", \"Vegetables\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 55,\r\n//         country: 'Ukraine',\r\n//         username: 'Sabrina'\r\n//       },\r\n//       options: [\"Fish\", \"Fruit\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'Frank'\r\n//       },\r\n//       options: [\"Meat\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 45,\r\n//         country: 'Ukraine',\r\n//         username: 'Joshua'\r\n//       },\r\n//       options: [\"Meat\",\"Alcohol\"]\r\n//     },\r\n//   ]\r\n// }\r\n// const single_data = {\r\n//     votes: [\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 20,\r\n//                 country: 'Ukraine',\r\n//                 username: 'JustUser'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 23,\r\n//                 country: 'UK',\r\n//                 username: 'Drago777'\r\n//             },\r\n//             option: \"Will Smith\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 18,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 54,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 42,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 33,\r\n//                 country: 'Russia',\r\n//                 username: 'Carol'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'female',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'Rachel'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'John'\r\n//             },\r\n//             option: \"Chriss Pratt\"\r\n//         },\r\n//     ]\r\n// }\r\n\r\nconst rating_data = [\r\n  {\r\n      user: {\r\n          sex: 'male',\r\n          age: 32,\r\n          country: 'Russia',\r\n          username: 'John'\r\n      },\r\n      rowscolumns: [\r\n        \"Халк\",\r\n        \"Железяка\",\r\n        \"Молоток с Асгарда\",\r\n      ]\r\n    },\r\n    {\r\n        user: {\r\n            sex: 'male',\r\n            age: 32,\r\n            country: 'Russia',\r\n            username: 'John'\r\n        },\r\n        rowscolumns: [\r\n          \"Халк\",\r\n          \"Молоток с Асгарда\",\r\n          \"Железяка\",\r\n        ]\r\n      },\r\n      {\r\n          user: {\r\n              sex: 'male',\r\n              age: 32,\r\n              country: 'Russia',\r\n              username: 'John'\r\n          },\r\n          rowscolumns: [\r\n            \"Халк\",\r\n            \"Молоток с Асгарда\",\r\n            \"Железяка\",\r\n          ]\r\n        },\r\n        {\r\n            user: {\r\n                sex: 'male',\r\n                age: 32,\r\n                country: 'Russia',\r\n                username: 'John'\r\n            },\r\n            rowscolumns: [\r\n              \"Молоток с Асгарда\",\r\n              \"Железяка\",\r\n              \"Халк\",\r\n            ]\r\n          },\r\n          {\r\n              user: {\r\n                  sex: 'male',\r\n                  age: 32,\r\n                  country: 'Russia',\r\n                  username: 'John'\r\n              },\r\n              rowscolumns: [\r\n                \"Молоток с Асгарда\",\r\n                \"Железяка\",\r\n                \"Халк\",\r\n              ]\r\n            },\r\n            {\r\n                user: {\r\n                    sex: 'male',\r\n                    age: 32,\r\n                    country: 'Russia',\r\n                    username: 'John'\r\n                },\r\n                rowscolumns: [\r\n                  \"Молоток с Асгарда\",\r\n                  \"Халк\",\r\n                  \"Железяка\",\r\n                ]\r\n              },\r\n              {\r\n                  user: {\r\n                      sex: 'male',\r\n                      age: 32,\r\n                      country: 'Russia',\r\n                      username: 'John'\r\n                  },\r\n                  rowscolumns: [\r\n                    \"Молоток с Асгарда\",\r\n                    \"Халк\",\r\n                    \"Железяка\",\r\n                  ]\r\n                },\r\n                {\r\n                    user: {\r\n                        sex: 'male',\r\n                        age: 32,\r\n                        country: 'Russia',\r\n                        username: 'John'\r\n                    },\r\n                    rowscolumns: [\r\n                      \"Железяка\",\r\n                      \"Молоток с Асгарда\",\r\n                      \"Халк\",\r\n                    ]\r\n                  },\r\n                  {\r\n                      user: {\r\n                          sex: 'male',\r\n                          age: 32,\r\n                          country: 'Russia',\r\n                          username: 'John'\r\n                      },\r\n                      rowscolumns: [\r\n                        \"Железяка\",\r\n                        \"Молоток с Асгарда\",\r\n                        \"Халк\",\r\n                      ]\r\n                    },\r\n                    {\r\n                        user: {\r\n                            sex: 'male',\r\n                            age: 32,\r\n                            country: 'Russia',\r\n                            username: 'John'\r\n                        },\r\n                        rowscolumns: [\r\n                          \"Железяка\",\r\n                          \"Молоток с Асгарда\",\r\n                          \"Халк\",\r\n                        ]\r\n                      },\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 40,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //     \"Молоток с Асгарда\"\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 16,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 32,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n]\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: 'Мужчины',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Женщины',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Все',\r\n  }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"75%\",\r\n        // paddingLeft: 100,\r\n        // paddingRight: 20,\r\n        marginLeft: 40\r\n    }\r\n});\r\n\r\nconst renderCustomizedLabel = (props) => {\r\n    \r\n    const {cx, cy, midAngle, innerRadius, outerRadius, percent, value} = props\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    const option = props.name\r\n\r\n    return (<>\r\n    {value === 0 ? '' : \r\n    <>\r\n      <text x={x} y={y} fontSize = {14} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n      <text \r\n        x = {cx + (outerRadius + 30) * Math.cos(-midAngle * RADIAN)} \r\n        y = {cy + (outerRadius + 30) * Math.sin(-midAngle * RADIAN)}>\r\n        {option}\r\n      </text>\r\n      </>\r\n    }\r\n    </>);\r\n};\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n\r\nexport default function StatisticsComponent(props){\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([0,99]);\r\n    const [genderValue, setGenderValue] = React.useState(2);\r\n    const [fetchedData, setFetchedData] = React.useState([])\r\n    const [data, setData] = React.useState([])\r\n    const [barData, setBarData] = React.useState([])\r\n    const [ratingData, setRatingData] = React.useState([])\r\n    const [filteredDataLength, setFilteredDataLength] = React.useState(0)\r\n    const [legend, setLegend] = React.useState({})\r\n    \r\n    const [barOptions, setBarOptions] = React.useState([]) // For multiple survey\r\n\r\n    const renderLegend = (props) => {\r\n      const { payload } = props;\r\n    \r\n      return (\r\n        Object.keys(legend).map(key => \r\n          <text  style = {{textAlign: \"center\"}}>\r\n            <text style = {{fontWeight: \"bold\", color: \"steelblue\"}}>{key}</text> : \r\n            {/* {legend[key].map(item => <text style = {{fontStyle: \"italic\"}}> {item} </text>)} */}\r\n            <text style = {{fontStyle: \"italic\"}}> {legend[key].join(\" + \")} </text>\r\n          </text>\r\n        )\r\n      );\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   fetch(`${properties.address}/getStatistics?surveyId=${props.SurveyId}`, \r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include'\r\n    //   })\r\n    //   .then(response => {\r\n    //       if (response.status === 200){\r\n    //         response.json().then(result => {\r\n    //           setFetchedData(result)\r\n    //         })\r\n    //       }\r\n    //     }\r\n    //   )\r\n    // }, [props.SurveyId])\r\n\r\n    React.useEffect(() => {\r\n      if (fetchedData.length === 0)\r\n        return\r\n      // Filtering by gender and age\r\n      let gender = genderValue === 0 ? 'male' : genderValue === 1 ? 'female' : ''\r\n      let filtered_data = fetchedData.filter(elem => \r\n          (elem.user.age > value[0] && elem.user.age < value[1])\r\n          && ((gender !== '' && elem.user.sex === gender) || (gender === ''))\r\n      )\r\n      setFilteredDataLength(filtered_data.length)\r\n\r\n      // Setting data for Pie Chart (Single and Multiple)\r\n      let arr = []\r\n      switch (props.Type){\r\n        case \"Multiple\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.options.includes(option)).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        case \"Single\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.option === option).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        default:\r\n      }\r\n      setData(arr)\r\n      \r\n      // Setting data for Bar Chart (Multiple)\r\n      if (props.Type === \"Multiple\"){\r\n        let bar_arr = props.Options.map(option => {\r\n          return {\r\n            name: option,\r\n            value: filtered_data.filter(elem => elem.options.includes(option)).length / filtered_data.length * 100\r\n          }\r\n        }).sort((a,b) => b.value - a.value)\r\n        setBarData(bar_arr)\r\n      }\r\n\r\n      // Setting data for Bar Chart (Rating)\r\n      if (props.Type === \"Rating\" && filtered_data.length !== 0){\r\n        let rating_arr = []\r\n\r\n        let accepted = []\r\n        let rows = [...props.Rows]\r\n        let index = 0\r\n        let max = 0\r\n        let max_arr = []\r\n        let bar = {}\r\n        let rating = {}\r\n\r\n        while (rows.length !== 0){\r\n          bar = {}\r\n          rows.forEach(row => {\r\n            bar[row] = filtered_data.filter(rd => rd.rowscolumns[index] === row).length / (filtered_data.length) * 100\r\n          })\r\n          let sum = Object.values(bar).reduce((a,b) => a + b, 0)\r\n          max = Math.max(...Object.values(bar))\r\n\r\n          max_arr = Object.keys(bar).filter(key => bar[key] === max)\r\n          accepted.push(...max_arr)\r\n          rating[props.Columns[index]] = [...max_arr]\r\n          let obj = {}\r\n          obj.name = props.Columns[index]\r\n          rows.forEach(elem => {\r\n            if (bar[elem] !== 0)\r\n              obj[elem] = bar[elem] / sum * 100\r\n          })\r\n          rating_arr.push(obj)\r\n\r\n          index++\r\n          rows = props.Rows.filter(row => !accepted.includes(row))\r\n        }\r\n        setLegend(rating)\r\n\r\n        setRatingData(rating_arr)\r\n      }\r\n\r\n    }, [fetchedData, value, genderValue])\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleGenderChange = (event, newValue) => {\r\n      setGenderValue(newValue)\r\n    }\r\n\r\n    return (<>\r\n    <Grid container>\r\n    <Grid container>\r\n        <Grid item xs = {7}>\r\n          <Typography color = 'primary'>\r\n            {filteredDataLength} голоса\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              Возраст\r\n            </Typography>\r\n            <Slider\r\n              value={value}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {99}\r\n            />\r\n            <Slider\r\n              value={genderValue}\r\n              onChange={handleGenderChange}\r\n              valueLabelDisplay=\"off\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {2}\r\n              marks = {marks}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs = {5}>\r\n          {(props.Type === \"Multiple\" || props.Type === \"Single\") && \r\n            <PieChart width={200} height={200}>\r\n            <Pie\r\n              data={data}\r\n              cx='50%'\r\n              cy='50%'\r\n              labelLine={true}\r\n              label={renderCustomizedLabel}\r\n              outerRadius={45}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {\r\n                data.map((entry, index) => \r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                )\r\n              }\r\n            </Pie>\r\n          </PieChart>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs = {12} alignItems = 'center' justify = 'center'>\r\n            \r\n          {props.Type === \"Multiple\" && \r\n          <BarChart\r\n            width={400}\r\n            height={200}\r\n            data={barData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain = {[0, 100]} />\r\n            <Tooltip />\r\n            <Legend formatter = {() => `% проголосовавших за категорию`}/>\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n          </BarChart>}\r\n          {props.Type === \"Rating\" && \r\n          <>\r\n          <BarChart\r\n            width={500}\r\n            height={200}\r\n            data={ratingData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend \r\n              content={renderLegend} \r\n              wrapperStyle = {{textAlign: \"center\"}}\r\n            />\r\n            {props.Rows.map((row,index) => \r\n              <Bar dataKey = {row} stackId=\"a\" fill={COLORS[index % COLORS.length]} />\r\n            )}\r\n          </BarChart>\r\n          </>}\r\n      </Grid>\r\n    </Grid>\r\n    </>)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`${properties.repo}/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"   height=\"300\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={3} center={[50, 50]}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PopupContext } from '../../index'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    const getRandom = e => {\r\n        fetch(`${properties.address}/getRandom${window.location.search}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                setState({ ...state, survey: result, isLoading: false })\r\n                if (result == null)\r\n                    setMessageFunc(\"Ничего не найдено :(\")\r\n            })\r\n    }\r\n    const onSurveyDeleteFunc = e => {\r\n        setState({ ...state, isLoading: true });\r\n        getRandom()\r\n    }\r\n    React.useEffect(() => {\r\n        getRandom()\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={3} >\r\n                </Grid>\r\n                <Grid item sm={6} >\r\n                    {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} onSurveyDeleteFunc={onSurveyDeleteFunc} />}\r\n                    <button title={\"Дизайн современных кнопок - обращаться по адресу languageblog96@gmail.com\"} onClick={() => { setState({ ...state, isLoading: true }); getRandom() }}>press me</button>\r\n                    {/* <div style={{ height: \"200px\", border: \"1px solid black\" }}> */}\r\n\r\n                    <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n                    {/* </div> */}\r\n                </Grid>\r\n                <Grid item sm={3} >\r\n                    <CategoriesComponent />\r\n                    <MainMenuComponent />\r\n                </Grid>\r\n            </Grid>\r\n        </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\nimport CommentsComponent from \"../CommentsComponent\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        history.push(`${properties.repo}/profile`)\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n        {/* <CommentsComponent /> */}\r\n    </>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nexport default function NewsPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n    console.log(\"importing...\")\r\n    const markdownFiles = importAll(require.context('../../news', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n        React.useEffect(() => {\r\n            async function fetchData() {\r\n                const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                    .catch((err) => console.error(err))\r\n                setPosts(posts)\r\n            }\r\n            fetchData()\r\n        }, [])\r\n\r\n    const renderers = {\r\n        overrides: {\r\n            p: { component: Typography, props: { paragraph: true } },\r\n            li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n            h4: { component: Typography, props: { variant: \"h6\" } }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Card>\r\n                        {posts.map((post, idx) => (\r\n                            <>\r\n\r\n                                <ReactMarkdown options={renderers}>\r\n\r\n                                    {\r\n                                        // <Typography> post </Typography>\r\n                                        post\r\n                                    }\r\n                                </ReactMarkdown>\r\n                                <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                            </>))}\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MainMenuComponent />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { properties } from '../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport CategoriesComponent from \"./CategoriesComponent\"\r\nimport MainMenuComponent from \"./MainMenuComponent\"\r\nimport MapChart from './MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${props.SurveyId}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }, [])\r\n    return <>\r\n        {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} />}</>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function AboutPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../about', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Card>\r\n                        {posts.map((post, idx) => (\r\n                            <>\r\n                                <ReactMarkdown options={renderers}>\r\n                                    {post}\r\n                                </ReactMarkdown>\r\n                                <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                            </>))}\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MainMenuComponent />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function DonatePageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../donate', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item xs={9}>\r\n                    <Card>\r\n                        {posts.map((post, idx) => (\r\n                            <>\r\n                                <ReactMarkdown options={renderers}>\r\n                                    {post}\r\n                                </ReactMarkdown>\r\n                                <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                            </>))}\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MainMenuComponent />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport MainMenuComponent from './Components/MainMenuComponent'\r\nimport HeaderComponent from './Components/HeaderComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport InfiniteScroll from './Components/InfiniteScroll'\r\nimport StatisticsComponent from './Components/StatisticsComponent'\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport NewsPageComponent from \"./Components/Pages/NewsPageComponent\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport AboutPageComponent from \"./Components/Pages/AboutPageComponent\";\r\nimport DonatePageComponent from \"./Components/Pages/DonatePageComponent\";\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nfunction App() {\r\n  const [message, setMessage] = React.useState(\"\")\r\n  const [hidden, setHidden] = React.useState(true)\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    reload: () => { },\r\n    activeType: \"\",\r\n    activeTag: \"\"\r\n  })\r\n\r\n  // This function executes when categoriesComponent is triggered. It fetches new data\r\n  // depending on categories and sets Type of surveys filter to default (empty string \"\")\r\n  // thus updating child TabsComponent and erasing filters\r\n  const customFunc = (tag, type) => {\r\n    // console.log('reloading...' + \"tag = \" + tag + \" type = \" + type)\r\n    setState({ ...state, activeType: type })\r\n    setTimeout(() => { state.reload && state.reload(tag, type) }, 1000)\r\n  }\r\n\r\n  const handler = load => {\r\n    // console.log('setting reload to ' + load)\r\n    setState({ ...state, reload: load })\r\n  }\r\n  const [userInfo, setUserInfo] = React.useState({\r\n    username: null,\r\n    userId: null,\r\n    loggedIn: false\r\n  })\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n        else {\r\n          setUserInfo({\r\n            ...userInfo,\r\n            username: null,\r\n            userId: null,\r\n            loggedIn: false\r\n          })\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setUserInfo({\r\n            ...userInfo,\r\n            username: result.username,\r\n            userId: result.user_id,\r\n            loggedIn: true\r\n          })\r\n        }\r\n\r\n      })\r\n  }\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n\r\n  const history = createBrowserHistory()\r\n  let value = history.location.pathname === \"/new\" || history.location.pathname === \"/home\" ? 1 : 0\r\n\r\n  const setMessageFunc = msg => {\r\n    setMessage(msg)\r\n    setHidden(false)\r\n    setTimeout(() => {\r\n      setHidden(true)\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <UserContext.Provider value={userInfo}>\r\n      <PopupContext.Provider value={setMessageFunc}>\r\n        <Router>\r\n          <Box>\r\n            <Fade in={!hidden} timeout={500}>\r\n              <div>\r\n                <PopupComponent message={message} />\r\n              </div>\r\n            </Fade>\r\n\r\n\r\n            <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}>\r\n              <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={9} >\r\n                    <TabsComponent DefaultType={state.activeType} Load={customFunc} Value={value}>\r\n                      <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                      <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"New\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                    </TabsComponent>\r\n                  </Grid>\r\n                  <Grid item sm={3} style={{ paddingRight: \"10px\" }}>\r\n                    <Hidden only=\"xs\">\r\n                      <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                        <CategoriesComponent LoggedIn={state.loggedIn} Load={customFunc}></CategoriesComponent>\r\n                      </Box>\r\n                      <MainMenuComponent />\r\n                    </Hidden>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Route>\r\n            <Route path={`${properties.repo}/random`}><RandomPageComponent /></Route>\r\n            <Route path={`${properties.repo}/login`}><LoginComponent handleLoggedIn={checkLoginStatus} /></Route>\r\n            <Route path={`${properties.repo}/createSurvey`}><AddSurveyComponent /></Route>\r\n            <Route path={`${properties.repo}/profile`}><ProfileComponent /></Route>\r\n            <Route path={`${properties.repo}/register`}><SignUpComponent /></Route>\r\n            <Route path={`${properties.repo}/registrationConfirm`}><ConfirmRegistration /></Route>\r\n            <Route path={`${properties.repo}/survey/:id`}><SurveyPageComponent /></Route>\r\n            <Route path={`${properties.repo}/news`}><NewsPageComponent /></Route>\r\n            <Route path={`${properties.repo}/donate`}> <DonatePageComponent /> {/* <SendFeedbackComponent /> */} </Route>\r\n            <Route path={`${properties.repo}/about`}><AboutPageComponent /></Route>\r\n            <Copyright />\r\n          </Box>\r\n        </Router>\r\n      </PopupContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          // backgroundColor: grey[800],\r\n          background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n        },\r\n        \"&$selected:hover\": {\r\n          backgroundColor: grey[700],\r\n        },\r\n      },\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    secondary: {\r\n      main: \"#3d608c\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 13,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}