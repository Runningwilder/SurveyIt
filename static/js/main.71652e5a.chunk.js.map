{"version":3,"sources":["news sync nonrecursive /.md$","news/news1.md","news/news2.md","about sync nonrecursive /.md$","about/news1.md","donate sync nonrecursive /.md$","donate/donate.md","Properties/Properties.js","Components/CategoriesComponent.js","Components/MainMenuComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CommentsComponent.js","Components/CardComponent.js","Components/BaseSurveyComponent.js","Components/InfiniteScroll.js","Components/TabsComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/ProfileComponent.js","Components/Pages/SurveyPageComponent.js","Components/Pages/NewsPageComponent.js","Components/SeparateSurveyComponent.js","Components/Pages/AboutPageComponent.js","Components/Pages/DonatePageComponent.js","Components/PopupComponent.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","properties","useStyles","makeStyles","theme","menu","backgroundColor","root","color","palette","grey","background","checkbox","padding","CategoriesComponent","props","classes","React","useState","categories","checked","setCategories","setChecked","useEffect","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","name","Card","className","List","disablePadding","dense","value","labelId","ListItem","key","button","onClick","currentIndex","indexOf","checkBoxArr","push","splice","body","includes","headers","JSON","stringify","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","list","inactive","textDecoration","icon","common","white","rotate","animation","MainMenuComponent","setMessageFunc","useContext","PopupContext","userInfo","UserContext","checkLoginStatus","useHistory","LoginContext","links","link","profileLinks","callback","state","setState","index","to","selectedIndex","selected","window","location","pathname","search","loggedIn","open","Collapse","in","timeout","unmountOnExit","MapChart","content","setContent","markers","data-tip","projection","height","projectionConfig","zoom","center","geography","geographies","geo","onMouseEnter","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","r","expand","transform","transition","transitions","create","duration","shortest","expandOpen","KeyPressedContext","createContext","RandomComponent","isLoading","survey","expanded","keyPressed","commentsExpanded","imageOpen","getRandom","handleExpandMapClick","console","log","handleClose","opened","hintOpen","onkeyup","keyCode","Provider","Grid","item","sm","margin","marginTop","position","IconButton","display","clsx","borderTop","width","zIndex","locations","BaseSurveyComponent","openMap","bindKeys","surveyJson","onSurveyDeleteFunc","Button","variant","Dialog","onClose","right","alt","src","SingleSurveyComponent","keyUpEvent","error","voted","answered","options","helperText","HelperText","chart","undefined","handleSubmit","preventDefault","submitOptions","validate","processDataFunc","longestOption","elem","sort","e1","e2","length","choosedOptions","data","layout","type","hide","tick","x","y","textAnchor","fontWeight","payload","dataKey","newPayload","count","values","handleChange","event","target","Answered","getStats","newValue","FormControl","component","flipped","onSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","onChange","label","FormHelperText","bar","fontSize","choosedOption","forEach","opt","barSize","RadioGroup","Radio","RatingSurveyComponent","errors","duplicate","selectedValues","Array","rows","stats","totalError","Set","val","size","updatedStats","lightenColor","percent","num","parseInt","amt","Math","round","R","B","G","toString","slice","TableContainer","Paper","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","Typography","title","floor","oldValues","i","avatar","CommentsComponent","commentError","comment","comments","handleCommentSubmit","surveyId","newComments","date","Date","user_id","getFullYear","getMonth","getDate","setCommentsLength","CardContent","paddingLeft","alignItems","ListItemAvatar","Avatar","aria-label","username","charAt","secondary","Fragment","wordBreak","marginLeft","userId","commentId","likes","handleCommentLike","Divider","TextField","placeholder","multiline","onBlur","header","main","tag","typography","fontFamily","action","CardComponent","answeredAmount","answered_amount","anchorEl","commentsCount","handleLike","Menu","keepMounted","Boolean","MenuItem","CardHeader","currentTarget","subheader","Children","children","child","cloneElement","CardActions","disableSpacing","Tooltip","tags","marginRight","marginBottom","paragraph","aria-expanded","surveyCard","history","img","image","params","choosedIndex","validatingFunc","History","tabindex","container","xs","maxWidth","cursor","InfiniteScroll","ref","useRef","hasMore","surveys","load","clearSurveys","url","Mode","request","get","withCredentials","results","new_list","s","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","ActiveType","SetReloadFunction","ElementId","tabs","mainBox","indicator","TabsComponent","path","split","pop","activeType","reloadFunc","handleFilter","newType","changeReloadFunc","Box","paddingRight","paddingTop","spacing","justify","Tabs","TabIndicatorProps","selectionFollowsFocus","centered","Tab","Link","paper","flexDirection","form","submit","LoginComponent","password","jwt","connected","handleOnChange","Container","CssBaseline","noValidate","required","fullWidth","autoComplete","autoFocus","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","serverErrors","clientErrors","succesMessage","countries","setCountries","errs","defaultValue","select","SelectProps","native","max","min","from","el","border","borderRadius","borderColor","boxShadow","input","popper","fetchedTag","h1","TagsComponent","setTags","setValue","setAnchorEl","fetchedTags","setFetchedTags","CallBack","handleClick","Input","some","Popper","anchorOrigin","vertical","horizontal","transformOrigin","elevation","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","InputLabel","htmlFor","c","renderBody","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","UserId","Username","CircularProgress","ListItemSecondaryAction","handleOpen","DialogTitle","DialogContent","DialogContentText","DialogActions","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","NewsPageComponent","posts","setPosts","markdownFiles","require","reverse","a","Promise","all","file","res","text","catch","err","fetchData","renderers","overrides","p","li","h4","post","idx","SurveyId","AboutPageComponent","DonatePageComponent","popup","bottom","left","info","PopupComponent","Slide","direction","mountOnEnter","Copyright","href","App","activeTag","hidden","msg","setTimeout","Fade","exact","render","Hidden","only","top","christmasTheme","createMuiTheme","MuiListItem","shape","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.71652e5a.chunk.js","sourcesContent":["var map = {\n\t\"./news1.md\": 550,\n\t\"./news2.md\": 551\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 549;","module.exports = __webpack_public_path__ + \"static/media/news1.4399bb34.md\";","module.exports = __webpack_public_path__ + \"static/media/news2.2268c892.md\";","var map = {\n\t\"./news1.md\": 553\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 552;","module.exports = __webpack_public_path__ + \"static/media/news1.a4a7d84c.md\";","var map = {\n\t\"./donate.md\": 555\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 554;","module.exports = __webpack_public_path__ + \"static/media/donate.ac8b0735.md\";","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     repo: \"/SurveyIt\", // For redirecting issues at GitHub Pages\r\n     // repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    backgroundColor: \"#4c546391\"\r\n  },\r\n  root: {\r\n    color: theme.palette.grey[300],\r\n    \"&:hover\": {\r\n      background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  // tag: {\r\n  //   margin: 2,\r\n  //   backgroundColor: \"#a2a2dc\",\r\n  //   margin: 2,\r\n  //   borderRadius: 5,\r\n  //   cursor: \"pointer\",\r\n  //   '&:hover': {\r\n  //     backgroundColor: \"#c3c3ec\",\r\n  //   },\r\n  //   fontSize: 10,\r\n  //   color: \"#2f4f4f\",\r\n  //   padding: 2,\r\n  //   width: \"max-content\"\r\n  // },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card className={classes.menu}>\r\n      <List disablePadding dense>\r\n        {categories.map(category => {\r\n          const labelId = `checkbox-list-label-${category.name}`\r\n          return (\r\n            <ListItem\r\n              className={classes.root}\r\n              key={`category-${category.id}`}\r\n              button\r\n              onClick={handleToggle(category.name)}\r\n\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n        }\r\n        )}\r\n      </List>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js'\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { UserContext } from '../index'\r\nimport { PopupContext } from '../index'\r\nimport { LoginContext } from '../index'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        padding: 0\r\n    },\r\n    checkbox: {\r\n        padding: 3\r\n    },\r\n    inactive: {\r\n        color: theme.palette.grey[300],\r\n        textDecoration: \"none\"\r\n    },\r\n    menu: {\r\n        backgroundColor: \"#4c546391\"\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[300],\r\n    },\r\n    root: {\r\n        \"&:hover\": {\r\n            // backgroundColor: theme.palette.grey[700],\r\n            background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n            // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n        },\r\n        color: theme.palette.common.white,\r\n    },\r\n    rotate: {\r\n        // transform: \"rotate(70deg)\"\r\n        animation: `spin 15s linear infinite`\r\n    }\r\n\r\n}))\r\nexport default function MainMenuComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const userInfo = React.useContext(UserContext)\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const checkLoginStatus = React.useContext(LoginContext)\r\n    const signOut = e => {\r\n        fetch(`${properties.address}/signout`,\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // props.CheckLoginStatus()\r\n                    checkLoginStatus()\r\n                    setMessageFunc(\"Вы вышли :(\")\r\n\r\n                }\r\n            })\r\n    }\r\n    const [state, setState] = React.useState({\r\n        links: [{\r\n            name: \"Новогодние\",\r\n            link: `random?tag=newyear`,\r\n            icon: <AcUnitIcon className={classes.rotate} />,\r\n        }, {\r\n            name: \"Домашняя\",\r\n            // link: `${properties.repo}/home`,\r\n            link: `home`,\r\n            icon: <HomeIcon />,\r\n        }, {\r\n            name: \"Рандом\",\r\n            // link: `${properties.repo}/random`,\r\n            link: `random`,\r\n            icon: <ContactSupportIcon />,\r\n        }, {\r\n            name: \"Купить кофе\",\r\n            link: `donate`,\r\n            icon: <FreeBreakfastIcon />,\r\n        }, {\r\n            name: \"История изменений\",\r\n            link: `news`,\r\n            icon: <UpdateIcon />,\r\n        }, {\r\n            name: \"О сайте\",\r\n            link: `about`,\r\n            icon: <InfoIcon />\r\n        }],\r\n        profileLinks: [{\r\n            name: \"Профиль\",\r\n            link: `profile`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Создать\",\r\n            link: `createSurvey`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Выйти\",\r\n            link: `signout`,\r\n            icon: null,\r\n            callback: signOut\r\n        }],\r\n        // selectedIndex: 0,\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setState({ ...state, open: !state.open })\r\n    }\r\n\r\n    return <>\r\n        <Card className={classes.menu}>\r\n            <List disablePadding dense>\r\n                {state.links.map((link, index) => <>\r\n                    <Link to={`${properties.repo}/${link.link}`}\r\n                        className={classes.inactive}\r\n                        onClick={e => setState({ ...state, selectedIndex: index })}\r\n                    >\r\n                        <ListItem\r\n                            button\r\n                            selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                            className={classes.root}\r\n                        >\r\n                            <ListItemIcon\r\n                                className={classes.icon}>\r\n                                {link.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={link.name} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </>\r\n                )}\r\n                {!userInfo.loggedIn && <Link to={`${properties.repo}/login`}\r\n                    className={classes.inactive}\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/login`}\r\n                        className={classes.root}\r\n                    >\r\n                        <ListItemText primary={\"Sign In / Sign Up\"} />\r\n                    </ListItem>\r\n                </Link>}\r\n                {userInfo.loggedIn && <><ListItem className={classes.root} button onClick={handleClick}>\r\n\r\n                    <ListItemIcon\r\n                        className={classes.icon}>\r\n                        <AccountCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Профиль\" />\r\n                    {state.open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                    <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n                        <List disablePadding dense>\r\n                            {state.profileLinks.map((link, index) =>\r\n                                <Link to={`${properties.repo}/${link.link}`}\r\n                                    className={classes.inactive}\r\n                                >\r\n                                    <ListItem\r\n                                        button\r\n                                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                                        className={classes.root}\r\n                                        onClick={link.callback}\r\n                                    >\r\n                                        <ListItemText primary={link.name} />\r\n                                    </ListItem>\r\n                                </Link>)}\r\n                        </List>\r\n                    </Collapse></>}\r\n            </List>\r\n        </Card>\r\n    </>\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"   height=\"400\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={3} center={[50, 50]}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PopupContext } from '../../index'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}))\r\n\r\nexport const KeyPressedContext = React.createContext(null)\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {},\r\n        expanded: false,\r\n        keyPressed: null,\r\n        commentsExpanded: false,\r\n        imageOpen: false\r\n    })\r\n\r\n    const getRandom = e => {\r\n        setState({ ...state, isLoading: true, keyPressed: null });\r\n        fetch(`${properties.address}/getRandom${window.location.search}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                setState({ ...state, survey: result, isLoading: false })\r\n                if (result == null)\r\n                    setMessageFunc(\"Ничего не найдено :(\")\r\n            })\r\n    }\r\n    const onSurveyDeleteFunc = e => {\r\n        getRandom()\r\n    }\r\n    const handleExpandMapClick = e => {\r\n        console.log(state.expanded)\r\n        setState({ ...state, expanded: !state.expanded })\r\n    }\r\n\r\n    const handleClose = opened => {\r\n        setState({ ...state, hintOpen: opened })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getRandom()\r\n    }, [props.location.search])\r\n\r\n    window.onkeyup = e => {\r\n        console.log(e.keyCode)\r\n        if (e.keyCode === 32) {\r\n            getRandom()\r\n            return\r\n        }\r\n        if (e.keyCode === 77) {\r\n            setState({ ...state, expanded: !state.expanded })\r\n            return\r\n        }\r\n        if (e.keyCode === 67) {\r\n            setState({ ...state, commentsExpanded: !state.commentsExpanded })\r\n            return\r\n        }\r\n        if (e.keyCode === 73) {\r\n            setState({ ...state, imageOpen: !state.imageOpen })\r\n            return\r\n        }\r\n        if (e.keyCode === 75) {\r\n            setState({ ...state, hintOpen: !state.hintOpen })\r\n            return\r\n        }\r\n        setState({ ...state, keyPressed: e })\r\n    }\r\n\r\n    return <KeyPressedContext.Provider value={state.keyPressed} >\r\n        <Grid item sm={9} style={{ margin: \"auto\", marginTop: \"20px\", position: \"relative\" }}>\r\n            <Card style={{ backgroundColor: \"transparent\" }} onClick={handleExpandMapClick}>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    style={{ padding: \"0\", margin: \"0 auto\", display: \"block\" }}\r\n                    className={clsx(classes.expand, { [classes.expandOpen]: state.expanded, })}\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </Card>\r\n            <Collapse timeout={100}\r\n                style={{\r\n                    borderTop: \"1px solid #e0e0e0\",\r\n                    position: \"absolute\",\r\n                    width: \"100%\",\r\n                    zIndex: 1,\r\n                }}\r\n                in={state.expanded} unmountOnExit>\r\n                <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n            </ Collapse>\r\n            {state.survey != null && !state.isLoading && <BaseSurveyComponent imageOpen={state.imageOpen} expanded={state.commentsExpanded} openMap={handleExpandMapClick} bindKeys={true} surveyJson={state.survey} onSurveyDeleteFunc={onSurveyDeleteFunc} />}\r\n\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={getRandom}>Дальше</Button>\r\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={getRandom}> */}\r\n            <Dialog\r\n                open={state.hintOpen}\r\n                onClose={() => { handleClose(false) }}\r\n            >\r\n                <IconButton style={{ position: \"absolute\", right: \"0\" }} onClick={() => { handleClose(false) }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                {/* text */}\r\n                <img alt=\"\" style={{ width: \"100%\" }} src={\"https://i.ibb.co/TMxXxjx/Keys.png\"}></img>\r\n            </Dialog>\r\n            <IconButton onClick = {() => { handleClose(true) }} color=\"primary\"><KeyboardIcon /></IconButton>\r\n            {/* </Button> */}\r\n\r\n        </Grid>\r\n    </KeyPressedContext.Provider>\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    if (e)\r\n      e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  React.useEffect(() => {\r\n    if (keyUpEvent)\r\n      keyUpEvent = keyUpEvent.keyCode\r\n    if (keyUpEvent >= 49 && keyUpEvent <= 49 + Object.keys(props.surveyJson.options).length - 1) {\r\n      let newValue = !state.options[props.surveyJson.options[keyUpEvent - 49]]\r\n      setState({ ...state, options: { ...state.options, [props.surveyJson.options[keyUpEvent - 49]]: newValue } })\r\n    }\r\n    if (keyUpEvent === 13) {\r\n      handleSubmit()\r\n    }\r\n  }, [keyUpEvent])\r\n\r\n  React.useEffect(() => {\r\n    // setState({ ...state, options: {}, error: false })\r\n    setState({ ...state, error: false })\r\n  }, [])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              checked={state.options[option] == true}\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  bar: {\r\n    color: \"red\",\r\n    fontSize: \"smaller\"\r\n  },\r\n}))\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  const f = props\r\n  props = props.props\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  // let key = React.useContext(KeyPressedContext)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined,\r\n    options: props.surveyJson.options.map(option => ({ name: option, chart: <br /> })),\r\n    keyPressed: null\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const handleSubmit = e => {\r\n    if (state.voted)\r\n      return\r\n    if (e)\r\n      e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n\r\n    state.options.forEach(option => {\r\n      let data = result.filter(opt => opt.name === option.name)\r\n      option.name = option.name\r\n      option.value = data[0].value\r\n      let chart = <BarChart\r\n\r\n        width={14 * longestOption + 200}\r\n        height={20}\r\n        data={data}\r\n        barSize={10}\r\n        layout=\"vertical\">\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          // height={10}\r\n          hide\r\n          tick={props => {\r\n            return <text\r\n              x={props.x}\r\n              y={props.y}\r\n              textAnchor=\"end\"\r\n              fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n              fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n            >\r\n              {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n            </text>\r\n          }}\r\n          type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n        <Tooltip content={props => {\r\n          if (props.payload[0] != null) {\r\n            const newPayload = [{\r\n              name: 'голосов',\r\n              value: props.payload[0].payload.count\r\n            }]\r\n            return <DefaultTooltipContent {...props} payload={newPayload} />\r\n          }\r\n          return <DefaultTooltipContent {...props} />\r\n        }} />\r\n        <Bar background={{ fill: '#eee' }} dataKey=\"value\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n      option.chart = chart\r\n    })\r\n\r\n    setState({ ...state, options: state.options, voted: true })\r\n  }\r\n\r\n  const handleChange = e => {\r\n    if (state.voted)\r\n      return\r\n    setState({ ...state, choosedOption: e.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  React.useEffect(() => {\r\n    if (keyUpEvent)\r\n      keyUpEvent = keyUpEvent.keyCode \r\n    if (keyUpEvent >= 49 && keyUpEvent <= 49 + state.options.length - 1) {\r\n      setState({ ...state, choosedOption: state.options[keyUpEvent - 49].name })\r\n    }\r\n    if (keyUpEvent === 13){\r\n      handleSubmit()\r\n    }\r\n  }, [keyUpEvent])\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, choosedOption: \"\", error: false })\r\n  }, [])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {/* {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n    \r\n        {props.surveyJson.options.map(option =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          test\r\n          </>\r\n        )}  */}\r\n      <RadioGroup value={props.surveyJson.choosedOption ? props.surveyJson.choosedOption : state.choosedOption} onChange={handleChange}>\r\n\r\n        {state.options.map((option, index) =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option.name}\r\n              control={<Radio />}\r\n              label={<div style={{ color: state.choosedOption === option.name ? \"blue\" : \"black\" }}>{option.name}{state.voted ? ` (${option.value}%)` : \"\"}</div>}\r\n            />\r\n            <div className={classes.bar}>\r\n              {option.chart}\r\n            </div>\r\n          </>\r\n        )}\r\n      </RadioGroup>\r\n      {/* {props.Answered && state.chart} */}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!state.voted && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>\r\n    }\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl >\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n    stats: null\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n    let updatedStats = result\r\n    setState({ ...state, stats: updatedStats })\r\n  }\r\n\r\n  const lightenColor = function (color, percent) {\r\n    var num = parseInt(color, 16),\r\n      amt = Math.round(2.55 * percent),\r\n      R = (num >> 16) + amt,\r\n      B = (num >> 8 & 0x00FF) + amt,\r\n      G = (num & 0x0000FF) + amt;\r\n    console.log((0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1));\r\n    return (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\r\n\r\n  }\r\n\r\n  const customValue = (value, count) => {\r\n    return <Typography\r\n      title = {`${Math.floor(count)} человек`}\r\n      style={{\r\n        fontWeight: \"bold\",\r\n        color: `#${lightenColor(\"41465f\", (100 - value) / (100 / 50))}`,\r\n        fontSize: `${10 + 4 * (value / 100)}px`\r\n      }}>{Math.floor(value)}%</Typography>\r\n    // return <Typography style={{ color: \"#FF0000\" }}>{value}</Typography>\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      {props.Answered && state.stats && customValue(state.stats[rowIndex][columnIndex].value, state.stats[rowIndex][columnIndex].count)}\r\n                      {!props.Answered && <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PopupContext } from '../index'\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        backgroundColor: \"#41465f\",\r\n    }\r\n}));\r\n\r\nexport default function CommentsComponent(props) {\r\n    const userInfo = React.useContext(UserContext)\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n    const [state, setState] = React.useState({\r\n        commentError: \"\",\r\n        comment: \"\",\r\n        comments: props.surveyJson.comments,\r\n    })\r\n    const handleCommentSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (state.comment.length < 5 || state.comment.length > 200) {\r\n            setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n            return\r\n        }\r\n        setState({ ...state, commentError: \"\" })\r\n\r\n        fetch(`${properties.address}/addComment`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    content: state.comment,\r\n                    surveyId: props.surveyJson.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (!result)\r\n                    return\r\n                console.log(result)\r\n                let newComments = state.comments\r\n                let date = new Date(result.date)\r\n                newComments.push({\r\n                    \"content\": state.comment,\r\n                    \"likes\": 0,\r\n                    \"user_id\": result.user_id,\r\n                    \"username\": \"admin\",\r\n                    \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n                    \"id\": result.id,\r\n                })\r\n\r\n                setState({ ...state, comments: newComments })\r\n                if (props.setCommentsLength)\r\n                    props.setCommentsLength(newComments.length)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCommentLike = comment => {\r\n\r\n        if (userInfo.userId === null) {\r\n            setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n            return\r\n        }\r\n\r\n        comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n        comment.voted = !comment.voted\r\n        setState({ ...state, comments: state.comments })\r\n\r\n        fetch(`${properties.address}/commentLike`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ commentId: comment.id })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n                    comment.voted = !comment.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            }).then(result => {\r\n                if (result) {\r\n                    // new_comments = comments.find(comment -> comment.id === commentId)\r\n                    comment.likes = result.likes\r\n                    comment.voted = result.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDeleteComment = commentId => {\r\n        fetch(`${properties.address}/deleteComment`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    commentId: commentId\r\n                }),\r\n                redirect: 'follow',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n                    setState({ ...state, comments: newComments })\r\n                    if (props.setCommentsLength)\r\n                        props.setCommentsLength(newComments.length)\r\n                    setMessageFunc(\"Комментарий удален :)\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            <List>\r\n                {state.comments.map(comment => <>\r\n                    <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                                {comment.username && comment.username.charAt(0)}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={<>\r\n                                {comment.username + \"  \"}\r\n                                <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                                    {comment.date}\r\n                                </Typography>\r\n                            </>}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            style={{ display: \"inline\" }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {comment.content}\r\n                                        </Typography>\r\n                                        <div style={{ marginLeft: \"auto\" }}>\r\n                                            {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                                            {userInfo.userId === props.surveyJson.userId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                                                <DeleteOutlineOutlinedIcon />\r\n                                            </IconButton>}\r\n                                            <Typography component=\"span\">\r\n                                                {comment.likes != 0 && comment.likes}\r\n                                            </Typography>\r\n\r\n                                            <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                                                <ThumbUpAltIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </>)}\r\n            </List>\r\n            <FormControl style={{ display: \"flex\" }}>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <TextField\r\n                        style={{ display: \"flex\" }}\r\n                        id=\"standard-textarea\"\r\n                        label=\"Комментировать\"\r\n                        placeholder=\"\"\r\n                        multiline\r\n                        onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n                    />\r\n                    {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n                    <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n                </form>\r\n            </FormControl>\r\n        </CardContent>\r\n    </Collapse>\r\n\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\nimport CommentsComponent from \"./CommentsComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentsCount: props.surveyJson.comments.length\r\n  })\r\n\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = e => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n\r\n  const handleLike = e => {\r\n    if (userInfo.userId === null) {\r\n      setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n      return\r\n    }\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          setMessageFunc(\"Удалено :)\")\r\n        if (props.onSurveyDeleteFunc)\r\n          props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const setCommentsLength = count => {\r\n    setState({ ...state, commentsCount: count })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (keyUpEvent)\r\n      keyUpEvent = keyUpEvent.keyCode\r\n    // if (keyUpEvent === 67)\r\n    //   setState({ ...state, expanded: !state.expanded })\r\n    if (keyUpEvent === 76)\r\n      handleLike()\r\n\r\n  }, [keyUpEvent])\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, expanded: props.expanded })\r\n  }, [props.expanded])\r\n\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`${properties.repo}/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"0px\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.commentsCount})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <CommentsComponent surveyJson={props.surveyJson}\r\n        expanded={state.expanded}\r\n        setCommentsLength={setCommentsLength}\r\n      />\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PopupContext } from '../index'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  surveyCard: {\r\n    \"&:focus\": {\r\n      outline: \"none\"\r\n    }\r\n  },\r\n}))\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const img = props.surveyJson.image;\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered,\r\n    open: false,\r\n    // choosedIndex: -1,\r\n    pressed: false\r\n  })\r\n  const handleClose = opened => {\r\n    setState({ ...state, open: opened })\r\n  }\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, open: props.imageOpen})\r\n  }, [props.imageOpen])\r\n\r\n  const params = {\r\n    \"pressed\": state.pressed,\r\n    \"choosedIndex\": state.choosedIndex,\r\n    \"getStats\": getStats,\r\n    \"Answered\": state.answered,\r\n    \"handleSubmit\": handleSubmit,\r\n    \"surveyJson\": props.surveyJson,\r\n    \"HelperText\": state.helperText,\r\n    \"History\": history,\r\n    \"onSurveyDeleteFunc\": props.onSurveyDeleteFunc,\r\n    \"openMap\": props.openMap,\r\n  }\r\n  return <>\r\n    {/* {returnBody()} */}\r\n    <CardComponent\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      onSurveyDeleteFunc={props.onSurveyDeleteFunc}\r\n      expanded={props.expanded}\r\n    >\r\n      <Grid\r\n        tabindex={0}\r\n        id=\"surveyCard\"\r\n        className={classes.surveyCard} container >\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img onClick={() => handleClose(true)} alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\", cursor: \"pointer\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {props.surveyJson.type === \"Single\" && <SingleSurveyComponent props={params} />}\r\n          {props.surveyJson.type === \"Multiple\" && <MultipleSurveyComponent props={params} />}\r\n          {props.surveyJson.type === \"Rating\" && <RatingSurveyComponent props={params} />}\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={state.open}\r\n        onClose={() => { handleClose(false) }}\r\n      >\r\n        <IconButton style={{ position: \"absolute\", right: \"0\" }} onClick={() => { handleClose(false) }}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <img alt=\"\" style={{ width: \"100%\" }} src={img}></img>\r\n      </Dialog>\r\n    </CardComponent >\r\n  </>\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    hasMore: true,\r\n    isLoading: true,\r\n    surveys: [],\r\n    index: 0,\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    // alert('Удалено :)')\r\n  }\r\n  const load = (tag, type, clearSurveys) => {\r\n    if (clearSurveys)\r\n      setState({ ...state, surveys: [] })\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n    request\r\n      .get(url)\r\n      .withCredentials()\r\n      .then((results) => {\r\n        const new_list = results.body.map(s =>\r\n          <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n        setState({\r\n          ...state,\r\n          hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n          isLoading: false,\r\n          surveys: [\r\n            ...state.surveys,\r\n            ...new_list\r\n          ],\r\n          index: state.index + 1\r\n        })\r\n      })\r\n  }\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (state.error || state.isLoading || !state.hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {state.error &&\r\n        <div style={{ color: '#900' }}>\r\n          {state.error}\r\n        </div>\r\n      }\r\n      {state.isLoading && <div>Loading...</div>}\r\n      {!state.hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { PopupContext } from '../index'\r\nimport InfiniteScroll from './InfiniteScroll'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: 'white',\r\n  }\r\n}))\r\n\r\nexport default function TabsComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const classes = useStyles()\r\n  const path = history.location.pathname.split(\"/\").pop()\r\n  const [state, setState] = React.useState({\r\n    value: path === \"new\" || path === \"home\" ? 1 : 0,\r\n    activeType: \"\",\r\n    reloadFunc: undefined,\r\n  })\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setState({ ...state, value: newValue })\r\n  }\r\n\r\n  const handleFilter = type => {\r\n    let newType = state.activeType === type ? \"\" : type\r\n    setState({ ...state, activeType: newType })\r\n    state.reloadFunc(undefined, newType)\r\n  }\r\n\r\n  const changeReloadFunc = load => {\r\n    setState({ ...state, reloadFunc: load })\r\n  }\r\n\r\n  return <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n    <Grid container spacing={3} alignItems=\"flex-start\" justify=\"flex-start\">\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.tabs}>\r\n          <Tabs TabIndicatorProps={{ style: { backgroundColor: 'white' } }} selectionFollowsFocus centered value={state.value}  >\r\n            <Tab onClick={e => handleChange(e, 0)} component={Link} to={`${properties.repo}/top`} label=\"TOP\" />\r\n            <Tab onClick={e => handleChange(e, 1)} component={Link} to={`${properties.repo}/new`} label=\"NEW\" />\r\n\r\n            <Tooltip title=\"Единичный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"SINGLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"SINGLE\") }}\r\n              >\r\n                <ViewListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Множественный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"MULTIPLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"MULTIPLE\") }}\r\n              >\r\n                <FormatListBulletedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Рейтинговый выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"RATING\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"RATING\") }}\r\n              >\r\n                <AppsIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Tabs>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} id=\"surveys\">\r\n        <Paper className={classes.mainBox}>\r\n          <Box  >\r\n            {state.value == 0 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"Top\" />}\r\n            {state.value == 1 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"New\" />}\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  </Box>\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"username\": state.username, \"password\": state.password }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          setState({ ...state, error: true })\r\n        }\r\n        else if (response.status === 200) {\r\n          props.handleLoggedIn()\r\n          history.push(`${properties.repo}/home`)\r\n        }\r\n      }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <FormHelperText error={true}>\r\n              {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n            </FormHelperText>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.username}\r\n              onChange={handleOnChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={state.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/register`} variant=\"body2\">\r\n                  Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    matchingPassword: '',\r\n    gender: '',\r\n    age: '',\r\n    country: '',\r\n    errors: {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        // credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          setCountries([{ name: \"\", id: 0 }, ...result])\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0) {\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150) {\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\") {\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\") {\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/signUp`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"name\": state.name,\r\n          \"password\": state.password,\r\n          \"email\": state.email,\r\n          \"matchingPassword\": state.matchingPassword,\r\n          \"country\": state.country,\r\n          \"age\": state.age,\r\n          \"gender\": state.gender,\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 400) {\r\n          response.json().then(result => {\r\n\r\n            setState({\r\n              ...state, errors: {\r\n                ...state.errors,\r\n                serverErrors: result,\r\n                clientErrors: validate()\r\n              }\r\n            })\r\n          })\r\n        }\r\n        else if (response.status === 200) {\r\n          setState({\r\n            ...state,\r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"\r\n          })\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <Typography component=\"h2\">\r\n            {state.succesMessage}\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"login\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  defaultValue={state.name}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"gender\"\r\n                  label=\"Пол\"\r\n                  defaultValue={\"none\"}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                >\r\n                  <option value=\"\" ></option>\r\n                  <option value=\"male\" >Мужской</option>\r\n                  <option value=\"female\" >Женский</option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    max: 150,\r\n                    min: 0\r\n                  }}\r\n                  name=\"age\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"age\"\r\n                  type=\"number\"\r\n                  label=\"Возраст\"\r\n                  defaultValue={state.age}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  name=\"country\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Страна\"\r\n                  // native\r\n                  // defaultValue = {state.country}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                // autoFocus\r\n                >\r\n                  {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country =>\r\n                    <option key={`country-${country.id}`} value={country.name} >{country.name}</option>\r\n                  )}\r\n                  {/* </FixedSizeList> */}\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  defaultValue={state.email}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.password}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"matchingPassword\"\r\n                  label=\"Confirm your password\"\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.matchingPassword}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n                <FormHelperText error={true}>\r\n                  {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n                </FormHelperText>\r\n\r\n                {Array.from(state.errors.clientErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n                {Array.from(state.errors.serverErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/login`} variant=\"body2\">\r\n                  Уже есть аккаунт? Войти\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'Single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'Rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result){\r\n            setMessageFunc(\"Опрос создан :)\")\r\n            history.push(`${properties.repo}/new`)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'Single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'Multiple':\r\n      case 'Single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'Rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('Single')} color={state.type === 'Single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('Multiple')} color={state.type === 'Multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('Rating')} color={state.type === 'Rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <BaseSurveyComponent\r\n              surveyJson={{\r\n                type: state.type,\r\n                comments: [],\r\n                tags: [],\r\n                options: Array.from(state.options),\r\n                rows: Array.from(state.rows),\r\n                columns: Array.from(state.columns)\r\n              }} />\r\n            {/* <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent> */}\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`${properties.repo}/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\nimport CommentsComponent from \"../CommentsComponent\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        history.push(`${properties.repo}/profile`)\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n        {/* <CommentsComponent /> */}\r\n    </>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nexport default function NewsPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n    console.log(\"importing...\")\r\n    const markdownFiles = importAll(require.context('../../news', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const renderers = {\r\n        overrides: {\r\n            p: { component: Typography, props: { paragraph: true } },\r\n            li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n            h4: { component: Typography, props: { variant: \"h6\" } }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n\r\n                        <ReactMarkdown options={renderers}>\r\n\r\n                            {\r\n                                // <Typography> post </Typography>\r\n                                post\r\n                            }\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { properties } from '../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport CategoriesComponent from \"./CategoriesComponent\"\r\nimport MainMenuComponent from \"./MainMenuComponent\"\r\nimport MapChart from './MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${props.SurveyId}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }, [])\r\n    return <>\r\n        {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} />}</>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function AboutPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../about', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function DonatePageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../donate', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport MainMenuComponent from './Components/MainMenuComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport NewsPageComponent from \"./Components/Pages/NewsPageComponent\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport AboutPageComponent from \"./Components/Pages/AboutPageComponent\";\r\nimport DonatePageComponent from \"./Components/Pages/DonatePageComponent\";\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nexport const LoginContext = React.createContext(() => { })\r\n\r\nfunction App() {\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    activeType: \"\",\r\n    activeTag: \"\",\r\n    message: \"\",\r\n    hidden: true,\r\n    userInfo: {\r\n      username: null,\r\n      userId: null,\r\n      loggedIn: null\r\n    }\r\n  })\r\n\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n        else {\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: null,\r\n              userId: null,\r\n              loggedIn: false\r\n            }\r\n          })\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: result.username,\r\n              userId: result.user_id,\r\n              loggedIn: true\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  const setMessageFunc = msg => {\r\n    setState({ ...state, message: msg, hidden: false })\r\n    setTimeout(() => {\r\n      setState({ ...state, message: msg, hidden: true })\r\n    }, 3000)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={checkLoginStatus}>\r\n      <UserContext.Provider value={state.userInfo}>\r\n        <PopupContext.Provider value={setMessageFunc}>\r\n          <Router>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={9} >\r\n                <Box>\r\n                  <Fade in={!state.hidden} timeout={500}>\r\n                    <div>\r\n                      <PopupComponent message={state.message} />\r\n                    </div>\r\n                  </Fade>\r\n                  <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}><TabsComponent /></Route>\r\n                  <Route path={`${properties.repo}/random`} render={props => <RandomPageComponent {...props} />} />\r\n                  <Route path={`${properties.repo}/login`}><LoginComponent handleLoggedIn={checkLoginStatus} /></Route>\r\n                  <Route path={`${properties.repo}/createSurvey`}><AddSurveyComponent /></Route>\r\n                  <Route path={`${properties.repo}/profile`}><ProfileComponent /></Route>\r\n                  <Route path={`${properties.repo}/register`}><SignUpComponent /></Route>\r\n                  <Route path={`${properties.repo}/registrationConfirm`}><ConfirmRegistration /></Route>\r\n                  <Route path={`${properties.repo}/survey/:id`}><SurveyPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/news`}><NewsPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/donate`}> <DonatePageComponent /> {/* <SendFeedbackComponent /> */} </Route>\r\n                  <Route path={`${properties.repo}/about`}><AboutPageComponent /></Route>\r\n                  {/* <Route path={`${properties.repo}/signout`}>{ history.push(`${properties.repo}/`)} </Route> */}\r\n                  <Route path={`${properties.repo}/signout`}><Redirect to={`${properties.repo}/`} /></Route>\r\n                  <Copyright />\r\n                </Box>\r\n              </Grid>\r\n              {/* </Grid> */}\r\n              <Grid item sm={3} style={{ paddingRight: \"10px\" }}>\r\n                <Hidden only=\"xs\">\r\n                  <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                    <CategoriesComponent />\r\n                  </Box>\r\n                  <MainMenuComponent />\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Router>\r\n        </PopupContext.Provider>\r\n      </UserContext.Provider>\r\n    </LoginContext.Provider >\r\n  );\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          // backgroundColor: grey[800],\r\n          background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n        },\r\n        \"&$selected:hover\": {\r\n          backgroundColor: grey[700],\r\n        },\r\n      },\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    secondary: {\r\n      main: \"#3d608c\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 13,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}