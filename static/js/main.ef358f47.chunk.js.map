{"version":3,"sources":["Components/TabsComponent.js","Properties/Properties.js","Components/CategoriesComponent.js","Components/AccountIconComponent.js","Components/HeaderComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/StatisticsComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CardComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/InfiniteScroll.js","Components/ProfileComponent.js","Components/SeparateSurveyComponent.js","Components/PostComponent.js","Components/SendFeedbackComponent.js","index.js"],"names":["useStyles","makeStyles","theme","tabs","backgroundColor","mainBox","indicator","TabsComponent","props","React","useState","Value","value","setValue","classes","gridBody","setGrid","handleChange","event","newValue","activeType","setActiveType","useEffect","children","DefaultType","handleFilter","type","newType","Load","undefined","Grid","container","spacing","alignItems","justify","item","xs","Paper","className","Tabs","TabIndicatorProps","style","selectionFollowsFocus","centered","aria-label","Tab","onClick","e","component","Link","to","label","id","aria-controls","Tooltip","title","IconButton","color","Box","properties","list","padding","checkbox","tag","margin","CategoriesComponent","categories","setCategories","tags","setTags","checked","setChecked","anchorEl","setAnchorEl","open","setOpen","useLocation","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","map","name","handleToggle","currentIndex","indexOf","newChecked","push","splice","LoggedIn","body","includes","headers","JSON","stringify","sendChecked","Card","CardContent","List","ListItem","ListItemText","primary","ListItemIcon","edge","minWidth","onMouseOver","currentTarget","onMouseOut","Divider","labelId","key","button","Checkbox","tabIndex","disableRipple","inputProps","height","overflowY","alignContent","Button","variant","Popper","placement","transition","Typography","typography","width","AccountIconComponent","handleClose","Menu","keepMounted","Boolean","onClose","textDecoration","MenuItem","text","setState","loggedIn","username","logo","maxWidth","toolbar","borderBottom","palette","divider","info","toolbarTitle","flex","marginLeft","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","search","position","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","pointerEvents","display","inputRoot","inputInput","paddingLeft","transitions","create","Header","Fragment","AppBar","Toolbar","src","alt","align","noWrap","state","size","paper","marginTop","flexDirection","avatar","secondary","main","form","submit","LoginComponent","history","useHistory","password","jwt","connected","error","handleOnChange","target","Container","CssBaseline","Avatar","noValidate","FormHelperText","TextField","required","fullWidth","autoComplete","autoFocus","onChange","preventDefault","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","errors","serverErrors","clientErrors","succesMessage","countries","setCountries","validate","errs","defaultValue","select","SelectProps","native","max","min","Array","from","el","root","border","outline","borderColor","boxShadow","fontSize","icon","input","popper","fetchedTag","cursor","h1","fontWeight","TagsComponent","fetchedTags","setFetchedTags","CallBack","index","handleClick","Input","some","anchorOrigin","vertical","horizontal","transformOrigin","elevation","length","marks","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","Math","cos","RADIAN","y","sin","option","fill","textAnchor","dominantBaseline","toFixed","COLORS","PI","StatisticsComponent","genderValue","setGenderValue","fetchedData","setFetchedData","data","setData","barData","setBarData","ratingData","setRatingData","filteredDataLength","setFilteredDataLength","legend","setLegend","SurveyId","filtered_data","elem","user","sex","arr","Type","Options","options","sort","a","b","bar_arr","rating_arr","accepted","rows","Rows","max_arr","bar","rating","forEach","row","rd","rowscolumns","sum","Object","values","reduce","keys","Columns","obj","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","labelLine","dataKey","entry","top","right","left","bottom","strokeDasharray","domain","formatter","content","payload","textAlign","fontStyle","join","wrapperStyle","stackId","SingleSurveyComponent","choosedOption","helperText","img","Image","setOptions","Voted","voted","setVoted","handleSubmit","votedCallback","History","flipped","onSubmit","FormControl","FormLabel","Question","FormGroup","FormControlLabel","control","setHelperText","optionChanged","handleOpen","surveyToDelete","returnBody","RadioGroup","Radio","Dialog","DialogContent","DialogContentText","DialogActions","this","Component","cell","RatingSurveyComponent","duplicate","setErrors","selectedValues","setSelectedValues","setBody","local_errors","Set","val","row_index","old_values","i","TableContainer","Table","TableHead","TableRow","TableCell","column","column_index","TableBody","scope","inline","marginBottom","media","paddingTop","expand","transform","duration","shortest","expandOpen","red","header","actions","action","CardComponent","expanded","setExpanded","Likes","likes","setLikes","Answered","answered","setAnswered","setFlipped","comment","setComment","comments","Comments","UserId","LoggedInUserId","handleCommentSubmit","validateComment","surveyId","ElementId","new_comments","user_id","LoggedInUsername","date","alert","CardHeader","Username","charAt","subheader","Date","Children","child","cloneElement","CardActions","disableSpacing","AnsweredAmount","Tags","marginRight","paragraph","SeparateSurvey","clsx","aria-expanded","Collapse","borderTop","in","CommentsSection","timeout","unmountOnExit","ListItemAvatar","wordBreak","commentId","handleCommentLike","placeholder","multiline","onBlur","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","selectedValue","setSelectedValue","columns","image","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","body_type","InputLabel","htmlFor","c","renderBody","UserName","ConfirmRegistration","query","URLSearchParams","message","setMessage","get","InfiniteScroll","ref","useRef","Error","hasMore","HasMore","isLoading","IsLoading","surveys","Surveys","Index","ActiveType","load","url","Mode","request","withCredentials","results","new_list","question","answered_amount","SetReloadFunction","window","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","survey","ProfileComponent","setsurveyToDelete","setSurveys","dense","CircularProgress","ListItemSecondaryAction","DialogTitle","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","overrides","h2","h3","h4","p","li","withStyles","listItem","Main","posts","md","post","SendFeedbackComponent","feedBack","setFeedBack","sent","setSent","login","signup","Copyright","href","getFullYear","App","userId","reload","activeTag","customFunc","setTimeout","handler","checkLoginStatus","createBrowserHistory","location","pathname","exact","path","paddingRight","sm","Hidden","only","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ef358f47.chunk.js","sourcesContent":["import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n      backgroundColor: \"#33a570\",\r\n    },\r\n    mainBox: {\r\n      backgroundColor: \"#33a570\",\r\n    },\r\n    indicator: {\r\n      backgroundColor: 'white',\r\n    }\r\n}))\r\n\r\nexport default function TabsComponent(props){\r\n    const [value, setValue] = React.useState(props.Value)\r\n    const {tabs} = props\r\n    const classes = useStyles()\r\n    const [gridBody, setGrid] = React.useState(<div>Loading...</div>)\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      setGrid(<div>...Loading</div>)\r\n    };\r\n    const [activeType, setActiveType] = React.useState(\"\")\r\n    \r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n      // setGrid(React.cloneElement(props.children[value], {ActiveType: activeType}))\r\n    }, [value])\r\n    \r\n    React.useEffect(() => {\r\n      setActiveType(props.DefaultType)\r\n    },[props.DefaultType])\r\n\r\n    const handleFilter = type => {\r\n      let newType = activeType === type ? \"\" : type\r\n      setActiveType(newType)\r\n      props.Load(undefined, newType)\r\n    }\r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n    }, [activeType])\r\n\r\n    return <Grid container spacing={3}  alignItems=\"flex-start\" justify = \"flex-start\">\r\n              <Grid  item xs={12}>\r\n                <Paper className = {classes.tabs}>\r\n                  <Tabs TabIndicatorProps={{style: { backgroundColor: 'white'}}}  selectionFollowsFocus centered value={value} aria-label=\"simple tabs example\">\r\n                      <Tab onClick = {e=> handleChange(e, 0)} component = {Link} to = \"top\" label=\"TOP\" id = \"simple-tab-0\" aria-controls = \"simple-tabpanel-0\" />\r\n                      <Tab onClick = {e=> handleChange(e, 1)} component = {Link} to = \"new\" label=\"NEW\" id = \"simple-tab-1\" aria-controls = \"simple-tabpanel-1\"  />\r\n\r\n                      <Tooltip title = \"Единичный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"SINGLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"SINGLE\")}}\r\n                        >\r\n                          <ViewListIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Множественный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"MULTIPLE\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"MULTIPLE\")}}\r\n                        >\r\n                          <FormatListBulletedIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Рейтинговый выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"RATING\" ? \"secondary\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"RATING\")}}\r\n                        >\r\n                          <AppsIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid  item xs={12} id = \"surveys\">\r\n                <Paper  className = {classes.mainBox}>\r\n                  <Box  >\r\n                    {gridBody}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n}","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\"\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport SportsBaseballIcon from '@material-ui/icons/SportsBaseball';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    padding: 0\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 10,\r\n    color: \"#2f4f4f\",\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5,\r\n    padding: 2,\r\n    width: \"max-content\"\r\n  },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let location = useLocation();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    // setOpen((prev) => placement !== newPlacement || !prev);\r\n    setOpen(true)\r\n  };\r\n  const handleClose = e => {\r\n    setOpen(false)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    fetch(`${properties.address}/getAllTags`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setTags(result)\r\n      })\r\n  }, [])\r\n  const sendChecked = newChecked => {\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !newChecked.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          props.Load(undefined, \"\")\r\n        }\r\n      })\r\n  }\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n    if (props.LoggedIn) {\r\n      sendChecked(newChecked)\r\n    }\r\n    else {\r\n      props.Load(value, \"\")\r\n    }\r\n  }\r\n  const handleTag = name => {\r\n    props.Load(name, \"\")\r\n  }\r\n\r\n  return (<>\r\n    <Card>\r\n      <CardContent>\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Категории\" />\r\n            {!props.LoggedIn && <ListItemIcon edge=\"end\" style={{ minWidth: \"auto\" }}\r\n              onMouseOver={handleClick}\r\n              onMouseOut={handleClose}\r\n            >\r\n              <HelpOutlineIcon />\r\n            </ListItemIcon>\r\n            }\r\n          </ListItem>\r\n          <Divider />\r\n          {categories.map(category => {\r\n            const labelId = `checkbox-list-label-${category.name}`\r\n            return (<ListItem className={classes.list} key={`category-${category.id}`} button onClick={handleToggle(category.name)}>\r\n              {props.LoggedIn && <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>}\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n          }\r\n          )}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n    <br></br>\r\n    <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card>\r\n    <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper>\r\n  </>)\r\n}","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\nimport { Link } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nexport default function AccountIconComponent(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const signOut = e => {\r\n    fetch(`${properties.address}/signout`,\r\n      {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        if (result === 'signedout') {\r\n          props.setState({\r\n            loggedIn: false,\r\n            username: ''\r\n          })\r\n        }\r\n      })\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (<>\r\n    <IconButton onClick={handleClick}>\r\n      <AccessibilityNewIcon color='action' />\r\n    </IconButton>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <Link to='/profile' style={{ textDecoration: \"none\" }}>\r\n        <MenuItem onClick={handleClose} >Мой профиль</MenuItem>\r\n      </Link>\r\n      <Divider />\r\n      <Link to='/createSurvey' style={{ textDecoration: \"none\" }}>\r\n        <MenuItem onClick={handleClose}>Создать опрос</MenuItem>\r\n      </Link>\r\n\r\n      <Link to='/home' style={{ textDecoration: \"none\" }}>\r\n        <MenuItem onClick={() => { handleClose(); signOut(); }}>Выйти</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  </>)\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Link } from 'react-router-dom'\r\nimport AccountIconComponent from './AccountIconComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"40px\",\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.info\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    color: 'black'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 10,\r\n    //width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   width: '12ch',\r\n    //   '&:focus': {\r\n    //     width: '100ch',\r\n    //   },\r\n    // },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles(props);\r\n  const { title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <a href = \"/about.html\">About</a> */}\r\n\r\n      <AppBar position=\"static\" className={classes.toolbar}>\r\n        <Toolbar >\r\n          <Link to='/home'>\r\n            <img src=\"images/logo.png\" alt=\"\" className={classes.logo}></img>\r\n          </Link>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link to='/home' style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Домой\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to='/news' style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Новости\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to='/donate' style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Помочь проекту\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to='/about' style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Про сайт\r\n            </Link>\r\n          </Typography>\r\n\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          {props.state.loggedIn ? <>\r\n            <AccountIconComponent {...props}></AccountIconComponent>\r\n          </>\r\n            :\r\n            <>\r\n              <Link to='/login' style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"text\" size=\"small\">\r\n                  Login\r\n            </Button>\r\n              </Link>\r\n              <Link to='/register' style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  <Typography noWrap>Sign up</Typography>\r\n                </Button>\r\n              </Link>\r\n            </>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`, \r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\"username\":state.username,\"password\":state.password}),\r\n      redirect: 'follow',\r\n      credentials: 'include'\r\n    })\r\n      .then(response => {\r\n          if (response.status === 204){\r\n            setState({...state, error: true})\r\n          }\r\n          else if (response.status === 200){\r\n            props.handleLoggedIn()\r\n            history.push('/home')\r\n          }\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <FormHelperText error = {true}>\r\n            {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n          </FormHelperText>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value = {state.username}\r\n            onChange = {handleOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value = {state.password}\r\n            onChange = {handleOnChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick = {handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          <Grid container>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Link to = \"/register\" variant=\"body2\">\r\n                Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name : '',\r\n    password : '',\r\n    email : '',\r\n    matchingPassword : '',\r\n    gender : '',\r\n    age : '',\r\n    country : '',\r\n    errors : {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`, \r\n    {\r\n      method: 'GET',\r\n      redirect: 'follow',\r\n      // credentials: 'include'\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200){\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(result => {\r\n      if (result){\r\n        setCountries([{name : \"\", id : 0}, ...result])\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0){\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150){\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\"){\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\"){\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    \r\n    fetch(`${properties.address}/signUp`, \r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        \"name\": state.name,\r\n        \"password\":state.password,\r\n        \"email\": state.email,\r\n        \"matchingPassword\": state.matchingPassword,\r\n        \"country\": state.country,\r\n        \"age\": state.age,\r\n        \"gender\": state.gender,\r\n      }),\r\n      redirect: 'follow',\r\n      credentials: 'include'\r\n    })\r\n      .then(response => {\r\n        if (response.status === 400){\r\n          response.json().then(result => {\r\n\r\n            setState({...state, errors: {\r\n              ...state.errors,\r\n              serverErrors: result,\r\n              clientErrors: validate()\r\n            }})\r\n          })\r\n        }\r\n        else if (response.status === 200){\r\n          setState({\r\n            ...state, \r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"})\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Typography component = \"h2\">\r\n          {state.succesMessage}\r\n        </Typography>\r\n        <form className={classes.form} noValidate >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"login\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Login\"\r\n                defaultValue = {state.name}\r\n                onChange = {handleOnChange}\r\n                // autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"gender\"\r\n                select\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"gender\"\r\n                label=\"Пол\"\r\n                defaultValue = {\"none\"}\r\n                onChange = {handleOnChange}\r\n                SelectProps = {{native : true}}\r\n              >\r\n                 <option value = \"\" ></option>\r\n                 <option value = \"male\" >Мужской</option>\r\n                 <option value = \"female\" >Женский</option>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                inputProps = {{\r\n                  max: 150,\r\n                  min: 0\r\n                }}\r\n                name=\"age\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"age\"\r\n                type = \"number\"\r\n                label=\"Возраст\"\r\n                defaultValue = {state.age}\r\n                onChange = {handleOnChange}\r\n                // autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                name=\"country\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"country\"\r\n                label=\"Страна\"\r\n                // native\r\n                // defaultValue = {state.country}\r\n                onChange = {handleOnChange}\r\n                SelectProps = {{native : true}}\r\n                // autoFocus\r\n              >\r\n                 {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country => \r\n                    <option key = {`country-${country.id}`} value = {country.name} >{country.name}</option>\r\n                  )}\r\n                {/* </FixedSizeList> */}\r\n                \r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                defaultValue = {state.email}\r\n                onChange = {handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                defaultValue = {state.password}\r\n                onChange = {e => {handleOnChange(e); }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"matchingPassword\"\r\n                label=\"Confirm your password\"\r\n                type=\"password\"\r\n                id=\"confirm_password\"\r\n                autoComplete=\"current-password\"\r\n                defaultValue = {state.matchingPassword}\r\n                onChange = {e => {handleOnChange(e); }}\r\n              />\r\n              <FormHelperText error = {true}>\r\n                {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n              </FormHelperText>\r\n             \r\n              {Array.from(state.errors.clientErrors).map(el => \r\n                <FormHelperText error = {true}>\r\n                  {el}\r\n                </FormHelperText>\r\n              )}\r\n              {Array.from(state.errors.serverErrors).map(el => \r\n                <FormHelperText error = {true}>\r\n                  {el}\r\n                </FormHelperText>\r\n              )}\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick = {handleSubmit}\r\n          \r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Уже есть аккаунт? Войти\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PieChart, Pie, Cell} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n// const bar_data = [\r\n//   {\r\n//     name: 'Tom Cruise', value: 20,\r\n//   },\r\n//   {\r\n//     name: 'Will Smith', value: 80,\r\n//   },\r\n//   {\r\n//     name: 'Brad Pitt', value: 80,\r\n//   },\r\n// ];\r\n\r\n\r\n// const multiple_data = {\r\n//   votes: [\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'JustUser'\r\n//       },\r\n//       options: [\"Fish\", \"Meat\", \"Vegetables\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 55,\r\n//         country: 'Ukraine',\r\n//         username: 'Sabrina'\r\n//       },\r\n//       options: [\"Fish\", \"Fruit\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'Frank'\r\n//       },\r\n//       options: [\"Meat\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 45,\r\n//         country: 'Ukraine',\r\n//         username: 'Joshua'\r\n//       },\r\n//       options: [\"Meat\",\"Alcohol\"]\r\n//     },\r\n//   ]\r\n// }\r\n// const single_data = {\r\n//     votes: [\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 20,\r\n//                 country: 'Ukraine',\r\n//                 username: 'JustUser'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 23,\r\n//                 country: 'UK',\r\n//                 username: 'Drago777'\r\n//             },\r\n//             option: \"Will Smith\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 18,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 54,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 42,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 33,\r\n//                 country: 'Russia',\r\n//                 username: 'Carol'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'female',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'Rachel'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'John'\r\n//             },\r\n//             option: \"Chriss Pratt\"\r\n//         },\r\n//     ]\r\n// }\r\n\r\nconst rating_data = [\r\n  {\r\n      user: {\r\n          sex: 'male',\r\n          age: 32,\r\n          country: 'Russia',\r\n          username: 'John'\r\n      },\r\n      rowscolumns: [\r\n        \"Халк\",\r\n        \"Железяка\",\r\n        \"Молоток с Асгарда\",\r\n      ]\r\n    },\r\n    {\r\n        user: {\r\n            sex: 'male',\r\n            age: 32,\r\n            country: 'Russia',\r\n            username: 'John'\r\n        },\r\n        rowscolumns: [\r\n          \"Халк\",\r\n          \"Молоток с Асгарда\",\r\n          \"Железяка\",\r\n        ]\r\n      },\r\n      {\r\n          user: {\r\n              sex: 'male',\r\n              age: 32,\r\n              country: 'Russia',\r\n              username: 'John'\r\n          },\r\n          rowscolumns: [\r\n            \"Халк\",\r\n            \"Молоток с Асгарда\",\r\n            \"Железяка\",\r\n          ]\r\n        },\r\n        {\r\n            user: {\r\n                sex: 'male',\r\n                age: 32,\r\n                country: 'Russia',\r\n                username: 'John'\r\n            },\r\n            rowscolumns: [\r\n              \"Молоток с Асгарда\",\r\n              \"Железяка\",\r\n              \"Халк\",\r\n            ]\r\n          },\r\n          {\r\n              user: {\r\n                  sex: 'male',\r\n                  age: 32,\r\n                  country: 'Russia',\r\n                  username: 'John'\r\n              },\r\n              rowscolumns: [\r\n                \"Молоток с Асгарда\",\r\n                \"Железяка\",\r\n                \"Халк\",\r\n              ]\r\n            },\r\n            {\r\n                user: {\r\n                    sex: 'male',\r\n                    age: 32,\r\n                    country: 'Russia',\r\n                    username: 'John'\r\n                },\r\n                rowscolumns: [\r\n                  \"Молоток с Асгарда\",\r\n                  \"Халк\",\r\n                  \"Железяка\",\r\n                ]\r\n              },\r\n              {\r\n                  user: {\r\n                      sex: 'male',\r\n                      age: 32,\r\n                      country: 'Russia',\r\n                      username: 'John'\r\n                  },\r\n                  rowscolumns: [\r\n                    \"Молоток с Асгарда\",\r\n                    \"Халк\",\r\n                    \"Железяка\",\r\n                  ]\r\n                },\r\n                {\r\n                    user: {\r\n                        sex: 'male',\r\n                        age: 32,\r\n                        country: 'Russia',\r\n                        username: 'John'\r\n                    },\r\n                    rowscolumns: [\r\n                      \"Железяка\",\r\n                      \"Молоток с Асгарда\",\r\n                      \"Халк\",\r\n                    ]\r\n                  },\r\n                  {\r\n                      user: {\r\n                          sex: 'male',\r\n                          age: 32,\r\n                          country: 'Russia',\r\n                          username: 'John'\r\n                      },\r\n                      rowscolumns: [\r\n                        \"Железяка\",\r\n                        \"Молоток с Асгарда\",\r\n                        \"Халк\",\r\n                      ]\r\n                    },\r\n                    {\r\n                        user: {\r\n                            sex: 'male',\r\n                            age: 32,\r\n                            country: 'Russia',\r\n                            username: 'John'\r\n                        },\r\n                        rowscolumns: [\r\n                          \"Железяка\",\r\n                          \"Молоток с Асгарда\",\r\n                          \"Халк\",\r\n                        ]\r\n                      },\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 40,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //     \"Молоток с Асгарда\"\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 16,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 32,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n]\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: 'Мужчины',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Женщины',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Все',\r\n  }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"75%\",\r\n        // paddingLeft: 100,\r\n        // paddingRight: 20,\r\n        marginLeft: 40\r\n    }\r\n});\r\n\r\nconst renderCustomizedLabel = (props) => {\r\n    \r\n    const {cx, cy, midAngle, innerRadius, outerRadius, percent, value} = props\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    const option = props.name\r\n\r\n    return (<>\r\n    {value === 0 ? '' : \r\n    <>\r\n      <text x={x} y={y} fontSize = {14} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n      <text \r\n        x = {cx + (outerRadius + 30) * Math.cos(-midAngle * RADIAN)} \r\n        y = {cy + (outerRadius + 30) * Math.sin(-midAngle * RADIAN)}>\r\n        {option}\r\n      </text>\r\n      </>\r\n    }\r\n    </>);\r\n};\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n\r\nexport default function StatisticsComponent(props){\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([0,99]);\r\n    const [genderValue, setGenderValue] = React.useState(2);\r\n    const [fetchedData, setFetchedData] = React.useState([])\r\n    const [data, setData] = React.useState([])\r\n    const [barData, setBarData] = React.useState([])\r\n    const [ratingData, setRatingData] = React.useState([])\r\n    const [filteredDataLength, setFilteredDataLength] = React.useState(0)\r\n    const [legend, setLegend] = React.useState({})\r\n    \r\n    const [barOptions, setBarOptions] = React.useState([]) // For multiple survey\r\n\r\n    const renderLegend = (props) => {\r\n      const { payload } = props;\r\n    \r\n      return (\r\n        Object.keys(legend).map(key => \r\n          <text  style = {{textAlign: \"center\"}}>\r\n            <text style = {{fontWeight: \"bold\", color: \"steelblue\"}}>{key}</text> : \r\n            {/* {legend[key].map(item => <text style = {{fontStyle: \"italic\"}}> {item} </text>)} */}\r\n            <text style = {{fontStyle: \"italic\"}}> {legend[key].join(\" + \")} </text>\r\n          </text>\r\n        )\r\n      );\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      fetch(`${properties.address}/getStatistics?surveyId=${props.SurveyId}`, \r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n          if (response.status === 200){\r\n            response.json().then(result => {\r\n              setFetchedData(result)\r\n            })\r\n          }\r\n        }\r\n      )\r\n    }, [props.SurveyId])\r\n\r\n    React.useEffect(() => {\r\n      if (fetchedData.length === 0)\r\n        return\r\n      // Filtering by gender and age\r\n      let gender = genderValue === 0 ? 'male' : genderValue === 1 ? 'female' : ''\r\n      let filtered_data = fetchedData.filter(elem => \r\n          (elem.user.age > value[0] && elem.user.age < value[1])\r\n          && ((gender !== '' && elem.user.sex === gender) || (gender === ''))\r\n      )\r\n      setFilteredDataLength(filtered_data.length)\r\n\r\n      // Setting data for Pie Chart (Single and Multiple)\r\n      let arr = []\r\n      switch (props.Type){\r\n        case \"Multiple\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.options.includes(option)).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        case \"Single\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.option === option).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        default:\r\n      }\r\n      setData(arr)\r\n      \r\n      // Setting data for Bar Chart (Multiple)\r\n      if (props.Type === \"Multiple\"){\r\n        let bar_arr = props.Options.map(option => {\r\n          return {\r\n            name: option,\r\n            value: filtered_data.filter(elem => elem.options.includes(option)).length / filtered_data.length * 100\r\n          }\r\n        }).sort((a,b) => b.value - a.value)\r\n        setBarData(bar_arr)\r\n      }\r\n\r\n      // Setting data for Bar Chart (Rating)\r\n      if (props.Type === \"Rating\" && filtered_data.length !== 0){\r\n        let rating_arr = []\r\n\r\n        let accepted = []\r\n        let rows = [...props.Rows]\r\n        let index = 0\r\n        let max = 0\r\n        let max_arr = []\r\n        let bar = {}\r\n        let rating = {}\r\n\r\n        while (rows.length !== 0){\r\n          bar = {}\r\n          rows.forEach(row => {\r\n            bar[row] = filtered_data.filter(rd => rd.rowscolumns[index] === row).length / (filtered_data.length) * 100\r\n          })\r\n          let sum = Object.values(bar).reduce((a,b) => a + b, 0)\r\n          max = Math.max(...Object.values(bar))\r\n\r\n          max_arr = Object.keys(bar).filter(key => bar[key] === max)\r\n          accepted.push(...max_arr)\r\n          rating[props.Columns[index]] = [...max_arr]\r\n          let obj = {}\r\n          obj.name = props.Columns[index]\r\n          rows.forEach(elem => {\r\n            if (bar[elem] !== 0)\r\n              obj[elem] = bar[elem] / sum * 100\r\n          })\r\n          rating_arr.push(obj)\r\n\r\n          index++\r\n          rows = props.Rows.filter(row => !accepted.includes(row))\r\n        }\r\n        setLegend(rating)\r\n\r\n        setRatingData(rating_arr)\r\n      }\r\n\r\n    }, [fetchedData, value, genderValue])\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleGenderChange = (event, newValue) => {\r\n      setGenderValue(newValue)\r\n    }\r\n\r\n    return (<>\r\n    <Grid container>\r\n    <Grid container>\r\n        <Grid item xs = {7}>\r\n          <Typography color = 'primary'>\r\n            {filteredDataLength} голоса\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              Возраст\r\n            </Typography>\r\n            <Slider\r\n              value={value}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {99}\r\n            />\r\n            <Slider\r\n              value={genderValue}\r\n              onChange={handleGenderChange}\r\n              valueLabelDisplay=\"off\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {2}\r\n              marks = {marks}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs = {5}>\r\n          {(props.Type === \"Multiple\" || props.Type === \"Single\") && \r\n            <PieChart width={200} height={200}>\r\n            <Pie\r\n              data={data}\r\n              cx='50%'\r\n              cy='50%'\r\n              labelLine={true}\r\n              label={renderCustomizedLabel}\r\n              outerRadius={45}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {\r\n                data.map((entry, index) => \r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                )\r\n              }\r\n            </Pie>\r\n          </PieChart>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs = {12} alignItems = 'center' justify = 'center'>\r\n            \r\n          {props.Type === \"Multiple\" && \r\n          <BarChart\r\n            width={400}\r\n            height={200}\r\n            data={barData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain = {[0, 100]} />\r\n            <Tooltip />\r\n            <Legend formatter = {() => `% проголосовавших за категорию`}/>\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n          </BarChart>}\r\n          {props.Type === \"Rating\" && \r\n          <>\r\n          <BarChart\r\n            width={500}\r\n            height={200}\r\n            data={ratingData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend \r\n              content={renderLegend} \r\n              wrapperStyle = {{textAlign: \"center\"}}\r\n            />\r\n            {props.Rows.map((row,index) => \r\n              <Bar dataKey = {row} stackId=\"a\" fill={COLORS[index % COLORS.length]} />\r\n            )}\r\n          </BarChart>\r\n          </>}\r\n      </Grid>\r\n    </Grid>\r\n    </>)\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport StatisticsComponent from './StatisticsComponent'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nexport default function SingleSurveyComponent (props){\r\n    const [state, setState] = React.useState({\r\n        choosedOption: \"\",\r\n        value: \"\",\r\n        helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n        error: false,\r\n        img: props.Image,\r\n    })\r\n    const [options, setOptions] = React.useState({})\r\n    const [voted, setVoted] = React.useState(props.Voted)\r\n    const [SurveyId, setSurveyId] = React.useState(props.SurveyId)\r\n    const [img, setImg] = React.useState(props.Image)\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (Object.values(options).filter(value => value === true).length === 0) {\r\n        setState({...state, helperText: 'Выберите вариант', error: true})\r\n      }\r\n      else{\r\n        setState({...state, helperText: 'Ответь сам, чтобы узнать мнения других', error: false})\r\n      }\r\n      fetch(`${properties.address}/answerSurvey`, \r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"surveyId\": props.SurveyId,\r\n          \"choosedOptions\" : Object.keys(options).filter(key => options[key] === true)\r\n          \r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n          if (response.status === 200){\r\n            props.votedCallback()\r\n            setVoted(true)\r\n          }\r\n          else if (response.status === 404 || response.status === 403 ){\r\n            props.History.push('/login')\r\n          }\r\n        }\r\n      )\r\n      \r\n    }\r\n    const handleChange = (event) => {\r\n        setOptions({ ...options, [event.target.name]: event.target.checked });\r\n    }\r\n    const returnBody = e => {\r\n      let body\r\n      if (voted && !props.flipped){\r\n        body = <StatisticsComponent Options = {props.Options} Type = \"Multiple\" SurveyId = {SurveyId}></StatisticsComponent>\r\n      }\r\n      else{\r\n        body = <Grid container>\r\n            <Grid item xs = {img === '' || img === null ? 0 : 4}>\r\n              <img alt = \"\" style = {{width: \"100%\", maxWidth: \"200px\"}} src = {img}></img>\r\n            </Grid>\r\n            <Grid item xs = {img === \"\" || img === null ? 12 : 8}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl \r\n                  component=\"fieldset\"\r\n                  error = {state.error}\r\n                >\r\n                  <FormLabel component=\"legend\">{props.Question}</FormLabel>\r\n                  <FormGroup>\r\n                      {props.Options.map( (option, index) =>\r\n                          <FormControlLabel\r\n                          control={<Checkbox name = {option} onChange = {handleChange} />}\r\n                          label={option}\r\n                          />\r\n                      )}\r\n                  </FormGroup>\r\n                  <FormHelperText>{state.helperText}</FormHelperText>\r\n                  <Button type = \"submit\" variant=\"contained\" color=\"primary\" onChange = {handleSubmit}>Узнать</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n      }\r\n      return body\r\n    }\r\n      return <>\r\n        {returnBody()}\r\n      </>\r\n    }","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatisticsComponent from './StatisticsComponent'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nexport default class SingleSurveyComponent extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n      \r\n      this.state = {\r\n        choosedOption: \"\",\r\n        value: \"\",\r\n        helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n        error: false,\r\n        img: props.Image, // doesn't work this way\r\n        // img: \"\",\r\n        voted: props.Voted,\r\n        flipped: props.flipped,\r\n        open: false\r\n      }\r\n      this.SurveyId = props.SurveyId\r\n      this.History = props.History\r\n      this.votedCallback = props.votedCallback\r\n    }\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (this.state.value === '') {\r\n        this.setHelperText('Выберите вариант');\r\n        this.setState({error: true})\r\n      }\r\n      else{\r\n        this.setHelperText('Ответь сам, чтобы узнать мнения других');\r\n        this.setState({error: false})\r\n      }\r\n      fetch(`${properties.address}/answerSurvey`, \r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"surveyId\": this.SurveyId,\r\n          \"choosedOption\" : this.state.value\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n          if (response.status === 200){\r\n            this.votedCallback()\r\n            this.setState({...this.state, voted : true})\r\n          }\r\n          else if (response.status === 404 || response.status === 403 ){\r\n            this.History.push('/login')\r\n          }\r\n        }\r\n      )\r\n    }\r\n    setHelperText = (text) => {\r\n      this.setState({helperText: text})\r\n    }\r\n    handleChange = (event) => {\r\n      this.setState({value: event.target.value})\r\n    }\r\n    optionChanged = (option) =>{\r\n      this.setState({choosedOption: option})\r\n    }\r\n    handleClose = () => {\r\n      this.setState({open: false})\r\n    }\r\n    handleOpen = surveyToDelete => {\r\n      this.setState({open: true})\r\n    }\r\n    returnBody = e => {\r\n      let body\r\n      if (this.state.voted && !this.props.flipped){\r\n        body = <StatisticsComponent Options = {this.props.Options} Type = \"Single\" SurveyId = {this.SurveyId}></StatisticsComponent>\r\n      }\r\n      else{\r\n        body = <><form onSubmit={this.handleSubmit}>\r\n        <Grid container>\r\n          <Grid item xs = {this.props.Image === '' || this.props.Image === null ? 0 : 4}>\r\n            <img onClick = {this.handleOpen} alt = \"\" style = {{width: \"100%\", maxWidth: \"200px\", cursor: \"pointer\"}} src = {this.props.Image}></img>\r\n            </Grid>\r\n            <Grid item xs = {this.props.Image === \"\" || this.props.Image === null ? 12 : 8}>\r\n              <FormControl \r\n                component=\"fieldset\"\r\n                error = {this.state.error}\r\n              >\r\n                  <FormLabel component=\"legend\">{this.props.Question}</FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" value={this.state.value} onChange = {this.handleChange}>\r\n                  {this.props.Options.map( (option, index) =>\r\n                      <FormControlLabel value={option} control={<Radio />} label={option} key = {index} />\r\n                  )}\r\n                  </RadioGroup>\r\n                  <FormHelperText>{this.state.helperText}</FormHelperText>\r\n                  <Button type = \"submit\" variant=\"contained\" color=\"primary\" >Узнать</Button>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <img alt = \"\" style = {{width: \"100%\"}} src = {this.state.img}></img>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </>\r\n      }\r\n      return body\r\n    }\r\n    render(){\r\n      return <>\r\n        {this.returnBody()}\r\n      </>\r\n    }\r\n  }","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StatisticsComponent from './StatisticsComponent'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cell: {\r\n    padding: \"3px\"\r\n  },\r\n}))\r\n\r\nexport default function RatingSurveyComponent (props){\r\n    const classes = useStyles()\r\n    const [state, setState] = React.useState({\r\n        helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    })\r\n    const [errors, setErrors] = React.useState({\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    })\r\n    // const [selectedValues, setSelectedValues] = React.useState({})\r\n    const [selectedValues, setSelectedValues] = React.useState(new Array(props.Rows.length))\r\n\r\n    const [options, setOptions] = React.useState({})\r\n    const [voted, setVoted] = React.useState(props.Voted)\r\n    const [SurveyId, setSurveyId] = React.useState(props.SurveyId)\r\n    const [body, setBody] = React.useState()\r\n    const [img, setImg] = React.useState(props.Image)\r\n\r\n    const validate = () =>{\r\n      let local_errors = 0\r\n      let duplicate = false\r\n\r\n      if ((new Set(selectedValues.filter(val => val !== undefined))).size !== selectedValues.filter(val => val !== undefined).length){\r\n        duplicate = true\r\n      }\r\n      local_errors = duplicate ? local_errors + 1 : local_errors\r\n      setErrors({\r\n        ...errors, \r\n        duplicate: duplicate ? 'Не более одного варианта в каждой строке / колонке' : '',\r\n        option: (selectedValues.filter(val => val !== undefined).length < props.Rows.length) ? 'Заполните все рядки' : ''\r\n      })\r\n      local_errors = selectedValues.filter(val => val !== undefined).length  < props.Rows.length ? local_errors + 1 : local_errors\r\n      return local_errors\r\n    }\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      if (validate() === 0){\r\n        fetch(`${properties.address}/answerSurvey`, \r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            \"surveyId\": props.SurveyId,\r\n            \"rowsColumns\" : selectedValues\r\n          }),\r\n          redirect: 'follow',\r\n          credentials: 'include'\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200){\r\n              props.votedCallback()\r\n              setVoted(true)\r\n            }\r\n            else if (response.status === 404 || response.status === 403 ){\r\n              props.History.push('/login')\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n    const handleChange = (event, row_index) => {\r\n        // setSelectedValues({...selectedValues, [event.target.name]: event.target.value});\r\n        let old_values = selectedValues\r\n        if (!old_values.includes(event.target.value)){\r\n          old_values[row_index] = event.target.value\r\n          setSelectedValues(old_values);\r\n          setBody(returnBody())\r\n        }\r\n        else{\r\n          let i = old_values.indexOf(event.target.value)\r\n          old_values[i] = undefined\r\n          old_values[row_index] = event.target.value\r\n          setSelectedValues(old_values);\r\n          setBody(returnBody())\r\n        }\r\n    }\r\n    const returnBody = e => {\r\n      let body\r\n      if (voted && !props.flipped){\r\n        body = <StatisticsComponent Rows = {props.Rows} Columns = {props.Columns} Type = \"Rating\" SurveyId = {SurveyId}></StatisticsComponent>\r\n      }\r\n      else{\r\n        body = <Grid container> \r\n            <Grid item xs = {img === '' || img === null ? 0 : 4}>\r\n              <img alt = \"\" style = {{width: \"100%\", maxWidth: \"200px\"}} src = {img}></img>\r\n            </Grid>\r\n            <Grid item xs = {img === \"\" || img === null ? 12 : 8}>\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl \r\n                component=\"fieldset\"\r\n                error = {Object.values(errors).filter(value => value !== '').length > 0}\r\n              >\r\n                <FormLabel component=\"legend\">{props.Question}</FormLabel>\r\n                <FormGroup>\r\n                  <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell className = {classes.cell}></TableCell>\r\n                              {props.Columns.map((column, column_index) => (\r\n                                <TableCell key = {column_index} className = {classes.cell} align=\"center\">{column}</TableCell>\r\n                              ))}\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {props.Rows.map((row, row_index) => (\r\n                              <TableRow key = {row_index}>\r\n                                <TableCell className = {classes.cell} component=\"th\" scope=\"row\">\r\n                                  {row}\r\n                                </TableCell>\r\n                                {props.Columns.map((column, column_index) => (\r\n                                  \r\n                                  <TableCell key = {column_index} align=\"center\" className = {classes.cell}>\r\n                                    {/* <FormControlLabel control={<Radio name = {\"r\" + row_index} onChange = {handleChange} />}/> */}\r\n                                    <Radio \r\n                                      name = {\"r\" + row_index} \r\n                                      onChange = {e => {handleChange(e, column_index)}} \r\n                                      // checked= {selectedValues[\"r\" + row_index] === \"c\" + column_index}\r\n                                      checked= {selectedValues[column_index] === props.Rows[row_index]}\r\n                                      // value = {\"c\" + column_index}\r\n                                      value = {props.Rows[row_index]}\r\n                                    />\r\n                                  </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </FormGroup>\r\n                <FormHelperText>{state.helperText}</FormHelperText>\r\n                {Object.keys(errors).map(key => \r\n                  <FormHelperText>{errors[key]}</FormHelperText>\r\n                )}\r\n                \r\n                <Button type = \"submit\" variant=\"contained\" color=\"primary\" onChange = {handleSubmit}>Узнать</Button>\r\n              </FormControl>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n\r\n      return body\r\n    }\r\n    // React.useEffect(() => {\r\n    //   setBody(returnBody())\r\n    // },[])\r\n    // setBody(returnBody())\r\n      return <>\r\n        {returnBody()}\r\n        {/* {body} */}\r\n      </>\r\n      \r\n      \r\n    }","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // list: {\r\n  //   width: '100%',\r\n  //   maxWidth: '36ch',\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  // },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  root: {\r\n    // maxWidth: 345,\r\n    overflowX: \"auto\",\r\n    marginBottom: \"10px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    // marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  header: {\r\n    padding: 2\r\n  },\r\n  actions: {\r\n    padding: 2\r\n  },\r\n  content: {\r\n    padding: 8\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5\r\n  },\r\n  icon: {\r\n    padding: 3\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [likes, setLikes] = React.useState(props.Likes)\r\n  const [voted, setVoted] = React.useState(props.Voted)\r\n  const [answered, setAnswered] = React.useState(props.Answered)\r\n  const [flipped, setFlipped] = React.useState(!false)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [errors, setErrors] = React.useState({});\r\n  const [state, setState] = React.useState({\r\n    comments: props.Comments\r\n  })\r\n  const { UserId, LoggedInUserId } = props\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const handleLike = e => {\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.ElementId })\r\n      })\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        if (result === 'Added') {\r\n          setLikes(likes + 1)\r\n          setVoted(true)\r\n        }\r\n        else if (result === 'Deleted') {\r\n          setLikes(likes - 1)\r\n          setVoted(false)\r\n        }\r\n      })\r\n  }\r\n  const handleFlip = e => {\r\n    setFlipped(!flipped)\r\n  }\r\n  const votedCallback = e => {\r\n    setAnswered(true)\r\n    setFlipped(false)\r\n  }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleDelete = () => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.ElementId }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          alert('deleted')\r\n        }\r\n      })\r\n  }\r\n  const validateComment = e => {\r\n    let errs = 0\r\n    if (comment.length < 5 || comment.length > 200) {\r\n      errs++\r\n      setErrors({ ...errors, comment: \"Не меньше 5 и не больше 200 символов\" })\r\n    }\r\n    else {\r\n      setErrors({ ...errors, comment: \"\" })\r\n    }\r\n    return errs\r\n  }\r\n  const handleCommentSubmit = e => {\r\n    e.preventDefault()\r\n    if (validateComment() == 0) {\r\n      fetch(`${properties.address}/addComment`,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            content: comment,\r\n            surveyId: props.ElementId\r\n          })\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          let new_comments = state.comments\r\n\r\n          new_comments.push({\r\n            \"content\": comment,\r\n            \"likes\": 0,\r\n            \"user_id\": result.user_id,\r\n            \"username\": props.LoggedInUsername,\r\n            \"date\": result.date,\r\n            \"id\": result.id,\r\n          })\r\n\r\n          setState({ ...state, comments: new_comments })\r\n        })\r\n    }\r\n\r\n  }\r\n  const handleCommentLike = comment => {\r\n    fetch(`${properties.address}/commentLike`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ commentId: comment.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status == 200) {\r\n          return response.json()\r\n        }\r\n      }).then(result => {\r\n        if (result) {\r\n          // new_comments = comments.find(comment -> comment.id === commentId)\r\n          comment.likes = result.likes\r\n          comment.voted = result.voted\r\n          setState({ ...state, comments: state.comments })\r\n        }\r\n      })\r\n  }\r\n  const handleDeleteComment = commentId => {\r\n    fetch(`${properties.address}/deleteComment`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          commentId: commentId,\r\n          surveyId: props.ElementId\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          let new_comments = state.comments.filter(comment => comment.id !== commentId)\r\n          setState({ ...state, comments: new_comments })\r\n        }\r\n      })\r\n  }\r\n  // React.useEffect(() => {\r\n  //   alert('updating ' + props.UserId)\r\n  //   if (props.UserId !== 0){\r\n  //     setState({...state, comments: state.comments})\r\n  //   }\r\n  // }, [UserId])\r\n  return (<>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card className={classes.root}>\r\n\r\n      <CardHeader\r\n        className={classes.header}\r\n        avatar={\r\n          <Avatar variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n            {props.Username && props.Username.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={UserId === LoggedInUserId &&\r\n          <IconButton onClick={handleClick} aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={props.Username}\r\n\r\n        subheader={<Link\r\n          to={`/survey/${props.ElementId}`} \r\n          style={{ textDecoration: 'none' }}>\r\n            {props.Date}\r\n        </Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent\r\n        className={classes.content}\r\n      >\r\n        {/* {Children.map(props.children, child => cloneElement(child, {votedCallback}, {flipped}))} */}\r\n        {/* {Children.map(props.children, child => cloneElement(child, {flipped: flipped, votedCallback: votedCallback}))} */}\r\n        {/* {props.children.length} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: flipped, votedCallback: votedCallback }))}\r\n        {/* { props.children} */}\r\n      </CardContent>\r\n      <CardActions\r\n        className={classes.actions}\r\n        disableSpacing\r\n      >\r\n        <Tooltip title={answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton className={classes.icon} aria-label=\"add to favorites\">\r\n            <CheckIcon color={answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {props.AnsweredAmount > 0 && props.AnsweredAmount}\r\n        <IconButton className={classes.icon} aria-label=\"add to favorites\" onClick={handleLike}>\r\n          <FavoriteIcon color={voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {likes > 0 && likes}\r\n        {answered &&\r\n          <IconButton className={classes.icon} aria-label=\"add to favorites\" onClick={handleFlip}>\r\n            <LoopIcon />\r\n          </IconButton>\r\n        }\r\n        {props.Tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.comments.length})</Typography>\r\n        {!props.SeparateSurvey && <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>}\r\n      </CardActions>\r\n      <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.SeparateSurvey ? true && props.CommentsSection !== false: expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <List>\r\n            {state.comments.map(comment => <>\r\n              <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                    {comment.username && comment.username.charAt(0)}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n\r\n                <ListItemText\r\n                  primary={<>\r\n                    {comment.username + \"  \"}\r\n                    <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                      {comment.date}\r\n                    </Typography>\r\n                  </>}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          className={classes.inline}\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {comment.content}\r\n                        </Typography>\r\n                        <div style={{ marginLeft: \"auto\" }}>\r\n                          {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>}\r\n                          <Typography component=\"span\">\r\n                            {comment.likes != 0 && comment.likes}\r\n                          </Typography>\r\n\r\n                          <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                            <ThumbUpAltIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </>)}\r\n          </List>\r\n          <FormControl style={{ display: \"flex\" }}>\r\n            <form onSubmit={handleCommentSubmit}>\r\n              <TextField\r\n                style={{ display: \"flex\" }}\r\n                id=\"standard-textarea\"\r\n                label=\"Комментировать\"\r\n                placeholder=\"\"\r\n                multiline\r\n                onBlur={(e) => { setComment(e.target.value); e.target.value = \"\" }}\r\n              />\r\n              <FormHelperText error={errors.comment !== null && errors.comment !== \"\"}>{errors.comment}</FormHelperText>\r\n              <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                Отправить\r\n            </Button>\r\n            </form>\r\n          </FormControl>\r\n        </CardContent>\r\n      </Collapse>\r\n\r\n    </Card>\r\n  </>);\r\n}\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result)\r\n            history.push('/new')\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'multiple':\r\n      case 'single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('single')} color={state.type === 'single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('multiple')} color={state.type === 'multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('rating')} color={state.type === 'rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TouchRipple from \"@material-ui/core/ButtonBase/TouchRipple\";\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const history = useHistory();\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: props.Error,\r\n    hasMore: props.HasMore,\r\n    isLoading: props.IsLoading,\r\n    surveys: props.Surveys,\r\n    index: props.Index,\r\n    activeType: props.ActiveType\r\n  })\r\n\r\n  const load = (tag, type) => {\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n\r\n    if (props.Mode)\r\n      request\r\n        .get(url)\r\n        .withCredentials()\r\n        .then((results) => {\r\n          const new_list = results.body.map(el => {\r\n            let body\r\n            switch (el.type) {\r\n              case \"Single\":\r\n                body = <SingleSurveyComponent Image={el.image} Voted={el.answered} History={history} Question={el.question} Options={el.options} SurveyId={el.id} />\r\n\r\n                break\r\n              case \"Multiple\":\r\n                body = <MultipleSurveyComponent Image={el.image} Voted={el.answered} History={history} Question={el.question} Options={el.options} SurveyId={el.id} />\r\n                break\r\n              case \"Rating\":\r\n                body = <RatingSurveyComponent Image={el.image} Voted={el.answered} History={history} Question={el.question} Rows={el.rows} Columns={el.columns} SurveyId={el.id} />\r\n                break\r\n              default:\r\n                body = <div>Ой, с этим опросом что-то не так</div>\r\n            }\r\n            let survey = <CardComponent\r\n              AnsweredAmount={el.answered_amount}\r\n              Voted={el.voted}\r\n              ElementId={el.id}\r\n              key={el.id}\r\n              Username={el.username}\r\n              Likes={el.likes}\r\n              Answered={el.answered}\r\n              Tags={el.tags}\r\n              Comments={el.comments}\r\n              UserId={el.user_id}\r\n              Date={el.date}\r\n              // Date={\"03.03.3030\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {body}\r\n            </CardComponent>\r\n            return survey\r\n          })\r\n          setState({\r\n            ...state,\r\n            hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n            isLoading: false,\r\n            surveys: [\r\n              ...state.surveys,\r\n              ...new_list\r\n            ],\r\n            index: state.index + 1\r\n          })\r\n        })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (error || isLoading || !hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  const {\r\n    error,\r\n    hasMore,\r\n    isLoading,\r\n  } = state;\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {/* {survey.props.ElementId} */}\r\n          {survey}\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {error &&\r\n        <div style={{ color: '#900' }}>\r\n          {error}\r\n        </div>\r\n      }\r\n      {isLoading &&\r\n        <div>Loading...</div>\r\n      }\r\n      {/* {!hasMore &&\r\n        <div>You did it! You reached the end!</div>\r\n      } */}\r\n    </div>\r\n  </>\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    let { id } = useParams()\r\n    id = id === undefined ?  props.SurveyId : id\r\n    const [survey, setSurvey] = React.useState()\r\n    const history = useHistory()\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${id}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then(result => {\r\n                if (result) {\r\n                    setSurvey(result)\r\n                }\r\n            })\r\n    }, [])\r\n    const renderBody = e => {\r\n        let body = null\r\n        switch (survey.type) {\r\n            case \"Single\":\r\n                body = <SingleSurveyComponent\r\n                    Image={survey.image}\r\n                    Voted={survey.answered}\r\n                    History={history}\r\n                    Question={survey.question}\r\n                    Options={survey.options}\r\n                    SurveyId={survey.id}\r\n                />\r\n                break\r\n            case \"Multiple\":\r\n                body = <MultipleSurveyComponent\r\n                    Image={survey.image}\r\n                    Voted={survey.answered}\r\n                    History={history}\r\n                    Question={survey.question}\r\n                    Options={survey.options}\r\n                    SurveyId={survey.id}\r\n                />\r\n                break\r\n            case \"Rating\":\r\n                body = <RatingSurveyComponent\r\n                    Image={survey.image}\r\n                    Voted={survey.answered}\r\n                    History={history}\r\n                    Question={survey.question}\r\n                    Rows={survey.rows}\r\n                    Columns={survey.columns}\r\n                    SurveyId={survey.id}\r\n                />\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        return body\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey &&\r\n            <CardComponent\r\n                AnsweredAmount={survey.answered_amount}\r\n                Voted={survey.voted}\r\n                ElementId={survey.id}\r\n                key={survey.id}\r\n                Username={survey.username}\r\n                Likes={survey.likes}\r\n                Answered={survey.answered}\r\n                Tags={survey.tags}\r\n                Comments={survey.comments}\r\n                UserId={survey.user_id}\r\n                LoggedInUserId={props.UserId}\r\n                LoggedInUsername={props.UserName}\r\n                SeparateSurvey={true}\r\n                Date={survey.date}\r\n                CommentsSection = {props.CommentsSection}\r\n            >\r\n                {renderBody()}\r\n            </CardComponent>}\r\n    </>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n// import Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\nconst styles = (theme) => ({\r\n  listItem: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n});\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h5',\r\n      },\r\n    },\r\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\r\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\r\n    h4: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\r\n    },\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Divider />\r\n      {posts.map((post) =>\r\n        <>\r\n          <ReactMarkdown className={classes.markdown} options={options}>\r\n            {post}\r\n          </ReactMarkdown>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function SendFeedbackComponent(props){\r\n    \r\n  const [feedBack, setFeedBack] = React.useState(\"\")\r\n  const [sent, setSent] = React.useState(false)\r\n\r\n  const handleFeedback = e => {\r\n    if (feedBack !== \"\"){\r\n      fetch(`${properties.address}/sendFeedback`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({text : feedBack}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n          if (response.status === 200){\r\n                setSent(true)\r\n                setFeedBack(\"\")\r\n          }\r\n      })\r\n    }\r\n  }\r\n\r\n    return (<>\r\n        {!sent && <TextField multiline onBlur = { e => setFeedBack(e.target.value)}/>}\r\n        <Button onClick = {sent === false ? handleFeedback : ()=>{} }>{sent === false ? \"Отправить\" : \"Отправлено\"}</Button>\r\n    </>)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n// import Logo from './logo'\r\n\r\n// import AddSingleComponent from \"./Components/AddSingleComponent\"\r\n// import AddRatingComponent from \"./Components/AddRatingComponent\"\r\n// import AddMultipleComponent from \"./Components/AddMultipleComponent\"\r\n// import SingleSurveyComponent from \"./Components/SingleSurveyComponent\"\r\n// import MultipleSurveyComponent from \"./Components/MultipleSurveyComponent\"\r\n// import RatingSurveyComponent from \"./Components/RatingSurveyComponent\"\r\n// import CardComponent from './Components/CardComponent'\r\n// import GridComponent from './Components/GridComponent'\r\nimport TabPanelComponent from './Components/TabPanelComponent'\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport HeaderComponent from './Components/HeaderComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\r\n// import history from './Components/history';\r\nimport InfiniteScroll from './Components/InfiniteScroll'\r\nimport StatisticsComponent from './Components/StatisticsComponent'\r\nimport TestComponent from './Components/TestComponent'\r\nimport CardComponent from \"./Components/CardComponent\";\r\nimport RatingSurveyComponent from \"./Components/RatingSurveyComponent\";\r\nimport TagsComponent from \"./Components/TagsComponent\";\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport SeparateSurveyComponent from \"./Components/SeparateSurveyComponent\";\r\nimport PostComponent from \"./Components/PostComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Container, Paper, TextField, Link } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MarkdownWrapper from \"./Components/MarkdownWrapper\";\r\nimport Button from '@material-ui/core/Button';\r\nimport SendFeedbackComponent from \"./Components/SendFeedbackComponent\";\r\n\r\nconst header = <HeaderComponent></HeaderComponent>\r\n\r\nconst login = <LoginComponent></LoginComponent>\r\nconst signup = <SignUpComponent></SignUpComponent>\r\nconst stats = <StatisticsComponent SurveyId={155}></StatisticsComponent>\r\n\r\n\r\n\r\nconst topTab = <InfiniteScroll Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n\r\n  const about = './Content/about.md'\r\n\r\n  // fetch(about).then(elem => elem.text())\r\n\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    reload: () => { },\r\n    activeType: \"\",\r\n    activeTag: \"\"\r\n  })\r\n\r\n  // This function executes when categoriesComponent is triggered. It fetches new data\r\n  // depending on categories and sets Type of surveys filter to default (empty string \"\")\r\n  // thus updating child TabsComponent and erasing filters\r\n  const customFunc = (tag, type) => {\r\n    // console.log('reloading...' + \"tag = \" + tag + \" type = \" + type)\r\n    setState({ ...state, activeType: type })\r\n    setTimeout(() => { state.reload && state.reload(tag, type) }, 1000)\r\n  }\r\n\r\n  const handler = load => {\r\n    // console.log('setting reload to ' + load)\r\n    setState({ ...state, reload: load })\r\n  }\r\n\r\n  const checkLoginStatus = e => {\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result)\r\n          setState({\r\n            ...state,\r\n            loggedIn: true,\r\n            username: result.username,\r\n            userId: result.user_id,\r\n          })\r\n      })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // console.log(\"reload \" + state.reload)\r\n    checkLoginStatus()\r\n  }, [state.reload])\r\n\r\n  const handleLoggedIn = e => {\r\n    checkLoginStatus()\r\n  }\r\n  const history = createBrowserHistory()\r\n  let value = history.location.pathname === \"/new\" || history.location.pathname === \"/home\" ? 1 : 0\r\n  const mainFeaturedPost = {\r\n    title: 'Title of a longer featured blog post',\r\n    description:\r\n      \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\r\n    image: 'https://source.unsplash.com/random',\r\n    imgText: 'main image description',\r\n    linkText: 'Continue reading…',\r\n  };\r\n  return (\r\n    <Router>\r\n      <Box>\r\n        <Box><HeaderComponent {...header} state={state} setState={setState}></HeaderComponent></Box>\r\n        <Route exact = {true} path={[\"/\", \"/new\", \"/home\", \"/top\"]}>\r\n          <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={8} >\r\n                <TabsComponent DefaultType={state.activeType} Load={customFunc} Value={value}>\r\n                  <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                  <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"New\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                </TabsComponent>\r\n              </Grid>\r\n              <Grid item sm={4} style={{ paddingRight: \"10px\" }}>\r\n                <Hidden only=\"xs\">\r\n                  <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                    <CategoriesComponent LoggedIn={state.loggedIn} Load={customFunc}></CategoriesComponent>\r\n                  </Box>\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Route>\r\n        <Route exact={true} path='/login'>\r\n          <LoginComponent {...login} handleLoggedIn={handleLoggedIn}></LoginComponent>\r\n        </Route>\r\n        <Route path='/createSurvey'>\r\n          <AddSurveyComponent UserName={state.username} UserId={state.userId} />\r\n        </Route>\r\n        <Route path='/profile'>\r\n          <ProfileComponent Username={state.username} userId={state.userId}></ProfileComponent>\r\n        </Route>\r\n        <Route path='/register'>\r\n          {signup}\r\n        </Route>\r\n        <Route path='/registrationConfirm'>\r\n          <ConfirmRegistration></ConfirmRegistration>\r\n        </Route>\r\n        <Route path='/statistics'>\r\n          <CardComponent Voted={true} Answered={true}>\r\n            <RatingSurveyComponent\r\n              Voted={true}\r\n              Question=\"Кто круче?\"\r\n              Rows={[\"Железяка\", \"Халк\", \"Молоток с Асгарда\"]}\r\n              Columns={[\"1\", \"2\", \"3\"]}\r\n              SurveyId={76}\r\n            />\r\n          </CardComponent>\r\n        </Route>\r\n        <Route path='/survey/:id'>\r\n          <SeparateSurveyComponent\r\n            LoggedInUserId={state.user_id}\r\n            LoggedInUsername={state.username}\r\n          />\r\n        </Route>\r\n        <Route path='/news'>\r\n          <PostComponent title=\"Добро пожаловать\" posts={[`\r\n#### 4 июня, 2020\r\n\r\nПервая версия сайта \r\n\r\n- 3 вида опросов (одиночный, множественный, рейтинговый)\r\n- Вход, выход\r\n- Комментарии\r\n- Категории\r\n- Теги\r\n- Фильтры\r\n- Статистика\r\n- Страница профиля с минимальным функционалом\r\n          `]} ></PostComponent>\r\n        </Route>\r\n        <Route path='/donate'>\r\n          <PostComponent title=\"Помощь проекту\" posts={[`\r\nДальнейшая судьба проекта зависит только от вас. Если вам нравится проект вы можете поддержать его здесь :\r\n\r\n- Patreon - [https://www.patreon.com/blogger2015](https://www.patreon.com/blogger2015)\r\n- Яндекс Кошелек - 410013995640387\r\n\r\n---\r\n\r\n###**Форма обратной связи**\r\n\r\n_Здесь можно задать любой вопрос касающийся проекта, оставить пожелания_\r\n_или просто написать как вы поживаете, есть большая вероятность, что_\r\n_я это прочту :) (только для зарегистрированных пользователей)_\r\n\r\n          `]} ></PostComponent>\r\n          <SendFeedbackComponent />\r\n          \r\n        </Route>\r\n        <Route path='SurveyIt/about'>\r\n          {/* <CssBaseline /> */}\r\n          <Container maxWidth='md'>\r\n            <Paper style={{ padding: 10 }} elevation={2}>\r\n              <ReactMarkdown options={options}>\r\n                {`\r\n###_Для чего нужен сайт?_\r\n\r\n---\r\n\r\nОсновная идея это получить ответ на самые неожиданные вопросы вроде \r\n**_Куда лучше поехать - на Мальдивы или Бали?_** или \r\n**_Кто круче в роли Бетмена - Кристиан Бэйл или Бен Аффлек_** ну или\r\n**_Оцените картину от 1 до 5_**.\r\nКак видно выбор вопросов ничем не ограничен\r\n\r\n###_Кому нужен сайт?_\r\n\r\n---\r\n\r\nЕсли вы это читаете, то есть шанс, что имеено вам :)\r\n\r\n###_Как создать опрос?_\r\n\r\n---\r\n\r\nЧтобы добавить опрос нужно [зарегистрироваться](/register), перейти по [ссылке](/createSurvey) \r\nи заполнить форму.\r\n\r\n###_Какие опросы можно создавать?_\r\n\r\n---\r\n\r\nНа данный момент существует возможность создания трех видов опросов \r\n\r\n1. Обычный (одиночный) опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={349}\r\n  CommentsSection = {false}\r\n/>\r\n_хотя для меня очевидно, что платье синее :/_\r\n</details>\r\n2. Множественный опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={352}\r\n  CommentsSection = {false}\r\n/>\r\n</details>\r\n3. Рейтинговый опрос\r\n<details>\r\n<summary>Показать</summary>\r\n<br>\r\n<SeparateSurveyComponent\r\n  LoggedInUserId={state.user_id}\r\n  LoggedInUsername={state.username}\r\n  SurveyId={354}\r\n  CommentsSection = {false}\r\n/>\r\n</details>\r\n\r\n###_Как узнать статистику опроса?_\r\n\r\n---\r\n\r\nЧтобы узнать статистику достаточно проголосовать самому и нажать _показать статистику_\r\n![статистика](https://i.ibb.co/S3T2P2D/Capture1.png). **Внимание** Статистику могут просматривать\r\nтолько проголосовавшие пользователи.\r\n\r\n###_Как удалить свой опрос?_\r\n\r\n---\r\n\r\nДостаточно перейти в [свой профиль](/profile), найти свой опрос и выбрать кнопу _удалить_\r\n\r\n###_Есть ли у сайта будущее?_\r\n\r\n---\r\n\r\nЭто решаете только вы. Лично мне идея поиска ответов на все что угодно нравится. Вы\r\nвсегда можете помочь проекту перейдя по [ссылке](/donate) \r\n\r\n###_Будет ли сайт развиваться?_\r\n\r\n---\r\n\r\nЕсли поступит помощь то ближайшие к реализации возможности это приобретение доменного имени,\r\nзалив на хостинг, возможность анонимного голосования, возможность встраивания\r\nопроса на любой сайт с помощью iframe, выделение _экспертной_ группы или фильтр результатов\r\nпо тем пользователям, которые имеют много лайков в данной категории дабы спрашивать только\r\nу _предположительно знающих_. А также система рейтингов и много много еще чего. На данный\r\nмомент (первая версия) в сайт были добавлены только основные и самые нужные возможности.\r\n\r\n\r\n###_Не получилось пройти регистрацию, что делать?_\r\n\r\n---\r\n\r\nтест234\r\nОбратитесь, пожалуйста, по адресу surveyseveryone@gmail.com с указанием\r\nпроблемы и почтой, которая была указана при регистрации.\r\n                `}\r\n              </ReactMarkdown>\r\n            </Paper>\r\n          </Container>\r\n        </Route>\r\n        <Copyright />\r\n      </Box>\r\n    </Router>\r\n\r\n  );\r\n}\r\nconst options = {\r\n  overrides: {\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    SeparateSurveyComponent: { component : SeparateSurveyComponent}\r\n  }\r\n}\r\n\r\nReactDOM.render(<App></App>, document.getElementById(\"root\"));"],"sourceRoot":""}