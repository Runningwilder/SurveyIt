{"version":3,"sources":["news sync nonrecursive /.md$","news/news1.md","news/news2.md","about sync nonrecursive /.md$","about/news1.md","donate sync nonrecursive /.md$","donate/donate.md","Properties/Properties.js","Components/CategoriesComponent.js","Components/MainMenuComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CommentsComponent.js","Components/CardComponent.js","Components/BaseSurveyComponent.js","Components/InfiniteScroll.js","Components/TabsComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/ProfileComponent.js","Components/Pages/SurveyPageComponent.js","Components/Pages/NewsPageComponent.js","Components/SeparateSurveyComponent.js","Components/Pages/AboutPageComponent.js","Components/Pages/DonatePageComponent.js","Components/PopupComponent.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","properties","useStyles","makeStyles","theme","menu","backgroundColor","root","color","palette","grey","background","checkbox","padding","CategoriesComponent","props","classes","React","useState","categories","checked","setCategories","setChecked","useEffect","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","name","Card","className","List","disablePadding","dense","value","labelId","ListItem","key","button","onClick","currentIndex","indexOf","checkBoxArr","push","splice","body","includes","headers","JSON","stringify","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","list","inactive","textDecoration","icon","common","white","rotate","animation","MainMenuComponent","setMessageFunc","useContext","PopupContext","userInfo","UserContext","checkLoginStatus","useHistory","LoginContext","links","link","profileLinks","callback","state","setState","index","to","selectedIndex","selected","window","location","pathname","search","loggedIn","open","Collapse","in","timeout","unmountOnExit","MapChart","content","setContent","markers","data-tip","projection","height","projectionConfig","zoom","center","geography","geographies","geo","onMouseEnter","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","r","expand","transform","transition","transitions","create","duration","shortest","expandOpen","KeyPressedContext","createContext","RandomComponent","isLoading","survey","expanded","keyPressed","getRandom","handleExpandMapClick","console","log","onkeyup","keyCode","Provider","Grid","item","sm","margin","marginTop","BaseSurveyComponent","openMap","bindKeys","surveyJson","onSurveyDeleteFunc","IconButton","display","clsx","Button","variant","borderTop","locations","SingleSurveyComponent","keyUpEvent","error","voted","answered","options","helperText","HelperText","chart","undefined","handleSubmit","preventDefault","submitOptions","validate","processDataFunc","longestOption","elem","sort","e1","e2","length","choosedOptions","width","data","layout","type","hide","tick","x","y","textAnchor","fontWeight","payload","dataKey","newPayload","count","values","handleChange","event","target","Answered","getStats","newValue","FormControl","component","flipped","onSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","onChange","label","FormHelperText","bar","fontSize","choosedOption","forEach","opt","barSize","RadioGroup","Radio","RatingSurveyComponent","errors","duplicate","selectedValues","Array","rows","totalError","Set","val","size","TableContainer","Paper","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","oldValues","i","avatar","CommentsComponent","commentError","comment","comments","handleCommentSubmit","surveyId","newComments","date","Date","user_id","getFullYear","getMonth","getDate","setCommentsLength","CardContent","paddingLeft","alignItems","ListItemAvatar","Avatar","aria-label","username","charAt","Typography","secondary","Fragment","wordBreak","marginLeft","userId","commentId","likes","handleCommentLike","Divider","TextField","placeholder","multiline","onBlur","header","main","tag","typography","fontFamily","action","CardComponent","answeredAmount","answered_amount","anchorEl","commentsCount","handleClose","Menu","keepMounted","Boolean","onClose","MenuItem","CardHeader","currentTarget","subheader","Children","children","child","cloneElement","CardActions","disableSpacing","Tooltip","title","tags","marginRight","marginBottom","paragraph","aria-expanded","surveyCard","history","img","image","opened","params","choosedIndex","validatingFunc","History","tabindex","container","xs","alt","maxWidth","cursor","src","Dialog","position","right","InfiniteScroll","ref","useRef","hasMore","surveys","load","clearSurveys","url","Mode","request","get","withCredentials","results","new_list","s","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","ActiveType","SetReloadFunction","ElementId","tabs","mainBox","indicator","TabsComponent","path","split","pop","activeType","reloadFunc","handleFilter","newType","changeReloadFunc","Box","paddingRight","paddingTop","spacing","justify","Tabs","TabIndicatorProps","selectionFollowsFocus","centered","Tab","Link","paper","flexDirection","form","submit","LoginComponent","password","jwt","connected","handleOnChange","Container","CssBaseline","noValidate","required","fullWidth","autoComplete","autoFocus","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","serverErrors","clientErrors","succesMessage","countries","setCountries","errs","defaultValue","select","SelectProps","native","max","min","from","el","border","borderRadius","borderColor","boxShadow","input","popper","fetchedTag","h1","TagsComponent","setTags","setValue","setAnchorEl","fetchedTags","setFetchedTags","CallBack","handleClick","Input","some","Popper","anchorOrigin","vertical","horizontal","transformOrigin","elevation","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","InputLabel","htmlFor","c","renderBody","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","UserId","Username","CircularProgress","ListItemSecondaryAction","handleOpen","DialogTitle","DialogContent","DialogContentText","DialogActions","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","NewsPageComponent","posts","setPosts","markdownFiles","require","reverse","a","Promise","all","file","res","text","catch","err","fetchData","renderers","overrides","p","li","h4","post","idx","SurveyId","AboutPageComponent","DonatePageComponent","popup","zIndex","bottom","left","info","PopupComponent","Slide","direction","mountOnEnter","Copyright","href","App","activeTag","hidden","msg","setTimeout","Fade","exact","render","Hidden","only","top","christmasTheme","createMuiTheme","MuiListItem","shape","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.0b943228.chunk.js","sourcesContent":["var map = {\n\t\"./news1.md\": 549,\n\t\"./news2.md\": 550\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 548;","module.exports = __webpack_public_path__ + \"static/media/news1.4399bb34.md\";","module.exports = __webpack_public_path__ + \"static/media/news2.2268c892.md\";","var map = {\n\t\"./news1.md\": 552\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 551;","module.exports = __webpack_public_path__ + \"static/media/news1.a4a7d84c.md\";","var map = {\n\t\"./donate.md\": 554\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 553;","module.exports = __webpack_public_path__ + \"static/media/donate.ac8b0735.md\";","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     repo: \"/SurveyIt\", // For redirecting issues at GitHub Pages\r\n     // repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    backgroundColor: \"#4c546391\"\r\n  },\r\n  root: {\r\n    color: theme.palette.grey[300],\r\n    \"&:hover\": {\r\n      background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  // tag: {\r\n  //   margin: 2,\r\n  //   backgroundColor: \"#a2a2dc\",\r\n  //   margin: 2,\r\n  //   borderRadius: 5,\r\n  //   cursor: \"pointer\",\r\n  //   '&:hover': {\r\n  //     backgroundColor: \"#c3c3ec\",\r\n  //   },\r\n  //   fontSize: 10,\r\n  //   color: \"#2f4f4f\",\r\n  //   padding: 2,\r\n  //   width: \"max-content\"\r\n  // },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card className={classes.menu}>\r\n      <List disablePadding dense>\r\n        {categories.map(category => {\r\n          const labelId = `checkbox-list-label-${category.name}`\r\n          return (\r\n            <ListItem\r\n              className={classes.root}\r\n              key={`category-${category.id}`}\r\n              button\r\n              onClick={handleToggle(category.name)}\r\n\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n        }\r\n        )}\r\n      </List>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js'\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { UserContext } from '../index'\r\nimport { PopupContext } from '../index'\r\nimport { LoginContext } from '../index'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        padding: 0\r\n    },\r\n    checkbox: {\r\n        padding: 3\r\n    },\r\n    inactive: {\r\n        color: theme.palette.grey[300],\r\n        textDecoration: \"none\"\r\n    },\r\n    menu: {\r\n        backgroundColor: \"#4c546391\"\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[300],\r\n    },\r\n    root: {\r\n        \"&:hover\": {\r\n            // backgroundColor: theme.palette.grey[700],\r\n            background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n            // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n        },\r\n        color: theme.palette.common.white,\r\n    },\r\n    rotate: {\r\n        // transform: \"rotate(70deg)\"\r\n        animation: `spin 15s linear infinite`\r\n    }\r\n\r\n}))\r\nexport default function MainMenuComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const userInfo = React.useContext(UserContext)\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const checkLoginStatus = React.useContext(LoginContext)\r\n    const signOut = e => {\r\n        fetch(`${properties.address}/signout`,\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // props.CheckLoginStatus()\r\n                    checkLoginStatus()\r\n                    setMessageFunc(\"Вы вышли :(\")\r\n\r\n                }\r\n            })\r\n    }\r\n    const [state, setState] = React.useState({\r\n        links: [{\r\n            name: \"Новогодние\",\r\n            link: `random?tag=newyear`,\r\n            icon: <AcUnitIcon className={classes.rotate} />,\r\n        }, {\r\n            name: \"Домашняя\",\r\n            // link: `${properties.repo}/home`,\r\n            link: `home`,\r\n            icon: <HomeIcon />,\r\n        }, {\r\n            name: \"Рандом\",\r\n            // link: `${properties.repo}/random`,\r\n            link: `random`,\r\n            icon: <ContactSupportIcon />,\r\n        }, {\r\n            name: \"Купить кофе\",\r\n            link: `donate`,\r\n            icon: <FreeBreakfastIcon />,\r\n        }, {\r\n            name: \"История изменений\",\r\n            link: `news`,\r\n            icon: <UpdateIcon />,\r\n        }, {\r\n            name: \"О сайте\",\r\n            link: `about`,\r\n            icon: <InfoIcon />\r\n        }],\r\n        profileLinks: [{\r\n            name: \"Профиль\",\r\n            link: `profile`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Создать\",\r\n            link: `createSurvey`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Выйти\",\r\n            link: `signout`,\r\n            icon: null,\r\n            callback: signOut\r\n        }],\r\n        // selectedIndex: 0,\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setState({ ...state, open: !state.open })\r\n    }\r\n\r\n    return <>\r\n        <Card className={classes.menu}>\r\n            <List disablePadding dense>\r\n                {state.links.map((link, index) => <>\r\n                    <Link to={`${properties.repo}/${link.link}`}\r\n                        className={classes.inactive}\r\n                        onClick={e => setState({ ...state, selectedIndex: index })}\r\n                    >\r\n                        <ListItem\r\n                            button\r\n                            selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                            className={classes.root}\r\n                        >\r\n                            <ListItemIcon\r\n                                className={classes.icon}>\r\n                                {link.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={link.name} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </>\r\n                )}\r\n                {!userInfo.loggedIn && <Link to={`${properties.repo}/login`}\r\n                    className={classes.inactive}\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/login`}\r\n                        className={classes.root}\r\n                    >\r\n                        <ListItemText primary={\"Sign In / Sign Up\"} />\r\n                    </ListItem>\r\n                </Link>}\r\n                {userInfo.loggedIn && <><ListItem className={classes.root} button onClick={handleClick}>\r\n\r\n                    <ListItemIcon\r\n                        className={classes.icon}>\r\n                        <AccountCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Профиль\" />\r\n                    {state.open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                    <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n                        <List disablePadding dense>\r\n                            {state.profileLinks.map((link, index) =>\r\n                                <Link to={`${properties.repo}/${link.link}`}\r\n                                    className={classes.inactive}\r\n                                >\r\n                                    <ListItem\r\n                                        button\r\n                                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                                        className={classes.root}\r\n                                        onClick={link.callback}\r\n                                    >\r\n                                        <ListItemText primary={link.name} />\r\n                                    </ListItem>\r\n                                </Link>)}\r\n                        </List>\r\n                    </Collapse></>}\r\n            </List>\r\n        </Card>\r\n    </>\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"   height=\"300\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={3} center={[50, 50]}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PopupContext } from '../../index'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}))\r\n\r\nexport const KeyPressedContext = React.createContext(null)\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {},\r\n        expanded: false,\r\n        keyPressed: null,\r\n    })\r\n\r\n    const getRandom = e => {\r\n        setState({ ...state, isLoading: true, keyPressed: null });\r\n        fetch(`${properties.address}/getRandom${window.location.search}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                setState({ ...state, survey: result, isLoading: false })\r\n                if (result == null)\r\n                    setMessageFunc(\"Ничего не найдено :(\")\r\n            })\r\n    }\r\n    const onSurveyDeleteFunc = e => {\r\n        getRandom()\r\n    }\r\n    const handleExpandMapClick = e => {\r\n        console.log(state.expanded)\r\n        setState({ ...state, expanded: !state.expanded })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getRandom()\r\n    }, [props.location.search])\r\n\r\n    window.onkeyup = e => {\r\n        if (e.keyCode === 32) {\r\n            getRandom()\r\n            return\r\n        }\r\n        if (e.keyCode === 77) {\r\n            setState({ ...state, expanded: !state.expanded })\r\n            return\r\n        }\r\n        setState({ ...state, keyPressed: e })\r\n    }\r\n\r\n    return <KeyPressedContext.Provider value={state.keyPressed} >\r\n        <Grid item sm={9} style={{ margin: \"auto\", marginTop: \"20px\" }}>\r\n            {state.survey != null && !state.isLoading && <BaseSurveyComponent openMap={handleExpandMapClick} bindKeys={true} surveyJson={state.survey} onSurveyDeleteFunc={onSurveyDeleteFunc} />}\r\n\r\n            <Card style={{ backgroundColor: \"antiquewhite\" }} onClick={handleExpandMapClick}>\r\n                <IconButton\r\n                    style={{ padding: \"0\", margin: \"0 auto\", display: \"block\" }}\r\n                    className={clsx(classes.expand, { [classes.expandOpen]: state.expanded, })}\r\n\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </Card>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={getRandom}>Дальше</Button>\r\n            <Collapse timeout={2000} style={{ borderTop: \"1px solid #e0e0e0\" }} in={state.expanded} unmountOnExit>\r\n                <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n            </ Collapse>\r\n        </Grid>\r\n    </KeyPressedContext.Provider>\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    if (e)\r\n      e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  React.useEffect(() => {\r\n    if (keyUpEvent)\r\n      keyUpEvent = keyUpEvent.keyCode\r\n    if (keyUpEvent >= 49 && keyUpEvent <= 49 + Object.keys(props.surveyJson.options).length - 1) {\r\n      let newValue = !state.options[props.surveyJson.options[keyUpEvent - 49]]\r\n      setState({ ...state, options: { ...state.options, [props.surveyJson.options[keyUpEvent - 49]]: newValue } })\r\n    }\r\n    if (keyUpEvent === 13) {\r\n      handleSubmit()\r\n    }\r\n  }, [keyUpEvent])\r\n\r\n  React.useEffect(() => {\r\n    // setState({ ...state, options: {}, error: false })\r\n    setState({ ...state, error: false })\r\n  }, [])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              checked={state.options[option] == true}\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { KeyPressedContext } from './Pages/RandomPageComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  bar: {\r\n    color: \"red\",\r\n    fontSize: \"smaller\"\r\n  },\r\n}))\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  const f = props\r\n  props = props.props\r\n  let keyUpEvent = React.useContext(KeyPressedContext)\r\n  // let key = React.useContext(KeyPressedContext)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined,\r\n    options: props.surveyJson.options.map(option => ({ name: option, chart: <br /> })),\r\n    keyPressed: null\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const handleSubmit = e => {\r\n    if (state.voted)\r\n      return\r\n    if (e)\r\n      e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n\r\n    state.options.forEach(option => {\r\n      let data = result.filter(opt => opt.name === option.name)\r\n      option.name = option.name\r\n      option.value = data[0].value\r\n      let chart = <BarChart\r\n\r\n        width={14 * longestOption + 200}\r\n        height={20}\r\n        data={data}\r\n        barSize={10}\r\n        layout=\"vertical\">\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          // height={10}\r\n          hide\r\n          tick={props => {\r\n            return <text\r\n              x={props.x}\r\n              y={props.y}\r\n              textAnchor=\"end\"\r\n              fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n              fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n            >\r\n              {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n            </text>\r\n          }}\r\n          type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n        <Tooltip content={props => {\r\n          if (props.payload[0] != null) {\r\n            const newPayload = [{\r\n              name: 'голосов',\r\n              value: props.payload[0].payload.count\r\n            }]\r\n            return <DefaultTooltipContent {...props} payload={newPayload} />\r\n          }\r\n          return <DefaultTooltipContent {...props} />\r\n        }} />\r\n        <Bar background={{ fill: '#eee' }} dataKey=\"value\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n      option.chart = chart\r\n    })\r\n\r\n    setState({ ...state, options: state.options, voted: true })\r\n  }\r\n\r\n  const handleChange = e => {\r\n    if (state.voted)\r\n      return\r\n    setState({ ...state, choosedOption: e.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  React.useEffect(() => {\r\n    if (keyUpEvent)\r\n      keyUpEvent = keyUpEvent.keyCode \r\n    if (keyUpEvent >= 49 && keyUpEvent <= 49 + state.options.length - 1) {\r\n      setState({ ...state, choosedOption: state.options[keyUpEvent - 49].name })\r\n    }\r\n    if (keyUpEvent === 13){\r\n      handleSubmit()\r\n    }\r\n  }, [keyUpEvent])\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, choosedOption: \"\", error: false })\r\n  }, [])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {/* {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n    \r\n        {props.surveyJson.options.map(option =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          test\r\n          </>\r\n        )}  */}\r\n      <RadioGroup value={props.surveyJson.choosedOption ? props.surveyJson.choosedOption : state.choosedOption} onChange={handleChange}>\r\n\r\n        {state.options.map((option, index) =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option.name}\r\n              control={<Radio />}\r\n              label={<div style={{ color: state.choosedOption === option.name ? \"blue\" : \"black\" }}>{option.name}{state.voted ? ` (${option.value}%)` : \"\"}</div>}\r\n            />\r\n            <div className={classes.bar}>\r\n              {option.chart}\r\n            </div>\r\n          </>\r\n        )}\r\n      </RadioGroup>\r\n      {/* {props.Answered && state.chart} */}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!state.voted && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>\r\n    }\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl >\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n  }\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered && <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>}\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PopupContext } from '../index'\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        backgroundColor: \"#41465f\",\r\n    }\r\n}));\r\n\r\nexport default function CommentsComponent(props) {\r\n    const userInfo = React.useContext(UserContext)\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n    const [state, setState] = React.useState({\r\n        commentError: \"\",\r\n        comment: \"\",\r\n        comments: props.surveyJson.comments,\r\n    })\r\n    const handleCommentSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (state.comment.length < 5 || state.comment.length > 200) {\r\n            setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n            return\r\n        }\r\n        setState({ ...state, commentError: \"\" })\r\n\r\n        fetch(`${properties.address}/addComment`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    content: state.comment,\r\n                    surveyId: props.surveyJson.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (!result)\r\n                    return\r\n                console.log(result)\r\n                let newComments = state.comments\r\n                let date = new Date(result.date)\r\n                newComments.push({\r\n                    \"content\": state.comment,\r\n                    \"likes\": 0,\r\n                    \"user_id\": result.user_id,\r\n                    \"username\": \"admin\",\r\n                    \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n                    \"id\": result.id,\r\n                })\r\n\r\n                setState({ ...state, comments: newComments })\r\n                if (props.setCommentsLength)\r\n                    props.setCommentsLength(newComments.length)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCommentLike = comment => {\r\n\r\n        if (userInfo.userId === null) {\r\n            setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n            return\r\n        }\r\n\r\n        comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n        comment.voted = !comment.voted\r\n        setState({ ...state, comments: state.comments })\r\n\r\n        fetch(`${properties.address}/commentLike`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ commentId: comment.id })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n                    comment.voted = !comment.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            }).then(result => {\r\n                if (result) {\r\n                    // new_comments = comments.find(comment -> comment.id === commentId)\r\n                    comment.likes = result.likes\r\n                    comment.voted = result.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDeleteComment = commentId => {\r\n        fetch(`${properties.address}/deleteComment`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    commentId: commentId\r\n                }),\r\n                redirect: 'follow',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n                    setState({ ...state, comments: newComments })\r\n                    if (props.setCommentsLength)\r\n                        props.setCommentsLength(newComments.length)\r\n                    setMessageFunc(\"Комментарий удален :)\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            <List>\r\n                {state.comments.map(comment => <>\r\n                    <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                                {comment.username && comment.username.charAt(0)}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={<>\r\n                                {comment.username + \"  \"}\r\n                                <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                                    {comment.date}\r\n                                </Typography>\r\n                            </>}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            style={{ display: \"inline\" }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {comment.content}\r\n                                        </Typography>\r\n                                        <div style={{ marginLeft: \"auto\" }}>\r\n                                            {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                                            {userInfo.userId === props.surveyJson.userId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                                                <DeleteOutlineOutlinedIcon />\r\n                                            </IconButton>}\r\n                                            <Typography component=\"span\">\r\n                                                {comment.likes != 0 && comment.likes}\r\n                                            </Typography>\r\n\r\n                                            <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                                                <ThumbUpAltIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </>)}\r\n            </List>\r\n            <FormControl style={{ display: \"flex\" }}>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <TextField\r\n                        style={{ display: \"flex\" }}\r\n                        id=\"standard-textarea\"\r\n                        label=\"Комментировать\"\r\n                        placeholder=\"\"\r\n                        multiline\r\n                        onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n                    />\r\n                    {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n                    <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n                </form>\r\n            </FormControl>\r\n        </CardContent>\r\n    </Collapse>\r\n\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\nimport CommentsComponent from \"./CommentsComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentsCount: props.surveyJson.comments.length\r\n  })\r\n\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = e => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n\r\n  const handleLike = e => {\r\n    if (userInfo.userId === null) {\r\n      setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n      return\r\n    }\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          setMessageFunc(\"Удалено :)\")\r\n          if (props.onSurveyDeleteFunc)\r\n            props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const setCommentsLength = count => {\r\n    setState({ ...state, commentsCount: count })\r\n  }\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`${properties.repo}/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"0px\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.commentsCount})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <CommentsComponent surveyJson={props.surveyJson}\r\n        expanded={state.expanded}\r\n        setCommentsLength={setCommentsLength}\r\n      />\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PopupContext } from '../index'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  surveyCard: {\r\n    \"&:focus\": {\r\n      outline: \"none\"\r\n    }\r\n  },\r\n}))\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const img = props.surveyJson.image;\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered,\r\n    open: false,\r\n    // choosedIndex: -1,\r\n    pressed: false\r\n  })\r\n\r\n  const handleClose = opened => {\r\n    setState({ ...state, open: opened })\r\n  }\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n  \r\n  const params = { \r\n    \"pressed\": state.pressed, \r\n    \"choosedIndex\": state.choosedIndex, \r\n    \"getStats\": getStats, \r\n    \"Answered\": state.answered, \r\n    \"handleSubmit\": handleSubmit, \r\n    \"surveyJson\": props.surveyJson, \r\n    \"HelperText\": state.helperText, \r\n    \"History\": history ,\r\n    \"onSurveyDeleteFunc\": props.onSurveyDeleteFunc,\r\n    \"openMap\": props.openMap,\r\n  }\r\n  return <>\r\n    {/* {returnBody()} */}\r\n    <CardComponent\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      onSurveyDeleteFunc={props.onSurveyDeleteFunc}\r\n    >\r\n      <Grid\r\n        tabindex={0}\r\n        id = \"surveyCard\"\r\n        className={classes.surveyCard} container >\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img onClick={() => handleClose(true)} alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\", cursor: \"pointer\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {props.surveyJson.type === \"Single\" && <SingleSurveyComponent props={params} />}\r\n          {props.surveyJson.type === \"Multiple\" && <MultipleSurveyComponent props={params} />}\r\n          {props.surveyJson.type === \"Rating\" && <RatingSurveyComponent props={params} />}\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={state.open}\r\n        onClose={() => { handleClose(false) }}\r\n      >\r\n        <IconButton style={{ position: \"absolute\", right: \"0\" }} onClick={() => { handleClose(false) }}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <img alt=\"\" style={{ width: \"100%\" }} src={img}></img>\r\n      </Dialog>\r\n    </CardComponent >\r\n  </>\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    hasMore: true,\r\n    isLoading: true,\r\n    surveys: [],\r\n    index: 0,\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    // alert('Удалено :)')\r\n  }\r\n  const load = (tag, type, clearSurveys) => {\r\n    if (clearSurveys)\r\n      setState({ ...state, surveys: [] })\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n    request\r\n      .get(url)\r\n      .withCredentials()\r\n      .then((results) => {\r\n        const new_list = results.body.map(s =>\r\n          <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n        setState({\r\n          ...state,\r\n          hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n          isLoading: false,\r\n          surveys: [\r\n            ...state.surveys,\r\n            ...new_list\r\n          ],\r\n          index: state.index + 1\r\n        })\r\n      })\r\n  }\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (state.error || state.isLoading || !state.hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {state.error &&\r\n        <div style={{ color: '#900' }}>\r\n          {state.error}\r\n        </div>\r\n      }\r\n      {state.isLoading && <div>Loading...</div>}\r\n      {!state.hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { PopupContext } from '../index'\r\nimport InfiniteScroll from './InfiniteScroll'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: 'white',\r\n  }\r\n}))\r\n\r\nexport default function TabsComponent(props) {\r\n\r\n  const history = useHistory()\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const classes = useStyles()\r\n  const path = history.location.pathname.split(\"/\").pop()\r\n  const [state, setState] = React.useState({\r\n    value: path === \"new\" || path === \"home\" ? 1 : 0,\r\n    activeType: \"\",\r\n    reloadFunc: undefined,\r\n  })\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setState({ ...state, value: newValue })\r\n  }\r\n\r\n  const handleFilter = type => {\r\n    let newType = state.activeType === type ? \"\" : type\r\n    setState({ ...state, activeType: newType })\r\n    state.reloadFunc(undefined, newType)\r\n  }\r\n\r\n  const changeReloadFunc = load => {\r\n    setState({ ...state, reloadFunc: load })\r\n  }\r\n\r\n  return <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n    <Grid container spacing={3} alignItems=\"flex-start\" justify=\"flex-start\">\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.tabs}>\r\n          <Tabs TabIndicatorProps={{ style: { backgroundColor: 'white' } }} selectionFollowsFocus centered value={state.value}  >\r\n            <Tab onClick={e => handleChange(e, 0)} component={Link} to={`${properties.repo}/top`} label=\"TOP\" />\r\n            <Tab onClick={e => handleChange(e, 1)} component={Link} to={`${properties.repo}/new`} label=\"NEW\" />\r\n\r\n            <Tooltip title=\"Единичный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"SINGLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"SINGLE\") }}\r\n              >\r\n                <ViewListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Множественный выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"MULTIPLE\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"MULTIPLE\") }}\r\n              >\r\n                <FormatListBulletedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Рейтинговый выбор\">\r\n              <IconButton\r\n                color={state.activeType === \"RATING\" ? \"default\" : \"primary\"}\r\n                onClick={e => { handleFilter(\"RATING\") }}\r\n              >\r\n                <AppsIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Tabs>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} id=\"surveys\">\r\n        <Paper className={classes.mainBox}>\r\n          <Box  >\r\n            {state.value == 0 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"Top\" />}\r\n            {state.value == 1 && <InfiniteScroll ActiveType={state.activeType} SetReloadFunction={changeReloadFunc} Mode=\"New\" />}\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  </Box>\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"username\": state.username, \"password\": state.password }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          setState({ ...state, error: true })\r\n        }\r\n        else if (response.status === 200) {\r\n          props.handleLoggedIn()\r\n          history.push(`${properties.repo}/home`)\r\n        }\r\n      }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <FormHelperText error={true}>\r\n              {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n            </FormHelperText>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.username}\r\n              onChange={handleOnChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={state.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/register`} variant=\"body2\">\r\n                  Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    matchingPassword: '',\r\n    gender: '',\r\n    age: '',\r\n    country: '',\r\n    errors: {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        // credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          setCountries([{ name: \"\", id: 0 }, ...result])\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0) {\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150) {\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\") {\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\") {\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/signUp`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"name\": state.name,\r\n          \"password\": state.password,\r\n          \"email\": state.email,\r\n          \"matchingPassword\": state.matchingPassword,\r\n          \"country\": state.country,\r\n          \"age\": state.age,\r\n          \"gender\": state.gender,\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 400) {\r\n          response.json().then(result => {\r\n\r\n            setState({\r\n              ...state, errors: {\r\n                ...state.errors,\r\n                serverErrors: result,\r\n                clientErrors: validate()\r\n              }\r\n            })\r\n          })\r\n        }\r\n        else if (response.status === 200) {\r\n          setState({\r\n            ...state,\r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"\r\n          })\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <Typography component=\"h2\">\r\n            {state.succesMessage}\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"login\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  defaultValue={state.name}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"gender\"\r\n                  label=\"Пол\"\r\n                  defaultValue={\"none\"}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                >\r\n                  <option value=\"\" ></option>\r\n                  <option value=\"male\" >Мужской</option>\r\n                  <option value=\"female\" >Женский</option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    max: 150,\r\n                    min: 0\r\n                  }}\r\n                  name=\"age\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"age\"\r\n                  type=\"number\"\r\n                  label=\"Возраст\"\r\n                  defaultValue={state.age}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  name=\"country\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Страна\"\r\n                  // native\r\n                  // defaultValue = {state.country}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                // autoFocus\r\n                >\r\n                  {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country =>\r\n                    <option key={`country-${country.id}`} value={country.name} >{country.name}</option>\r\n                  )}\r\n                  {/* </FixedSizeList> */}\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  defaultValue={state.email}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.password}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"matchingPassword\"\r\n                  label=\"Confirm your password\"\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.matchingPassword}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n                <FormHelperText error={true}>\r\n                  {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n                </FormHelperText>\r\n\r\n                {Array.from(state.errors.clientErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n                {Array.from(state.errors.serverErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/login`} variant=\"body2\">\r\n                  Уже есть аккаунт? Войти\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'Single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'Rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result){\r\n            setMessageFunc(\"Опрос создан :)\")\r\n            history.push(`${properties.repo}/new`)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'Single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'Multiple':\r\n      case 'Single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'Rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('Single')} color={state.type === 'Single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('Multiple')} color={state.type === 'Multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('Rating')} color={state.type === 'Rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <BaseSurveyComponent\r\n              surveyJson={{\r\n                type: state.type,\r\n                comments: [],\r\n                tags: [],\r\n                options: Array.from(state.options),\r\n                rows: Array.from(state.rows),\r\n                columns: Array.from(state.columns)\r\n              }} />\r\n            {/* <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent> */}\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`${properties.repo}/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\nimport CommentsComponent from \"../CommentsComponent\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        history.push(`${properties.repo}/profile`)\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n        {/* <CommentsComponent /> */}\r\n    </>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nexport default function NewsPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n    console.log(\"importing...\")\r\n    const markdownFiles = importAll(require.context('../../news', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const renderers = {\r\n        overrides: {\r\n            p: { component: Typography, props: { paragraph: true } },\r\n            li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n            h4: { component: Typography, props: { variant: \"h6\" } }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n\r\n                        <ReactMarkdown options={renderers}>\r\n\r\n                            {\r\n                                // <Typography> post </Typography>\r\n                                post\r\n                            }\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { properties } from '../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport CategoriesComponent from \"./CategoriesComponent\"\r\nimport MainMenuComponent from \"./MainMenuComponent\"\r\nimport MapChart from './MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${props.SurveyId}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }, [])\r\n    return <>\r\n        {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} />}</>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function AboutPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../about', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function DonatePageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../donate', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport MainMenuComponent from './Components/MainMenuComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport NewsPageComponent from \"./Components/Pages/NewsPageComponent\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport AboutPageComponent from \"./Components/Pages/AboutPageComponent\";\r\nimport DonatePageComponent from \"./Components/Pages/DonatePageComponent\";\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nexport const LoginContext = React.createContext(() => { })\r\n\r\nfunction App() {\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    activeType: \"\",\r\n    activeTag: \"\",\r\n    message: \"\",\r\n    hidden: true,\r\n    userInfo: {\r\n      username: null,\r\n      userId: null,\r\n      loggedIn: null\r\n    }\r\n  })\r\n\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n        else {\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: null,\r\n              userId: null,\r\n              loggedIn: false\r\n            }\r\n          })\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setState({\r\n            ...state, userInfo: {\r\n              username: result.username,\r\n              userId: result.user_id,\r\n              loggedIn: true\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  const setMessageFunc = msg => {\r\n    setState({ ...state, message: msg, hidden: false })\r\n    setTimeout(() => {\r\n      setState({ ...state, message: msg, hidden: true })\r\n    }, 3000)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n\r\n  return (\r\n    <LoginContext.Provider value={checkLoginStatus}>\r\n      <UserContext.Provider value={state.userInfo}>\r\n        <PopupContext.Provider value={setMessageFunc}>\r\n          <Router>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={9} >\r\n                <Box>\r\n                  <Fade in={!state.hidden} timeout={500}>\r\n                    <div>\r\n                      <PopupComponent message={state.message} />\r\n                    </div>\r\n                  </Fade>\r\n                  <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}><TabsComponent /></Route>\r\n                  <Route path={`${properties.repo}/random`} render={props => <RandomPageComponent {...props} />} />\r\n                  <Route path={`${properties.repo}/login`}><LoginComponent handleLoggedIn={checkLoginStatus} /></Route>\r\n                  <Route path={`${properties.repo}/createSurvey`}><AddSurveyComponent /></Route>\r\n                  <Route path={`${properties.repo}/profile`}><ProfileComponent /></Route>\r\n                  <Route path={`${properties.repo}/register`}><SignUpComponent /></Route>\r\n                  <Route path={`${properties.repo}/registrationConfirm`}><ConfirmRegistration /></Route>\r\n                  <Route path={`${properties.repo}/survey/:id`}><SurveyPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/news`}><NewsPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/donate`}> <DonatePageComponent /> {/* <SendFeedbackComponent /> */} </Route>\r\n                  <Route path={`${properties.repo}/about`}><AboutPageComponent /></Route>\r\n                  {/* <Route path={`${properties.repo}/signout`}>{ history.push(`${properties.repo}/`)} </Route> */}\r\n                  <Route path={`${properties.repo}/signout`}><Redirect to={`${properties.repo}/`} /></Route>\r\n                  <Copyright />\r\n                </Box>\r\n              </Grid>\r\n              {/* </Grid> */}\r\n              <Grid item sm={3} style={{ paddingRight: \"10px\" }}>\r\n                <Hidden only=\"xs\">\r\n                  <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                    <CategoriesComponent />\r\n                  </Box>\r\n                  <MainMenuComponent />\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Router>\r\n        </PopupContext.Provider>\r\n      </UserContext.Provider>\r\n    </LoginContext.Provider >\r\n  );\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          // backgroundColor: grey[800],\r\n          background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n        },\r\n        \"&$selected:hover\": {\r\n          backgroundColor: grey[700],\r\n        },\r\n      },\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    secondary: {\r\n      main: \"#3d608c\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 13,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}