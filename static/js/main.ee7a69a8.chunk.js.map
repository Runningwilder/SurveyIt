{"version":3,"sources":["news sync nonrecursive /.md$","news/news1.md","news/news2.md","about sync nonrecursive /.md$","about/news1.md","donate sync nonrecursive /.md$","donate/donate.md","Components/TabsComponent.js","Properties/Properties.js","Components/CategoriesComponent.js","Components/MainMenuComponent.js","Components/HeaderComponent.js","Components/LoginComponent.js","Components/SignUpComponent.js","Components/TagsComponent.js","Components/MultipleSurveyComponent.js","Components/SingleSurveyComponent.js","Components/RatingSurveyComponent.js","Components/CommentsComponent.js","Components/CardComponent.js","Components/BaseSurveyComponent.js","Components/AddSurveyComponent.js","Components/ConfirmRegistration.js","Components/InfiniteScroll.js","Components/StatisticsComponent.js","Components/ProfileComponent.js","Components/MapChart.js","Components/Pages/RandomPageComponent.js","Components/Pages/SurveyPageComponent.js","Components/Pages/NewsPageComponent.js","Components/SeparateSurveyComponent.js","Components/Pages/AboutPageComponent.js","Components/Pages/DonatePageComponent.js","Components/PopupComponent.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","tabs","backgroundColor","palette","secondary","main","mainBox","indicator","TabsComponent","props","React","useState","Value","value","setValue","classes","gridBody","setGrid","handleChange","event","newValue","activeType","setActiveType","useEffect","children","DefaultType","handleFilter","type","newType","Load","undefined","Grid","container","spacing","alignItems","justify","item","xs","Paper","className","Tabs","TabIndicatorProps","style","selectionFollowsFocus","centered","aria-label","Tab","onClick","component","Link","to","label","aria-controls","Tooltip","title","IconButton","color","Box","properties","menu","root","grey","background","checkbox","padding","CategoriesComponent","categories","checked","setCategories","setChecked","fetch","method","redirect","credentials","then","response","status","json","result","filter","category","name","Card","List","disablePadding","dense","labelId","ListItem","key","button","currentIndex","indexOf","checkBoxArr","push","splice","body","includes","headers","JSON","stringify","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","list","inactive","textDecoration","icon","common","white","rotate","animation","MainMenuComponent","setMessageFunc","useContext","PopupContext","userInfo","UserContext","checkLoginStatus","useHistory","LoginContext","links","link","profileLinks","callback","state","setState","index","selectedIndex","selected","window","location","pathname","search","loggedIn","open","Collapse","in","timeout","unmountOnExit","logo","maxWidth","toolbar","borderBottom","divider","info","toolbarTitle","flex","marginLeft","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","position","borderRadius","shape","fade","breakpoints","up","width","searchIcon","height","pointerEvents","display","inputRoot","inputInput","paddingLeft","transition","transitions","create","paper","marginTop","flexDirection","avatar","margin","form","submit","LoginComponent","history","password","username","jwt","connected","error","handleOnChange","target","Container","CssBaseline","Typography","Avatar","variant","noValidate","FormHelperText","TextField","required","fullWidth","autoComplete","autoFocus","onChange","Button","preventDefault","handleLoggedIn","SignUpComponent","email","matchingPassword","gender","age","country","errors","serverErrors","clientErrors","succesMessage","countries","setCountries","validate","errs","defaultValue","select","SelectProps","native","max","min","Array","from","el","border","outline","borderColor","boxShadow","tag","fontSize","input","popper","fetchedTag","cursor","h1","fontWeight","TagsComponent","tags","setTags","anchorEl","setAnchorEl","fetchedTags","setFetchedTags","Boolean","CallBack","handleClose","handleClick","Input","currentTarget","some","Popper","onClose","anchorOrigin","vertical","horizontal","transformOrigin","elevation","length","SingleSurveyComponent","voted","surveyJson","answered","options","helperText","HelperText","chart","processDataFunc","console","log","longestOption","elem","sort","e1","e2","choosedOptions","data","layout","hide","tick","x","y","textAnchor","payload","fill","r","dataKey","content","newPayload","count","Answered","getStats","values","FormControl","flipped","onSubmit","submitOptions","handleSubmit","FormLabel","question","FormGroup","option","FormControlLabel","control","bar","choosedOption","forEach","opt","barSize","RadioGroup","Radio","RatingSurveyComponent","duplicate","selectedValues","rows","totalError","Set","val","size","TableContainer","Table","TableHead","TableRow","TableCell","columns","column","columnIndex","align","TableBody","row","rowIndex","scope","oldValues","i","CommentsComponent","commentError","comment","comments","handleCommentSubmit","surveyId","newComments","date","Date","user_id","getFullYear","getMonth","getDate","setCommentsLength","borderTop","expanded","CardContent","ListItemAvatar","charAt","Fragment","wordBreak","userId","commentId","likes","handleCommentLike","Divider","placeholder","multiline","onBlur","header","expand","transform","duration","shortest","expandOpen","typography","fontFamily","action","CardComponent","answeredAmount","answered_amount","commentsCount","Menu","keepMounted","MenuItem","CardHeader","subheader","Children","child","cloneElement","CardActions","disableSpacing","marginRight","marginBottom","paragraph","clsx","aria-expanded","BaseSurveyComponent","img","image","validatingFunc","History","surveyBody","params","LoggedInUserId","UserId","LoggedInUsername","UserName","alt","src","returnBody","kinds","AddSurveyComponent","surveyName","setSurveyName","setError","setErrors","selectedValue","setSelectedValue","validateForm","handleOnBlur","opts","add","handleBlur","set","handleOnDelete","renderForm","aim","handleDelete","Name","Select","Options","Rows","Columns","Type","body_type","InputLabel","htmlFor","c","renderBody","ConfirmRegistration","query","URLSearchParams","useLocation","message","setMessage","get","InfiniteScroll","ref","useRef","hasMore","HasMore","isLoading","IsLoading","surveys","Surveys","Index","ActiveType","onSurveyDeleteFunc","load","url","Mode","request","withCredentials","results","new_list","s","SetReloadFunction","onscroll","debounce","current","innerHeight","document","documentElement","scrollTop","offsetTop","clientHeight","survey","ElementId","Math","PI","ProfileComponent","setOpen","surveyToDelete","setsurveyToDelete","setSurveys","Username","CircularProgress","ListItemSecondaryAction","handleOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","MapChart","setContent","markers","data-tip","projection","projectionConfig","zoom","center","geography","geographies","geo","onMouseEnter","onMouseLeave","default","hover","pressed","rsmKey","stroke","marker","coordinates","lo","la","RandomComponent","getRandom","sm","locations","SeparateSurveyComponent","useParams","setSurvey","markdown","body2","NewsPageComponent","posts","setPosts","markdownFiles","require","reverse","a","Promise","all","file","res","text","catch","err","fetchData","renderers","overrides","p","li","h4","post","idx","SurveyId","AboutPageComponent","DonatePageComponent","popup","zIndex","bottom","left","PopupComponent","Slide","direction","mountOnEnter","Copyright","href","createContext","App","hidden","setHidden","reload","activeTag","customFunc","setTimeout","handler","setUserInfo","createBrowserHistory","Provider","msg","Fade","exact","path","paddingRight","paddingTop","render","Hidden","only","top","LoggedIn","christmasTheme","createMuiTheme","MuiListItem","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.ee7a69a8.chunk.js","sourcesContent":["var map = {\n\t\"./news1.md\": 546,\n\t\"./news2.md\": 547\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 545;","module.exports = __webpack_public_path__ + \"static/media/news1.4399bb34.md\";","module.exports = __webpack_public_path__ + \"static/media/news2.a06e060d.md\";","var map = {\n\t\"./news1.md\": 549\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 548;","module.exports = __webpack_public_path__ + \"static/media/news1.a4a7d84c.md\";","var map = {\n\t\"./donate.md\": 551\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 550;","module.exports = __webpack_public_path__ + \"static/media/donate.ac8b0735.md\";","import React from 'react';\r\nimport TabPanelComponent from './TabPanelComponent'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport TestComponent from './TestComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    mainBox: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    indicator: {\r\n      backgroundColor: 'white',\r\n    }\r\n}))\r\n\r\nexport default function TabsComponent(props){\r\n    const [value, setValue] = React.useState(props.Value)\r\n    const {tabs} = props\r\n    const classes = useStyles()\r\n    const [gridBody, setGrid] = React.useState(<div>Loading...</div>)\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      setGrid(<div>...Loading</div>)\r\n    };\r\n    const [activeType, setActiveType] = React.useState(\"\")\r\n    \r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n      // setGrid(React.cloneElement(props.children[value], {ActiveType: activeType}))\r\n    }, [value])\r\n    \r\n    React.useEffect(() => {\r\n      setActiveType(props.DefaultType)\r\n    },[props.DefaultType])\r\n\r\n    const handleFilter = type => {\r\n      let newType = activeType === type ? \"\" : type\r\n      setActiveType(newType)\r\n      props.Load(undefined, newType)\r\n    }\r\n    React.useEffect(() => {\r\n      setGrid(props.children[value])\r\n    }, [activeType])\r\n\r\n    return <Grid container spacing={3}  alignItems=\"flex-start\" justify = \"flex-start\">\r\n              <Grid  item xs={12}>\r\n                <Paper className = {classes.tabs}>\r\n                  <Tabs TabIndicatorProps={{style: { backgroundColor: 'white'}}}  selectionFollowsFocus centered value={value} aria-label=\"simple tabs example\">\r\n                      <Tab onClick = {e=> handleChange(e, 0)} component = {Link} to = \"top\" label=\"TOP\" id = \"simple-tab-0\" aria-controls = \"simple-tabpanel-0\" />\r\n                      <Tab onClick = {e=> handleChange(e, 1)} component = {Link} to = \"new\" label=\"NEW\" id = \"simple-tab-1\" aria-controls = \"simple-tabpanel-1\"  />\r\n\r\n                      <Tooltip title = \"Единичный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"SINGLE\" ? \"default\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"SINGLE\")}}\r\n                        >\r\n                          <ViewListIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Множественный выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"MULTIPLE\" ? \"default\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"MULTIPLE\")}}\r\n                        >\r\n                          <FormatListBulletedIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title = \"Рейтинговый выбор\">\r\n                        <IconButton \r\n                          color = {activeType === \"RATING\" ? \"default\" : \"primary\"}\r\n                          onClick = {e => {handleFilter(\"RATING\")}}\r\n                        >\r\n                          <AppsIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                  </Tabs>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid  item xs={12} id = \"surveys\">\r\n                <Paper  className = {classes.mainBox}>\r\n                  <Box  >\r\n                    {gridBody}\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n}","export const properties = {\r\n     // address : \"http://31.133.82.67:8080\"\r\n     \r\n     address : \"https://surveyit.ddns.net:8443\",\r\n     repo: \"/SurveyIt\", // For redirecting issues at GitHub Pages\r\n     // repo: \"\",\r\n     iconSize: \"small\" // small medium\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { properties } from '../Properties/Properties.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // list: {\r\n  //   padding: 0\r\n  // },\r\n  menu: {\r\n    backgroundColor: \"#4c546391\"\r\n  },\r\n  root: {\r\n    color: theme.palette.grey[300],\r\n    \"&:hover\": {\r\n      // backgroundColor: theme.palette.grey[700],\r\n      background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n      // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n    }\r\n  },\r\n  checkbox: {\r\n    padding: 3\r\n  },\r\n  // tag: {\r\n  //   margin: 2,\r\n  //   backgroundColor: \"#a2a2dc\",\r\n  //   margin: 2,\r\n  //   borderRadius: 5,\r\n  //   cursor: \"pointer\",\r\n  //   '&:hover': {\r\n  //     backgroundColor: \"#c3c3ec\",\r\n  //   },\r\n  //   fontSize: 10,\r\n  //   color: \"#2f4f4f\",\r\n  //   padding: 2,\r\n  //   width: \"max-content\"\r\n  // },\r\n}))\r\nexport default function CategoriesComponent(props) {\r\n  const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    categories: [],\r\n    checked: [0],\r\n  })\r\n\r\n  const [categories, setCategories] = React.useState([])\r\n  const [checked, setChecked] = React.useState([0])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          return response.json()\r\n      })\r\n      .then(result => {\r\n        setChecked(result.filter(category => category.checked === true)\r\n          .map(category => category.name))\r\n        setCategories(result)\r\n      })\r\n\r\n    // fetch(`${properties.address}/getAllTags`,\r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include',\r\n    //   })\r\n    //   .then(response => {\r\n    //     if (response.status === 200) {\r\n    //       return response.json()\r\n    //     }\r\n    //   })\r\n    //   .then(result => {\r\n    //     setTags(result)\r\n    //   })\r\n  }, [])\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const checkBoxArr = [...checked];\r\n\r\n    if (currentIndex === -1)\r\n      checkBoxArr.push(value)\r\n    else\r\n      checkBoxArr.splice(currentIndex, 1)\r\n\r\n\r\n    let body = {\r\n      \"skipped\": categories\r\n        .filter(category => !checkBoxArr.includes(category.name))\r\n        .map(category => category.name)\r\n    }\r\n\r\n    fetch(`${properties.address}/updateChecked`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.Load(undefined, \"\")\r\n          setChecked(checkBoxArr)\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  return <>\r\n    <Card className={classes.menu}>\r\n      <List disablePadding dense>\r\n        {categories.map(category => {\r\n          const labelId = `checkbox-list-label-${category.name}`\r\n          return (\r\n            <ListItem\r\n              className={classes.root}\r\n              key={`category-${category.id}`}\r\n              button\r\n              onClick={handleToggle(category.name)}\r\n\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className={classes.checkbox}\r\n                  edge=\"start\"\r\n                  checked={checked.indexOf(category.name) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              {/* <ListItemIcon>\r\n                    {category.icon}\r\n               </ListItemIcon> */}\r\n              <ListItemText primary={category.name} />\r\n            </ListItem>)\r\n        }\r\n        )}\r\n      </List>\r\n    </Card>\r\n    {/* <br></br> */}\r\n    {/* <Card style={{ height: 150, overflowY: \"auto\" }}>\r\n      <CardContent >\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem className={classes.list}>\r\n            <ListItemText primary=\"Теги\" />\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n        <div style={{ alignContent: \"center\" }}>\r\n          {tags.map(tag =>\r\n            <Button\r\n              onClick={e => handleTag(tag.name)}\r\n              className={classes.tag}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              key={tag.id}\r\n            >\r\n              {tag.name}\r\n            </Button>\r\n            // <Button  color = \"primary\" variant = \"contained\" key = {tag.id}>{tag.name}</Button>\r\n          )}\r\n        </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card> */}\r\n    {/* <Popper open={open} anchorEl={anchorEl} placement=\"top\" transition>\r\n      <Paper style={{ padding: 10 }}>\r\n        <Typography variant=\"caption\" className={classes.typography} style={{ width: 200 }}>\r\n          Зарегистрируйтесь для применения нескольких фильтров\r\n          </Typography>\r\n      </Paper>\r\n    </Popper> */}\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js'\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport { UserContext } from '../index'\r\nimport { PopupContext } from '../index'\r\nimport { LoginContext } from '../index'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list: {\r\n        padding: 0\r\n    },\r\n    checkbox: {\r\n        padding: 3\r\n    },\r\n    inactive: {\r\n        color: theme.palette.grey[300],\r\n        textDecoration: \"none\"\r\n    },\r\n    menu: {\r\n        backgroundColor: \"#4c546391\"\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[300],\r\n    },\r\n    root: {\r\n        \"&:hover\": {\r\n            // backgroundColor: theme.palette.grey[700],\r\n            background: \"linear-gradient(21deg, rgba(54,54,61,0.5723476890756303) 0%, rgba(159,181,185,0.5639443277310925) 100%)\"\r\n            // backgroundColor: \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%)\"\r\n        },\r\n        color: theme.palette.common.white,\r\n    },\r\n    rotate: {\r\n        // transform: \"rotate(70deg)\"\r\n        animation: `spin 15s linear infinite`\r\n    }\r\n\r\n}))\r\nexport default function MainMenuComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const userInfo = React.useContext(UserContext)\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const checkLoginStatus = React.useContext(LoginContext)\r\n    const signOut = e => {\r\n        fetch(`${properties.address}/signout`,\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // props.CheckLoginStatus()\r\n                    checkLoginStatus()\r\n                    setMessageFunc(\"Вы вышли :(\")\r\n\r\n                }\r\n            })\r\n    }\r\n    const [state, setState] = React.useState({\r\n        links: [{\r\n            name: \"Новогодние\",\r\n            link: `random?tag=newyear`,\r\n            icon: <AcUnitIcon className={classes.rotate} />,\r\n        }, {\r\n            name: \"Домашняя\",\r\n            // link: `${properties.repo}/home`,\r\n            link: `home`,\r\n            icon: <HomeIcon />,\r\n        }, {\r\n            name: \"Рандом\",\r\n            // link: `${properties.repo}/random`,\r\n            link: `random`,\r\n            icon: <ContactSupportIcon />,\r\n        }, {\r\n            name: \"Купить кофе\",\r\n            link: `donate`,\r\n            icon: <FreeBreakfastIcon />,\r\n        }, {\r\n            name: \"История изменений\",\r\n            link: `news`,\r\n            icon: <UpdateIcon />,\r\n        }, {\r\n            name: \"О сайте\",\r\n            link: `about`,\r\n            icon: <InfoIcon />\r\n        }],\r\n        profileLinks: [{\r\n            name: \"Профиль\",\r\n            link: `profile`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Создать\",\r\n            link: `createSurvey`,\r\n            icon: null,\r\n        }, {\r\n            name: \"Выйти\",\r\n            link: `signout`,\r\n            icon: null,\r\n            callback: signOut\r\n        }],\r\n        // selectedIndex: 0,\r\n    })\r\n\r\n    const handleClick = () => {\r\n        setState({ ...state, open: !state.open })\r\n    }\r\n\r\n    return <>\r\n        <Card className={classes.menu}>\r\n            <List disablePadding dense>\r\n                {state.links.map((link, index) => <>\r\n                    <Link to={`${properties.repo}/${link.link}`}\r\n                        className={classes.inactive}\r\n                        onClick={e => setState({ ...state, selectedIndex: index })}\r\n                    >\r\n                        <ListItem\r\n                            button\r\n                            selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                            className={classes.root}\r\n                        >\r\n                            <ListItemIcon\r\n                                className={classes.icon}>\r\n                                {link.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={link.name} />\r\n                        </ListItem>\r\n                    </Link>\r\n                </>\r\n                )}\r\n                {!userInfo.loggedIn && <Link to={`${properties.repo}/login`}\r\n                    className={classes.inactive}\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/login`}\r\n                        className={classes.root}\r\n                    >\r\n                        <ListItemText primary={\"Sign In / Sign Up\"} />\r\n                    </ListItem>\r\n                </Link>}\r\n                {userInfo.loggedIn && <><ListItem className={classes.root} button onClick={handleClick}>\r\n\r\n                    <ListItemIcon\r\n                        className={classes.icon}>\r\n                        <AccountCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Профиль\" />\r\n                    {state.open ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                    <Collapse in={state.open} timeout=\"auto\" unmountOnExit>\r\n                        <List disablePadding dense>\r\n                            {state.profileLinks.map((link, index) =>\r\n                                <Link to={`${properties.repo}/${link.link}`}\r\n                                    className={classes.inactive}\r\n                                >\r\n                                    <ListItem\r\n                                        button\r\n                                        selected={`${window.location.pathname}${window.location.search}` === `${properties.repo}/${link.link}`}\r\n                                        className={classes.root}\r\n                                        onClick={link.callback}\r\n                                    >\r\n                                        <ListItemText primary={link.name} />\r\n                                    </ListItem>\r\n                                </Link>)}\r\n                        </List>\r\n                    </Collapse></>}\r\n            </List>\r\n        </Card>\r\n    </>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Link } from 'react-router-dom'\r\nimport AccountIconComponent from './AccountIconComponent'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    maxWidth: \"40px\",\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.info\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    color: 'black'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 10,\r\n    //width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   width: '12ch',\r\n    //   '&:focus': {\r\n    //     width: '100ch',\r\n    //   },\r\n    // },\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles(props);\r\n  const { title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <a href = \"/about.html\">About</a> */}\r\n\r\n      <AppBar position=\"static\" className={classes.toolbar}>\r\n        <Toolbar >\r\n          <Link to={`${properties.repo}/home`}>\r\n            <img src=\"images/logo.png\" alt=\"\" className={classes.logo}></img>\r\n          </Link>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            <Link to={`${properties.repo}/home`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Домой\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/news`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Новости\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/donate`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Помочь проекту\r\n            </Link>\r\n            <span> | </span>\r\n            <Link to={`${properties.repo}/about`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n              Про сайт\r\n            </Link>\r\n          </Typography>\r\n\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          {props.state.loggedIn ? <>\r\n            <AccountIconComponent {...props}></AccountIconComponent>\r\n          </>\r\n            :\r\n            <>\r\n              <Link to={`${properties.repo}/login`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"text\" size=\"small\">\r\n                  Login\r\n            </Button>\r\n              </Link>\r\n              <Link to={`${properties.repo}/register`} style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  <Typography noWrap>Sign up</Typography>\r\n                </Button>\r\n              </Link>\r\n            </>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    password: '',\r\n    username: '',\r\n    jwt: '',\r\n    connected: false,\r\n    error: false\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const handleSubmit = (e, name, password) => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/authenticate`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"username\": state.username, \"password\": state.password }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 204) {\r\n          setState({ ...state, error: true })\r\n        }\r\n        else if (response.status === 200) {\r\n          props.handleLoggedIn()\r\n          history.push(`${properties.repo}/home`)\r\n        }\r\n      }\r\n      )\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          {state.jwt}\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <FormHelperText error={true}>\r\n              {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n            </FormHelperText>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={state.username}\r\n              onChange={handleOnChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={state.password}\r\n              onChange={handleOnChange}\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/register`} variant=\"body2\">\r\n                  Нет аккаунта? Зарегистрироваться\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUpComponent() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n    matchingPassword: '',\r\n    gender: '',\r\n    age: '',\r\n    country: '',\r\n    errors: {\r\n      serverErrors: false,\r\n      clientErrors: false\r\n    },\r\n    succesMessage: \"\"\r\n  })\r\n  const [gender, setGender] = React.useState(\"male\")\r\n  const [countries, setCountries] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCountries`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        // credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          setCountries([{ name: \"\", id: 0 }, ...result])\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const handleOnChange = e => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n  const validate = () => {\r\n    let errs = []\r\n    if (state.age < 0) {\r\n      errs.push(\"На данный момент регистрация пользователей с возрастом меньше нуля лет не предусмотрена :(\")\r\n    }\r\n    if (state.age > 150) {\r\n      errs.push(\"Рекомендуем выключите экран дабы не усугублять проблемы со зрением. В вашем возрасте они наверняка есть\")\r\n    }\r\n    if (state.country === \"\") {\r\n      errs.push(\"Выберите страну\")\r\n    }\r\n    if (state.gender === \"\") {\r\n      errs.push(\"Укажите пол\")\r\n    }\r\n    return errs\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch(`${properties.address}/signUp`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"name\": state.name,\r\n          \"password\": state.password,\r\n          \"email\": state.email,\r\n          \"matchingPassword\": state.matchingPassword,\r\n          \"country\": state.country,\r\n          \"age\": state.age,\r\n          \"gender\": state.gender,\r\n        }),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 400) {\r\n          response.json().then(result => {\r\n\r\n            setState({\r\n              ...state, errors: {\r\n                ...state.errors,\r\n                serverErrors: result,\r\n                clientErrors: validate()\r\n              }\r\n            })\r\n          })\r\n        }\r\n        else if (response.status === 200) {\r\n          setState({\r\n            ...state,\r\n            succesMessage: \"Регистрация успешна! Для продолжения перейдите по ссылке присланной на указанную почту\"\r\n          })\r\n        }\r\n        return response.json()\r\n      })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Card style={{ padding: \"20px\" }}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <Typography component=\"h2\">\r\n            {state.succesMessage}\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"login\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  defaultValue={state.name}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"gender\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"gender\"\r\n                  label=\"Пол\"\r\n                  defaultValue={\"none\"}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                >\r\n                  <option value=\"\" ></option>\r\n                  <option value=\"male\" >Мужской</option>\r\n                  <option value=\"female\" >Женский</option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputProps={{\r\n                    max: 150,\r\n                    min: 0\r\n                  }}\r\n                  name=\"age\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"age\"\r\n                  type=\"number\"\r\n                  label=\"Возраст\"\r\n                  defaultValue={state.age}\r\n                  onChange={handleOnChange}\r\n                // autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  select\r\n                  name=\"country\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Страна\"\r\n                  // native\r\n                  // defaultValue = {state.country}\r\n                  onChange={handleOnChange}\r\n                  SelectProps={{ native: true }}\r\n                // autoFocus\r\n                >\r\n                  {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}> */}\r\n                  {countries.map(country =>\r\n                    <option key={`country-${country.id}`} value={country.name} >{country.name}</option>\r\n                  )}\r\n                  {/* </FixedSizeList> */}\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  defaultValue={state.email}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.password}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"matchingPassword\"\r\n                  label=\"Confirm your password\"\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  autoComplete=\"current-password\"\r\n                  defaultValue={state.matchingPassword}\r\n                  onChange={e => { handleOnChange(e); }}\r\n                />\r\n                <FormHelperText error={true}>\r\n                  {state.matchingPassword !== state.password ? \"Пароли не совпадают\" : \"\"}\r\n                </FormHelperText>\r\n\r\n                {Array.from(state.errors.clientErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n                {Array.from(state.errors.serverErrors).map(el =>\r\n                  <FormHelperText error={true}>\r\n                    {el}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to={`${properties.repo}/login`} variant=\"body2\">\r\n                  Уже есть аккаунт? Войти\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n      {/* <Box mt={5}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    border: \"2px solid #426480\",\r\n    borderRadius: 5,\r\n    '&:hover': {\r\n      outline: \"none\",\r\n      borderColor: \"#5f7d96\",\r\n      boxShadow: \"0 0 5px #5f7d96\",\r\n    },\r\n    padding: 3,\r\n    display: 'flex',\r\n  },\r\n  tag: {\r\n    borderRadius: 7,\r\n    padding: 0,\r\n    backgroundColor: \"#a0a9da\",\r\n    paddingLeft: 10,\r\n    fontSize: 15,\r\n    width: \"max-content\",\r\n    margin: 2\r\n  },\r\n  icon: {\r\n    padding: 2\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n  },\r\n  popper: {\r\n    padding: 3,\r\n    width: 200\r\n  },\r\n  fetchedTag: {\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  h1: {\r\n    width: 30,\r\n    marginTop: -16,\r\n    marginLeft: 5,\r\n    // background: \"white\",\r\n    height: \"fit-content\",\r\n    fontSize: 18,\r\n    fontWeight: \"normal\"\r\n  }\r\n\r\n}))\r\n\r\nexport default function TagsComponent(props) {\r\n  const classes = useStyles()\r\n  const [tags, setTags] = React.useState([])\r\n  const [value, setValue] = React.useState(\"\")\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const [fetchedTags, setFetchedTags] = React.useState([])\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? 'simple-popover' : undefined\r\n  React.useEffect(() => {\r\n    props.CallBack(tags)\r\n  }, [tags])\r\n  const addTag = name => {\r\n    handleClose()\r\n    setTags([...tags, name])\r\n    setFetchedTags([...fetchedTags].filter(el => el.name !== name))\r\n    setValue(\"\")\r\n  }\r\n  const handleClick = (e, index) => {\r\n    tags.splice(index, 1)\r\n    setTags([...tags])\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleChange = e => {\r\n    setAnchorEl(e.target.value ? e.currentTarget : null);\r\n    setValue(e.target.value)\r\n    fetch(`${properties.address}/getTags?text=${e.target.value}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        setFetchedTags(result.filter(el => !tags.some(tag => tag === el.name)))\r\n      })\r\n  }\r\n\r\n  return <>\r\n    <Typography>\r\n      Теги (добавлять свои теги пока что нельзя)\r\n    </Typography>\r\n    <Box\r\n      className={classes.root}\r\n    >\r\n      {/* <h1 className = {classes.h1}>Test</h1> */}\r\n      {tags.map((tag, index) =>\r\n        <Box className={classes.tag}>\r\n          {tag}\r\n          <IconButton onClick={e => handleClick(e, index)} className={classes.icon} color=\"primary\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        </Box>)}\r\n      <Input\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n        value={value}\r\n        error={false}\r\n      >\r\n      </Input>\r\n      <Popper\r\n        open={open}\r\n        id={id}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Paper elevation={2} className={classes.popper}>\r\n          {fetchedTags.length > 0 && fetchedTags.map(tag => <>\r\n            <Box className={classes.fetchedTag} onClick={() => addTag(tag.name)}>\r\n              {tag.name}\r\n            </Box>\r\n          </>)}\r\n          {fetchedTags.length === 0 && <div>Ой. Этот тег еще не придумали</div>}\r\n        </Paper>\r\n      </Popper>\r\n    </Box>\r\n  </>\r\n}","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    options: {},\r\n    helperText: props.HelperText,\r\n    chart: undefined\r\n  })\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOptions\": Object.keys(state.options).filter(key => state.options[key] === true)\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    // let arr = props.surveyJson.options.map(option => {\r\n    //   return {\r\n    //     name: option,\r\n    //     value: result.filter(vote => vote.options.includes(option)).length\r\n    //   }\r\n    // }).sort((a, b) => a.value - b.value)\r\n\r\n    console.log(result)\r\n\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOptions = props.surveyJson.choosedOptions || Object.keys(state.options).filter(key => state.options[key] === true)\r\n    let chart = <BarChart width={20 * longestOption + 300} height={40 * result.length} data={result} layout=\"vertical\">\r\n      <XAxis type=\"number\" hide />\r\n      <YAxis\r\n        tick={props => {\r\n          return <text\r\n            x={props.x}\r\n            y={props.y}\r\n            textAnchor=\"end\"\r\n            fontWeight={choosedOptions.includes(props.payload.value) ? \"bold\" : \"normal\"}\r\n            fill={choosedOptions.includes(props.payload.value) ? \"blue\" : \"black\"}\r\n          >\r\n            {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n          </text>\r\n        }}\r\n        type=\"category\" dataKey=\"name\" width={20 * longestOption} />\r\n      <Tooltip content={props => {\r\n        if (props.payload[0] != null) {\r\n          const newPayload = [{\r\n            name: 'голосов',\r\n            value: props.payload[0].payload.count\r\n          }]\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />\r\n        }\r\n        return <DefaultTooltipContent {...props} />\r\n      }} />\r\n      <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    setState({ ...state, chart: chart })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  const validate = () => {\r\n    if (Object.values(state.options).filter(value => value === true).length === 0) {\r\n      setState({ ...state, helperText: 'Выберите вариант', error: true })\r\n      return false\r\n    }\r\n    setState({ ...state, helperText: props.HelperText, error: false })\r\n    return true\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, options: { ...state.options, [event.target.name]: event.target.checked } })\r\n    console.log(state.options)\r\n  }\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n      <StatisticsComponent\r\n        Options={props.surveyJson.options}\r\n        Type=\"Multiple\"\r\n        SurveyId={props.surveyJson.surveyId}>\r\n      </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered &&\r\n          props.surveyJson.options.map((option) =>\r\n            <FormControlLabel\r\n              control={<Checkbox name={option} onChange={handleChange} />}\r\n              label={option}\r\n            />\r\n          )\r\n        }\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n      {props.Answered && state.chart}\r\n    </form>}\r\n    {/* {props.Answered && <StatisticsComponent />} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  bar: {\r\n    color: \"red\",\r\n    fontSize: \"smaller\"\r\n  },\r\n}))\r\n\r\nexport default function SingleSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    choosedOption: \"\",\r\n    helperText: props.HelperText,\r\n    chart: undefined,\r\n    options: props.surveyJson.options.map(option => ({ name: option, chart: <br /> })),\r\n  })\r\n  const classes = useStyles()\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"choosedOption\": state.choosedOption\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const validate = () => {\r\n    if (state.choosedOption === \"\") {\r\n      console.log(\"choose smth\")\r\n      setState({ ...state, error: true, helperText: \"Выберите вариант\" })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText });\r\n    return true\r\n  }\r\n\r\n  // Example of stats data\r\n  // const data = [\r\n  //   {\r\n  //     \"name\": \"opt1\",\r\n  //     \"value\": 30,\r\n  //     \"count\": 54\r\n  //   }]\r\n  const processDataFunc = (e, result) => {\r\n    let longestOption = result.map(elem => elem.name).sort((e1, e2) => e2.length - e1.length)[0].length\r\n    let choosedOption = props.surveyJson.choosedOption || state.choosedOption\r\n\r\n    state.options.forEach(option => {\r\n      let data = result.filter(opt => opt.name === option.name)\r\n      console.log(\"data\")\r\n      console.log(data)\r\n      option.name = option.name\r\n      option.value = data[0].value\r\n      let chart = <BarChart\r\n\r\n        width={14 * longestOption + 200}\r\n        height={20}\r\n        data={data}\r\n        barSize={10}\r\n        layout=\"vertical\">\r\n        <XAxis type=\"number\" hide />\r\n        <YAxis\r\n          // height={10}\r\n          hide\r\n          tick={props => {\r\n            return <text\r\n              x={props.x}\r\n              y={props.y}\r\n              textAnchor=\"end\"\r\n              fontWeight={props.payload.value === choosedOption ? \"bold\" : \"normal\"}\r\n              fill={props.payload.value === choosedOption ? \"blue\" : \"black\"}\r\n            >\r\n              {props.payload.value + \" (\" + result.filter(r => r.name === props.payload.value)[0].value + \"%)\"}\r\n            </text>\r\n          }}\r\n          type=\"category\" dataKey=\"name\" width={14 * longestOption} />\r\n        <Tooltip content={props => {\r\n          if (props.payload[0] != null) {\r\n            const newPayload = [{\r\n              name: 'голосов',\r\n              value: props.payload[0].payload.count\r\n            }]\r\n            return <DefaultTooltipContent {...props} payload={newPayload} />\r\n          }\r\n          return <DefaultTooltipContent {...props} />\r\n        }} />\r\n        <Bar background={{ fill: '#eee' }} dataKey=\"value\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n      option.chart = chart\r\n    })\r\n\r\n    setState({ ...state, options: state.options, voted: true })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if (state.voted)\r\n      return\r\n    setState({ ...state, choosedOption: event.target.value })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (props.Answered)\r\n      props.getStats(undefined, processDataFunc)\r\n  }, [props.Answered])\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {/* {props.flipped &&\r\n    <StatisticsComponent\r\n      Options={props.surveyJson.options}\r\n      Type=\"Multiple\"\r\n      SurveyId={props.surveyJson.surveyId}>\r\n    </StatisticsComponent>} */}\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      {/* {!props.Answered && <RadioGroup value={state.choosedOption} onChange={handleChange}>\r\n    \r\n        {props.surveyJson.options.map(option =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          test\r\n          </>\r\n        )}  */}\r\n      <RadioGroup value={props.surveyJson.choosedOption ? props.surveyJson.choosedOption : state.choosedOption} onChange={handleChange}>\r\n\r\n        {state.options.map((option, index) =>\r\n          <>\r\n            <FormControlLabel\r\n              value={option.name}\r\n              control={<Radio />}\r\n              label={<div style={{ color: state.choosedOption === option.name ? \"blue\" : \"black\" }}>{option.name}{state.voted ? ` (${option.value}%)` : \"\"}</div>}\r\n            />\r\n            <div className={classes.bar}>\r\n              {option.chart}\r\n            </div>\r\n          </>\r\n        )}\r\n      </RadioGroup>\r\n      {/* {props.Answered && state.chart} */}\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      {!props.Answered && <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>}\r\n    </form>\r\n    }\r\n    {/* {state.voted && !props.Flipped && \r\n    <StatisticsComponent \r\n    Options={this.props.Options} \r\n    Type=\"Single\" \r\n    SurveyId={this.SurveyId} />} */}\r\n  </FormControl >\r\n}","import React from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function RatingSurveyComponent(props) {\r\n  props = props.props\r\n  const [state, setState] = React.useState({\r\n    error: false,\r\n    voted: props.surveyJson.answered,\r\n    helperText: props.HelperText,\r\n    errors: {\r\n      option: \"\",\r\n      duplicate: \"\"\r\n    },\r\n    selectedValues: new Array(props.surveyJson.rows.length),\r\n  })\r\n\r\n  const validate = () => {\r\n    let duplicateError = ''\r\n    let optionError = ''\r\n    let totalError = false\r\n    let helperText = ''\r\n\r\n    if ((new Set(state.selectedValues.filter(val => val !== undefined))).size !== state.selectedValues.filter(val => val !== undefined).length) {\r\n      duplicateError = 'Не более одного варианта в каждой строке / колонке'\r\n      totalError = true\r\n      helperText = duplicateError\r\n    }\r\n\r\n    if (state.selectedValues.filter(val => val !== undefined).length < props.surveyJson.rows.length) {\r\n      optionError = 'Заполните все рядки'\r\n      totalError = true\r\n      helperText = helperText + '\\n' + optionError\r\n    }\r\n\r\n    if (totalError) {\r\n      setState({ ...state, error: true, helperText: helperText })\r\n      return false\r\n    }\r\n    setState({ ...state, error: false, helperText: props.HelperText })\r\n    return true\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let submitOptions = {\r\n      \"surveyId\": props.surveyJson.id,\r\n      \"rowsColumns\": state.selectedValues\r\n    }\r\n    props.handleSubmit(e, submitOptions, validate, processDataFunc)\r\n  }\r\n\r\n  const handleChange = (event, rowIndex) => {\r\n    let oldValues = state.selectedValues\r\n    if (!oldValues.includes(event.target.value)) {\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues });\r\n    }\r\n    else {\r\n      let i = oldValues.indexOf(event.target.value)\r\n      oldValues[i] = undefined\r\n      oldValues[rowIndex] = event.target.value\r\n      setState({ ...state, selectedValues: oldValues })\r\n    }\r\n  }\r\n\r\n  const processDataFunc = (e, result) => {\r\n    console.log('processing from Rating')\r\n  }\r\n\r\n  return <FormControl\r\n    component=\"fieldset\"\r\n    error={state.error}\r\n  >\r\n    {!props.flipped && <form onSubmit={handleSubmit}>\r\n      <FormLabel component=\"legend\">{props.surveyJson.question}</FormLabel>\r\n      <FormGroup>\r\n        {!props.Answered && <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                {props.surveyJson.columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex} align=\"center\">{column}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.surveyJson.rows.map((row, rowIndex) => (\r\n                <TableRow key={rowIndex}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row}\r\n                  </TableCell>\r\n                  {props.surveyJson.columns.map((column, columnIndex) => (\r\n\r\n                    <TableCell key={columnIndex} align=\"center\" >\r\n                      <Radio\r\n                        name={\"r\" + rowIndex}\r\n                        onChange={e => { handleChange(e, columnIndex) }}\r\n                        checked={state.selectedValues[columnIndex] === props.surveyJson.rows[rowIndex]}\r\n                        value={props.surveyJson.rows[rowIndex]}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>}\r\n      </FormGroup>\r\n      <FormHelperText>{state.helperText}</FormHelperText>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Узнать</Button>\r\n    </form>}\r\n    {/* {props.Answered &&  <StatisticsComponent Rows={props.Rows} Columns={props.Columns} Type=\"Rating\" SurveyId={SurveyId}></StatisticsComponent>} */}\r\n\r\n  </FormControl>\r\n}","import React from 'react'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PopupContext } from '../index'\r\nimport { UserContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        backgroundColor: \"#41465f\",\r\n    }\r\n}));\r\n\r\nexport default function CommentsComponent(props) {\r\n    const [state, setState] = React.useState({\r\n        commentError: \"\",\r\n        comment: \"\",\r\n        comments: props.surveyJson.comments,\r\n    })\r\n    const userInfo = React.useContext(UserContext)\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const classes = useStyles()\r\n    const handleCommentSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (state.comment.length < 5 || state.comment.length > 200) {\r\n            setState({ ...state, commentError: \"Не меньше 5 и не больше 200 символов\" })\r\n            return\r\n        }\r\n        setState({ ...state, commentError: \"\" })\r\n\r\n        fetch(`${properties.address}/addComment`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    content: state.comment,\r\n                    surveyId: props.surveyJson.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (!result)\r\n                    return\r\n                console.log(result)\r\n                let newComments = state.comments\r\n                let date = new Date(result.date)\r\n                newComments.push({\r\n                    \"content\": state.comment,\r\n                    \"likes\": 0,\r\n                    \"user_id\": result.user_id,\r\n                    \"username\": \"admin\",\r\n                    \"date\": `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,\r\n                    \"id\": result.id,\r\n                })\r\n\r\n                setState({ ...state, comments: newComments })\r\n                if (props.setCommentsLength)\r\n                    props.setCommentsLength(newComments.length)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCommentLike = comment => {\r\n\r\n        if (userInfo.userId === null) {\r\n            setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n            return\r\n        }\r\n\r\n        comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n        comment.voted = !comment.voted\r\n        setState({ ...state, comments: state.comments })\r\n\r\n        fetch(`${properties.address}/commentLike`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ commentId: comment.id })\r\n            })\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    comment.likes = comment.voted ? comment.likes - 1 : comment.likes + 1\r\n                    comment.voted = !comment.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            }).then(result => {\r\n                if (result) {\r\n                    // new_comments = comments.find(comment -> comment.id === commentId)\r\n                    comment.likes = result.likes\r\n                    comment.voted = result.voted\r\n                    setState({ ...state, comments: state.comments })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDeleteComment = commentId => {\r\n        fetch(`${properties.address}/deleteComment`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    commentId: commentId\r\n                }),\r\n                redirect: 'follow',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    let newComments = state.comments.filter(comment => comment.id !== commentId)\r\n                    setState({ ...state, comments: newComments })\r\n                    if (props.setCommentsLength)\r\n                        props.setCommentsLength(newComments.length)\r\n                    setMessageFunc(\"Комментарий удален :)\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Collapse style={{ borderTop: \"1px solid #e0e0e0\" }} in={props.expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            <List>\r\n                {state.comments.map(comment => <>\r\n                    <ListItem style={{ padding: 0, paddingLeft: 10 }} alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ width: 30, height: 30 }} variant=\"rounded\" aria-label=\"\" className={classes.avatar} >\r\n                                {comment.username && comment.username.charAt(0)}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={<>\r\n                                {comment.username + \"  \"}\r\n                                <Typography variant=\"caption\" component=\"span\" color=\"textSecondary\">\r\n                                    {comment.date}\r\n                                </Typography>\r\n                            </>}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <div style={{ display: \"flex\", wordBreak: \"break-word\" }}>\r\n\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            style={{ display: \"inline\" }}\r\n                                            color=\"textPrimary\"\r\n                                        >\r\n                                            {comment.content}\r\n                                        </Typography>\r\n                                        <div style={{ marginLeft: \"auto\" }}>\r\n                                            {/* {comment.user_id === props.LoggedInUserId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                            <DeleteOutlineOutlinedIcon />\r\n                          </IconButton>} */}\r\n                                            {userInfo.userId === props.surveyJson.userId && <IconButton className={classes.icon} onClick={e => handleDeleteComment(comment.id)}>\r\n                                                <DeleteOutlineOutlinedIcon />\r\n                                            </IconButton>}\r\n                                            <Typography component=\"span\">\r\n                                                {comment.likes != 0 && comment.likes}\r\n                                            </Typography>\r\n\r\n                                            <IconButton color={comment.voted ? \"secondary\" : \"primary\"} className={classes.icon} aria-label=\"add to favorites\" onClick={e => { handleCommentLike(comment) }}>\r\n                                                <ThumbUpAltIcon />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </>)}\r\n            </List>\r\n            <FormControl style={{ display: \"flex\" }}>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <TextField\r\n                        style={{ display: \"flex\" }}\r\n                        id=\"standard-textarea\"\r\n                        label=\"Комментировать\"\r\n                        placeholder=\"\"\r\n                        multiline\r\n                        onBlur={e => { setState({ ...state, comment: e.target.value }); e.target.value = \"\" }}\r\n                    />\r\n                    {state.commentError && <FormHelperText error={true}>{state.commentError}</FormHelperText>}\r\n                    <Button onClick={handleCommentSubmit} type=\"submit\" variant=\"contained\" >Отправить</Button>\r\n                </form>\r\n            </FormControl>\r\n        </CardContent>\r\n    </Collapse>\r\n\r\n}","import React, { Children, cloneElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../index'\r\nimport CommentsComponent from \"./CommentsComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: 0,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#41465f\",\r\n  },\r\n  tag: {\r\n    margin: 2,\r\n    backgroundColor: \"#a2a2dc\",\r\n    margin: 2,\r\n    borderRadius: 5,\r\n    cursor: \"pointer\",\r\n    '&:hover': {\r\n      backgroundColor: \"#c3c3ec\",\r\n    },\r\n    fontSize: 15,\r\n    color: \"#2f4f4f\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  action: {\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nexport default function CardComponent(props) {\r\n  const [state, setState] = React.useState({\r\n    answered: props.surveyJson.answered,\r\n    answeredAmount: props.surveyJson.answered_amount,\r\n    likes: props.surveyJson.likes,\r\n    voted: props.surveyJson.voted,\r\n    flipped: true,\r\n    anchorEl: null,\r\n    expanded: false,\r\n    commentsCount: props.surveyJson.comments.length\r\n  })\r\n  \r\n  const userInfo = React.useContext(UserContext)\r\n  const classes = useStyles()\r\n  const handleFlip = e => setState({ ...state, flipped: !state.flipped })\r\n  const handleExpandClick = () => setState({ ...state, expanded: !state.expanded })\r\n  const handleClick = e => setState({ ...state, anchorEl: e.currentTarget })\r\n  const handleClose = e => setState({ ...state, anchorEl: null })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const handleLike = e => {\r\n    if (userInfo.userId === null){\r\n      setMessageFunc(\"Авторизуйтесь, пожалуйста :с\")\r\n      return\r\n    }\r\n    setState({ ...state, voted: !state.voted })\r\n    fetch(`${properties.address}/like`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id })\r\n      })\r\n      .then(response => {\r\n        if (response.status === 403) {\r\n          console.log(\"403\")\r\n          setState({ ...state, voted: props.surveyJson.voted })\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(json => {\r\n        if (json.result === 'Added') {\r\n          setState({ ...state, likes: json.likes, voted: true })\r\n        }\r\n        else if (json.result === 'Deleted') {\r\n          setState({ ...state, likes: json.likes, voted: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleDelete = e => {\r\n    fetch(`${properties.address}/deleteSurvey`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ surveyId: props.surveyJson.id }),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200)\r\n          setMessageFunc(\"Удалено :)\")\r\n          // props.onSurveyDeleteFunc()\r\n      })\r\n  }\r\n  const setCommentsLength = count => {\r\n    setState({ ...state, commentsCount: count })\r\n  }\r\n  return <>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={state.anchorEl}\r\n      keepMounted\r\n      open={Boolean(state.anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => { handleClose(); handleDelete(); }} >Удалить</MenuItem>\r\n    </Menu>\r\n    <Card>\r\n      <CardHeader className={classes.header}\r\n        avatar={<Avatar variant=\"square\" className={classes.avatar} />}\r\n\r\n        action={userInfo.userId === props.surveyJson.userId ? <IconButton onClick={handleClick} size={properties.iconSize} edge=\"start\"><MoreVertIcon /></IconButton> : \"\"}\r\n\r\n        subheader={<Link\r\n          to={`${properties.repo}/survey/${props.surveyJson.id}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          {props.surveyJson.date}</Link>}\r\n        classes={{ action: classes.action }}\r\n      />\r\n      <CardContent style={{ padding: \"8\" }}>\r\n        {/* {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped, votedCallback: votedCallback }))} */}\r\n        {Children.map(props.children, child => cloneElement(child, { flipped: state.flipped }))}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Tooltip title={props.Answered ? 'Вы проголосовали' : 'Вы не проголосовали'}>\r\n          <IconButton size={properties.iconSize} className={classes.icon}>\r\n            <CheckIcon color={props.Answered ? 'secondary' : 'primary'} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {state.answeredAmount > 0 && state.answeredAmount}\r\n        <IconButton size={properties.iconSize} className={classes.icon} onClick={handleLike}>\r\n          <FavoriteIcon color={state.voted ? 'secondary' : 'primary'} />\r\n        </IconButton>\r\n        {state.likes > 0 && state.likes}\r\n        {state.answered &&\r\n          <IconButton size={properties.iconSize} onClick={handleFlip}> <LoopIcon /> </IconButton>\r\n        }\r\n        {props.surveyJson.tags.map(tag =>\r\n          <div className={classes.tag}>{tag}</div>\r\n        )}\r\n        <Typography style={{ marginLeft: \"auto\", marginRight: 5, marginBottom: 0 }} paragraph>Комментарии ({state.commentsCount})</Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: state.expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={state.expanded}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <CommentsComponent surveyJson={props.surveyJson}\r\n        expanded={state.expanded}\r\n        setCommentsLength={setCommentsLength}\r\n      />\r\n\r\n    </Card>\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PopupContext } from '../index'\r\n\r\n\r\nexport default function BaseSurveyComponent(props) {\r\n\r\n  const history = useHistory()\r\n  // const classes = useStyles()\r\n  const [state, setState] = React.useState({\r\n    helperText: \"Ответь сам, чтобы узнать мнения других\",\r\n    answered: props.surveyJson.answered\r\n  })\r\n  const img = props.surveyJson.image;\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n\r\n  const getStats = (e, processDataFunc) => {\r\n    fetch(`${properties.address}/getStats?surveyId=${props.surveyJson.id}`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          response.json().then(result => {\r\n            processDataFunc(e, result)\r\n            // setFetchedData(result)\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n\r\n  const handleSubmit = (e, submitOptions, validatingFunc, processDataFunc) => {\r\n    e.preventDefault()\r\n\r\n    if (!validatingFunc())\r\n      return\r\n\r\n    fetch(`${properties.address}/answerSurvey`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(submitOptions),\r\n        redirect: 'follow',\r\n        credentials: 'include'\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          // props.votedCallback()\r\n          console.log('base: answered')\r\n          setState({ ...state, answered: true })\r\n        }\r\n        else\r\n          props.History.push('/login')\r\n      }\r\n      )\r\n  }\r\n\r\n  const returnBody = e => {\r\n    let surveyBody\r\n    let params = { \"getStats\": getStats, \"Answered\": state.answered, \"handleSubmit\": handleSubmit, \"surveyJson\": props.surveyJson, \"HelperText\": state.helperText, \"History\": history }\r\n    switch (props.surveyJson.type) {\r\n      case \"Single\":\r\n        surveyBody = <SingleSurveyComponent props={params} />\r\n        break\r\n      case \"Multiple\":\r\n        surveyBody = <MultipleSurveyComponent props={params} />\r\n        break\r\n      case \"Rating\":\r\n        surveyBody = <RatingSurveyComponent props={params} />\r\n        // body = \"404\"\r\n        break\r\n      default:\r\n        surveyBody = <div>Ой, с этим опросом что-то не так</div>\r\n    }\r\n    console.log('setting answered to ' + state.answered)\r\n    let baseSurvey = <CardComponent\r\n      Answered={state.answered}\r\n      surveyJson={props.surveyJson}\r\n      LoggedInUserId={props.UserId}\r\n      LoggedInUsername={props.UserName}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={img === '' || img === null ? 0 : 4}>\r\n          <img alt=\"\" style={{ width: \"100%\", maxWidth: \"200px\" }} src={img}></img>\r\n        </Grid>\r\n        <Grid item xs={img === \"\" || img === null ? 12 : 8}>\r\n          {surveyBody}\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <img alt=\"\" style={{ width: \"100%\" }} src={this.state.img}></img>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n    </CardComponent >\r\n    return baseSurvey\r\n  }\r\n  return <>\r\n    {returnBody()}\r\n  </>\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TagsComponent from './TagsComponent.js';\r\nimport { properties } from '../Properties/Properties.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport MultipleSurveyComponent from \"./MultipleSurveyComponent\";\r\nimport SingleSurveyComponent from \"./SingleSurveyComponent\";\r\nimport RatingSurveyComponent from \"./RatingSurveyComponent\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CardComponent from \"./CardComponent\";\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n    // alignItems: 'center',\r\n  },\r\n  kinds: {\r\n    backgroundColor: \"#33a570\",\r\n  },\r\n  mainBox: {\r\n    backgroundColor: \"#33a570\",\r\n    padding: 10\r\n  },\r\n}))\r\nexport default function AddSurveyComponent(props) {\r\n  let history = useHistory();\r\n  const classes = useStyles()\r\n  const [surveyName, setSurveyName] = React.useState(\"\")\r\n  const [error, setError] = React.useState(false)\r\n  const [errors, setErrors] = React.useState({})\r\n  const [categories, setCategories] = React.useState([])\r\n  const [tags, setTags] = React.useState([])\r\n  const [selectedValue, setSelectedValue] = React.useState(\"None\")\r\n  const [state, setState] = React.useState({\r\n    options: new Set(),\r\n    rows: new Set(),\r\n    columns: new Set(),\r\n    type: 'Single',\r\n    body: null,\r\n    image: \"\"\r\n  })\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const handleTags = tags => {\r\n    setTags(tags)\r\n  }\r\n  React.useEffect(() => {\r\n    fetch(`${properties.address}/getCategories`,\r\n      {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(result => {\r\n        // let resultWithKeys = [...result]\r\n        // resultWithKeys = resultWithKeys.map(item => {return {...item, key: item.id}})\r\n        setCategories([{ name: \"None\", id: -1 }, ...result])\r\n        // setCategories([...result])\r\n      })\r\n  }, [])\r\n\r\n  const handleSelect = e => {\r\n    setSelectedValue(e.target.value)\r\n  }\r\n  const changeHandler = e => {\r\n    setSurveyName(e.target.value)\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (Object.keys(validateForm()).length === 0) {\r\n      let body = {\r\n        'question': surveyName,\r\n        'type': state.type,\r\n        'image': state.image,\r\n        'category': selectedValue,\r\n        'tags': tags\r\n      }\r\n      if (state.type === 'Rating') {\r\n        body = {\r\n          ...body,\r\n          'rows': [...state.rows],\r\n          'columns': [...state.columns],\r\n        }\r\n      }\r\n      else {\r\n        body = {\r\n          ...body,\r\n          'options': [...state.options]\r\n        }\r\n      }\r\n\r\n      fetch(`${properties.address}/addSurvey`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body),\r\n          redirect: 'follow',\r\n          credentials: 'include',\r\n        })\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(result => {\r\n          if (result){\r\n            setMessageFunc(\"Опрос создан :)\")\r\n            history.push(`${properties.repo}/new`)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleOnBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let opts = state.options\r\n      opts.add(event.target.value)\r\n      setState({ ...state, options: opts })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, index, name) => {\r\n    let opts = [...state[name]]\r\n    opts[index] = event.target.value\r\n    setState({ ...state, [name]: new Set(opts) })\r\n  }\r\n  const handleBlur = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      let set = state[event.target.name]\r\n      set.add(event.target.value)\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: set\r\n      })\r\n      event.target.value = \"\"\r\n    }\r\n  }\r\n  const handleDelete = (name, option) => {\r\n    let i = [...state[name]].indexOf(option)\r\n    let opts = [...state[name]]\r\n    opts.splice(i, 1)\r\n    setState({\r\n      ...state,\r\n      [name]: new Set(opts)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event, index, name) => {\r\n    let opts = [...state.options]\r\n    opts[index] = event.target.value\r\n    setState({\r\n      ...state,\r\n      options: new Set(opts)\r\n    })\r\n  }\r\n  const handleOnDelete = option => {\r\n    let i = [...state.options].indexOf(option)\r\n    let opts = [...state.options]\r\n    opts.splice(i, 1)\r\n    setState({ ...state, options: new Set(opts) })\r\n  }\r\n  const renderForm = (name, aim) => {\r\n    return <>\r\n      {Array.from(state[name]).map((row, index) =>\r\n        <Grid key={row} container alignItems=\"center\">\r\n          <Grid item xs={1}>\r\n            {index + 1}.\r\n              </Grid>\r\n          <Grid item xs={9}>\r\n            <TextField defaultValue={row} onBlur={(e) => handleChange(e, index, name)} />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={(e) => handleDelete(name, row)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <TextField name={name} placeholder={aim} onBlur={handleBlur} />\r\n    </>\r\n  }\r\n  const renderBody = e => {\r\n    switch (state.type) {\r\n      case 'Single':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <RadioButtonUncheckedIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <RadioButtonUncheckedIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Multiple':\r\n        return <>\r\n          {Array.from(state.options).map((option, index) =>\r\n            <Grid key={option} container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n              </Grid>\r\n              <Grid item>\r\n                {/* <TextField  value = {option} onChange = {(e) => handleOnChange(e, index)}/> */}\r\n                <TextField defaultValue={option} onBlur={(e) => handleOnChange(e, index)} />\r\n              </Grid>\r\n              <Grid item >\r\n                <IconButton onClick={() => handleOnDelete(option)} color=\"primary\" aria-label=\"\" component=\"span\">\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item >\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <CheckBoxOutlineBlankIcon color=\"disabled\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField placeholder=\"Добавить вариант\" onBlur={handleOnBlur} />\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Options}</FormHelperText>\r\n        </>\r\n      case 'Rating':\r\n        return <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"rows\", \"Добавить строку\")}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {renderForm(\"columns\", \"Добавить столбец\")}\r\n            </Grid>\r\n          </Grid>\r\n          <FormHelperText>{errors.Columns}</FormHelperText>\r\n          <FormHelperText>{errors.Rows}</FormHelperText>\r\n        </>\r\n      default:\r\n        return <div>Происходит что-то странное. Не знаешь что именно?</div>\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    let errors = {}\r\n    if (surveyName === '') {\r\n      errors.Name = 'Введите имя'\r\n    }\r\n    if (selectedValue === \"\" || selectedValue === undefined || selectedValue === \"None\") {\r\n      errors.Select = 'Выберите категорию'\r\n    }\r\n    switch (state.type) {\r\n      case 'Multiple':\r\n      case 'Single':\r\n        if (state.options.size < 2) {\r\n          errors.Options = 'Создайте более одного варианта'\r\n        }\r\n        break;\r\n      case 'Rating':\r\n        if (state.rows.size < 2) {\r\n          errors.Rows = 'Добавьте более одного рядка'\r\n        }\r\n        if (state.columns.size < 2) {\r\n          errors.Columns = 'Добавьте более одной колонки'\r\n        }\r\n        break;\r\n      default:\r\n        errors.Type = 'Тип опроса не определен'\r\n\r\n    }\r\n\r\n    setErrors(errors)\r\n    setError(Object.keys(errors).length > 0 ? true : false)\r\n    return errors\r\n  }\r\n  const handleClick = body_type => {\r\n    setState({ ...state, type: body_type })\r\n  }\r\n  const imageHandler = e => {\r\n    setState({ ...state, image: e.target.value })\r\n  }\r\n  return (<>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.kinds}>\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            placeholder=\"Новый опрос\"\r\n            onBlur={changeHandler}\r\n            // value={surveyName}\r\n            required\r\n            error={errors.Name == null ? false : true}\r\n          />\r\n\r\n          <Tooltip title=\"Единичный выбор\">\r\n            <IconButton onClick={() => handleClick('Single')} color={state.type === 'Single' ? 'primary' : 'default'}>\r\n              <ViewListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Множественный выбор\">\r\n            <IconButton onClick={() => handleClick('Multiple')} color={state.type === 'Multiple' ? 'primary' : 'default'}>\r\n              <FormatListBulletedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Рейтинговый выбор\">\r\n            <IconButton onClick={() => handleClick('Rating')} color={state.type === 'Rating' ? 'primary' : 'default'}>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} >\r\n            <Paper className={classes.mainBox}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  error={error}\r\n                >\r\n                  <FormHelperText>{errors.Name}</FormHelperText>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на изображение (не обязательно)\"\r\n                    onBlur={imageHandler}\r\n                    error={errors.img == null ? false : true}\r\n                  />\r\n                  <FormControl required  >\r\n                    <InputLabel htmlFor=\"age-native-required\">Категория</InputLabel>\r\n                    <Select\r\n                      value={selectedValue}\r\n                      onChange={handleSelect}\r\n                      name=\"category\"\r\n                    >\r\n                      {categories.map(c => <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {renderBody()}\r\n\r\n                  <FormHelperText>{errors.Select}</FormHelperText>\r\n\r\n                  <TagsComponent CallBack={handleTags}></TagsComponent>\r\n                  <br></br>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Добавить опрос</Button>\r\n                </FormControl>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <BaseSurveyComponent\r\n              surveyJson={{\r\n                type: state.type,\r\n                comments: [],\r\n                tags: [],\r\n                options: Array.from(state.options),\r\n                rows: Array.from(state.rows),\r\n                columns: Array.from(state.columns)\r\n              }} />\r\n            {/* <CardComponent\r\n              AnsweredAmount={0}\r\n              Voted={0}\r\n              ElementId={0}\r\n              Username={props.UserName}\r\n              Likes={0}\r\n              Answered={0}\r\n              Tags={tags}\r\n              Comments={[]}\r\n              UserId={props.UserId}\r\n              Date={\"now\"}\r\n              LoggedInUserId={props.UserId}\r\n              LoggedInUsername={props.UserName}\r\n            >\r\n              {state.type === \"single\" && <SingleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"multiple\" && <MultipleSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Options={Array.from(state.options)}\r\n                SurveyId={0} />\r\n                ||\r\n              state.type === \"rating\" && <RatingSurveyComponent\r\n                Image={state.image}\r\n                Voted={false}\r\n                Question={surveyName}\r\n                Rows={Array.from(state.rows)}\r\n                Columns={Array.from(state.columns)}\r\n                SurveyId={0} />}\r\n            </CardComponent> */}\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </>)\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function ConfirmRegistration(props){\r\n    let query = useQuery()\r\n    const [message, setMessage] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/regitrationConfirm?token=${query.get(\"token\")}`, \r\n        {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .then(response => {\r\n        if (response.status === 200){\r\n            setMessage(\"Регистрация прошла успешно. Используйте указанные пароль и логин для входа\")\r\n        }\r\n        else if (response.status === 404){\r\n            setMessage(\"Ошибка регистрации\")\r\n        }\r\n        })\r\n    }, [query])\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from \"react\";\r\nimport request from \"superagent\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { properties } from '../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport { PopupContext } from '../index'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const setMessageFunc = React.useContext(PopupContext)\r\n  const history = useHistory();\r\n  const ref = useRef(null)\r\n  const [state, setState] = React.useState({\r\n    error: props.Error,\r\n    hasMore: props.HasMore,\r\n    isLoading: props.IsLoading,\r\n    surveys: props.Surveys,\r\n    index: props.Index,\r\n    activeType: props.ActiveType\r\n  })\r\n  const onSurveyDeleteFunc = e => {\r\n    // alert('Удалено :)')\r\n  }\r\n  const load = (tag, type) => {\r\n    let url = props.Mode === 'Top' ? `${properties.address}/surveys-top?index=` : `${properties.address}/surveys?index=`\r\n\r\n    url += state.index\r\n    tag !== undefined ? url += \"&tag=\" + tag : url += \"&tag=\"\r\n    type !== undefined ? url += \"&type=\" + type : url += \"&type=\"\r\n\r\n    if (props.Mode)\r\n      request\r\n        .get(url)\r\n        .withCredentials()\r\n        .then((results) => {\r\n          const new_list = results.body.map(s =>\r\n            <BaseSurveyComponent surveyJson={s} onSurveyDeleteFunc={onSurveyDeleteFunc} />)\r\n          setState({\r\n            ...state,\r\n            hasMore: (state.surveys.length < 100) && results.body.length !== 0,\r\n            isLoading: false,\r\n            surveys: [\r\n              ...state.surveys,\r\n              ...new_list\r\n            ],\r\n            index: state.index + 1\r\n          })\r\n        })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    load(undefined, props.ActiveType)\r\n    if (props.SetReloadFunction) {\r\n      props.SetReloadFunction(load)\r\n    }\r\n  }, [])\r\n\r\n  window.onscroll = debounce(() => {\r\n    if (error || isLoading || !hasMore) return;\r\n    // Checks that the page has scrolled to the bottom\r\n    if (ref.current &&\r\n      window.innerHeight + document.documentElement.scrollTop\r\n      > ref.current.offsetTop + ref.current.clientHeight\r\n    ) {\r\n      setState({ ...state, isLoading: true })\r\n      load(undefined, props.ActiveType)\r\n    }\r\n  }, 300)\r\n\r\n  const {\r\n    error,\r\n    hasMore,\r\n    isLoading,\r\n  } = state;\r\n\r\n  return <>\r\n    <div ref={ref}>\r\n      {/* {props.Mode} */}\r\n      {state.surveys.map((survey, index) => (\r\n        <Fragment key={survey.props.ElementId}>\r\n          {survey}\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      <hr />\r\n      {error &&\r\n        <div style={{ color: '#900' }}>\r\n          {error}\r\n        </div>\r\n      }\r\n      {isLoading &&\r\n        <div>Loading...</div>\r\n      }\r\n      {!hasMore && <Typography>Вы сделали это! Вы дошли до конца, так держать!</Typography>}\r\n    </div>\r\n  </>\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PieChart, Pie, Cell} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n// const bar_data = [\r\n//   {\r\n//     name: 'Tom Cruise', value: 20,\r\n//   },\r\n//   {\r\n//     name: 'Will Smith', value: 80,\r\n//   },\r\n//   {\r\n//     name: 'Brad Pitt', value: 80,\r\n//   },\r\n// ];\r\n\r\n\r\n// const multiple_data = {\r\n//   votes: [\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'JustUser'\r\n//       },\r\n//       options: [\"Fish\", \"Meat\", \"Vegetables\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'female',\r\n//         age: 55,\r\n//         country: 'Ukraine',\r\n//         username: 'Sabrina'\r\n//       },\r\n//       options: [\"Fish\", \"Fruit\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 20,\r\n//         country: 'Ukraine',\r\n//         username: 'Frank'\r\n//       },\r\n//       options: [\"Meat\"]\r\n//     },\r\n//     {\r\n//       user: {\r\n//         sex: 'male',\r\n//         age: 45,\r\n//         country: 'Ukraine',\r\n//         username: 'Joshua'\r\n//       },\r\n//       options: [\"Meat\",\"Alcohol\"]\r\n//     },\r\n//   ]\r\n// }\r\n// const single_data = {\r\n//     votes: [\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 20,\r\n//                 country: 'Ukraine',\r\n//                 username: 'JustUser'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 23,\r\n//                 country: 'UK',\r\n//                 username: 'Drago777'\r\n//             },\r\n//             option: \"Will Smith\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 18,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 54,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 42,\r\n//                 country: 'Russia',\r\n//                 username: 'Rose'\r\n//             },\r\n//             option: \"Tom Cruise\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 33,\r\n//                 country: 'Russia',\r\n//                 username: 'Carol'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'female',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'Rachel'\r\n//             },\r\n//             option: \"Bred Pitt\"\r\n//         },\r\n//         {\r\n//             user: {\r\n//                 sex: 'male',\r\n//                 age: 32,\r\n//                 country: 'Russia',\r\n//                 username: 'John'\r\n//             },\r\n//             option: \"Chriss Pratt\"\r\n//         },\r\n//     ]\r\n// }\r\n\r\nconst rating_data = [\r\n  {\r\n      user: {\r\n          sex: 'male',\r\n          age: 32,\r\n          country: 'Russia',\r\n          username: 'John'\r\n      },\r\n      rowscolumns: [\r\n        \"Халк\",\r\n        \"Железяка\",\r\n        \"Молоток с Асгарда\",\r\n      ]\r\n    },\r\n    {\r\n        user: {\r\n            sex: 'male',\r\n            age: 32,\r\n            country: 'Russia',\r\n            username: 'John'\r\n        },\r\n        rowscolumns: [\r\n          \"Халк\",\r\n          \"Молоток с Асгарда\",\r\n          \"Железяка\",\r\n        ]\r\n      },\r\n      {\r\n          user: {\r\n              sex: 'male',\r\n              age: 32,\r\n              country: 'Russia',\r\n              username: 'John'\r\n          },\r\n          rowscolumns: [\r\n            \"Халк\",\r\n            \"Молоток с Асгарда\",\r\n            \"Железяка\",\r\n          ]\r\n        },\r\n        {\r\n            user: {\r\n                sex: 'male',\r\n                age: 32,\r\n                country: 'Russia',\r\n                username: 'John'\r\n            },\r\n            rowscolumns: [\r\n              \"Молоток с Асгарда\",\r\n              \"Железяка\",\r\n              \"Халк\",\r\n            ]\r\n          },\r\n          {\r\n              user: {\r\n                  sex: 'male',\r\n                  age: 32,\r\n                  country: 'Russia',\r\n                  username: 'John'\r\n              },\r\n              rowscolumns: [\r\n                \"Молоток с Асгарда\",\r\n                \"Железяка\",\r\n                \"Халк\",\r\n              ]\r\n            },\r\n            {\r\n                user: {\r\n                    sex: 'male',\r\n                    age: 32,\r\n                    country: 'Russia',\r\n                    username: 'John'\r\n                },\r\n                rowscolumns: [\r\n                  \"Молоток с Асгарда\",\r\n                  \"Халк\",\r\n                  \"Железяка\",\r\n                ]\r\n              },\r\n              {\r\n                  user: {\r\n                      sex: 'male',\r\n                      age: 32,\r\n                      country: 'Russia',\r\n                      username: 'John'\r\n                  },\r\n                  rowscolumns: [\r\n                    \"Молоток с Асгарда\",\r\n                    \"Халк\",\r\n                    \"Железяка\",\r\n                  ]\r\n                },\r\n                {\r\n                    user: {\r\n                        sex: 'male',\r\n                        age: 32,\r\n                        country: 'Russia',\r\n                        username: 'John'\r\n                    },\r\n                    rowscolumns: [\r\n                      \"Железяка\",\r\n                      \"Молоток с Асгарда\",\r\n                      \"Халк\",\r\n                    ]\r\n                  },\r\n                  {\r\n                      user: {\r\n                          sex: 'male',\r\n                          age: 32,\r\n                          country: 'Russia',\r\n                          username: 'John'\r\n                      },\r\n                      rowscolumns: [\r\n                        \"Железяка\",\r\n                        \"Молоток с Асгарда\",\r\n                        \"Халк\",\r\n                      ]\r\n                    },\r\n                    {\r\n                        user: {\r\n                            sex: 'male',\r\n                            age: 32,\r\n                            country: 'Russia',\r\n                            username: 'John'\r\n                        },\r\n                        rowscolumns: [\r\n                          \"Железяка\",\r\n                          \"Молоток с Асгарда\",\r\n                          \"Халк\",\r\n                        ]\r\n                      },\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 40,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //     \"Молоток с Асгарда\"\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 16,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Халк\",\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   user: {\r\n  //       sex: 'male',\r\n  //       age: 32,\r\n  //       country: 'Russia',\r\n  //       username: 'John'\r\n  //   },\r\n  //   rowscolumns: [\r\n  //     \"Молоток с Асгарда\",\r\n  //     \"Халк\",\r\n  //     \"Железяка\",\r\n  //   ]\r\n  // },\r\n]\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: 'Мужчины',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Женщины',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Все',\r\n  }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"75%\",\r\n        // paddingLeft: 100,\r\n        // paddingRight: 20,\r\n        marginLeft: 40\r\n    }\r\n});\r\n\r\nconst renderCustomizedLabel = (props) => {\r\n    \r\n    const {cx, cy, midAngle, innerRadius, outerRadius, percent, value} = props\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n    const option = props.name\r\n\r\n    return (<>\r\n    {value === 0 ? '' : \r\n    <>\r\n      <text x={x} y={y} fontSize = {14} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n      <text \r\n        x = {cx + (outerRadius + 30) * Math.cos(-midAngle * RADIAN)} \r\n        y = {cy + (outerRadius + 30) * Math.sin(-midAngle * RADIAN)}>\r\n        {option}\r\n      </text>\r\n      </>\r\n    }\r\n    </>);\r\n};\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n///////////////////////////////////////////////\r\n\r\nexport default function StatisticsComponent(props){\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([0,99]);\r\n    const [genderValue, setGenderValue] = React.useState(2);\r\n    const [fetchedData, setFetchedData] = React.useState([])\r\n    const [data, setData] = React.useState([])\r\n    const [barData, setBarData] = React.useState([])\r\n    const [ratingData, setRatingData] = React.useState([])\r\n    const [filteredDataLength, setFilteredDataLength] = React.useState(0)\r\n    const [legend, setLegend] = React.useState({})\r\n    \r\n    const [barOptions, setBarOptions] = React.useState([]) // For multiple survey\r\n\r\n    const renderLegend = (props) => {\r\n      const { payload } = props;\r\n    \r\n      return (\r\n        Object.keys(legend).map(key => \r\n          <text  style = {{textAlign: \"center\"}}>\r\n            <text style = {{fontWeight: \"bold\", color: \"steelblue\"}}>{key}</text> : \r\n            {/* {legend[key].map(item => <text style = {{fontStyle: \"italic\"}}> {item} </text>)} */}\r\n            <text style = {{fontStyle: \"italic\"}}> {legend[key].join(\" + \")} </text>\r\n          </text>\r\n        )\r\n      );\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   fetch(`${properties.address}/getStatistics?surveyId=${props.SurveyId}`, \r\n    //   {\r\n    //     method: 'GET',\r\n    //     redirect: 'follow',\r\n    //     credentials: 'include'\r\n    //   })\r\n    //   .then(response => {\r\n    //       if (response.status === 200){\r\n    //         response.json().then(result => {\r\n    //           setFetchedData(result)\r\n    //         })\r\n    //       }\r\n    //     }\r\n    //   )\r\n    // }, [props.SurveyId])\r\n\r\n    React.useEffect(() => {\r\n      if (fetchedData.length === 0)\r\n        return\r\n      // Filtering by gender and age\r\n      let gender = genderValue === 0 ? 'male' : genderValue === 1 ? 'female' : ''\r\n      let filtered_data = fetchedData.filter(elem => \r\n          (elem.user.age > value[0] && elem.user.age < value[1])\r\n          && ((gender !== '' && elem.user.sex === gender) || (gender === ''))\r\n      )\r\n      setFilteredDataLength(filtered_data.length)\r\n\r\n      // Setting data for Pie Chart (Single and Multiple)\r\n      let arr = []\r\n      switch (props.Type){\r\n        case \"Multiple\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.options.includes(option)).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        case \"Single\":\r\n          arr =  props.Options.map(option => {\r\n            return {\r\n              name: option,\r\n              value : filtered_data.filter(elem => elem.option === option).length\r\n            }\r\n          }).sort((a,b) => a.value - b.value)\r\n          break\r\n        default:\r\n      }\r\n      setData(arr)\r\n      \r\n      // Setting data for Bar Chart (Multiple)\r\n      if (props.Type === \"Multiple\"){\r\n        let bar_arr = props.Options.map(option => {\r\n          return {\r\n            name: option,\r\n            value: filtered_data.filter(elem => elem.options.includes(option)).length / filtered_data.length * 100\r\n          }\r\n        }).sort((a,b) => b.value - a.value)\r\n        setBarData(bar_arr)\r\n      }\r\n\r\n      // Setting data for Bar Chart (Rating)\r\n      if (props.Type === \"Rating\" && filtered_data.length !== 0){\r\n        let rating_arr = []\r\n\r\n        let accepted = []\r\n        let rows = [...props.Rows]\r\n        let index = 0\r\n        let max = 0\r\n        let max_arr = []\r\n        let bar = {}\r\n        let rating = {}\r\n\r\n        while (rows.length !== 0){\r\n          bar = {}\r\n          rows.forEach(row => {\r\n            bar[row] = filtered_data.filter(rd => rd.rowscolumns[index] === row).length / (filtered_data.length) * 100\r\n          })\r\n          let sum = Object.values(bar).reduce((a,b) => a + b, 0)\r\n          max = Math.max(...Object.values(bar))\r\n\r\n          max_arr = Object.keys(bar).filter(key => bar[key] === max)\r\n          accepted.push(...max_arr)\r\n          rating[props.Columns[index]] = [...max_arr]\r\n          let obj = {}\r\n          obj.name = props.Columns[index]\r\n          rows.forEach(elem => {\r\n            if (bar[elem] !== 0)\r\n              obj[elem] = bar[elem] / sum * 100\r\n          })\r\n          rating_arr.push(obj)\r\n\r\n          index++\r\n          rows = props.Rows.filter(row => !accepted.includes(row))\r\n        }\r\n        setLegend(rating)\r\n\r\n        setRatingData(rating_arr)\r\n      }\r\n\r\n    }, [fetchedData, value, genderValue])\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleGenderChange = (event, newValue) => {\r\n      setGenderValue(newValue)\r\n    }\r\n\r\n    return (<>\r\n    <Grid container>\r\n    <Grid container>\r\n        <Grid item xs = {7}>\r\n          <Typography color = 'primary'>\r\n            {filteredDataLength} голоса\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              Возраст\r\n            </Typography>\r\n            <Slider\r\n              value={value}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {99}\r\n            />\r\n            <Slider\r\n              value={genderValue}\r\n              onChange={handleGenderChange}\r\n              valueLabelDisplay=\"off\"\r\n              aria-labelledby=\"range-slider\"\r\n              max = {2}\r\n              marks = {marks}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs = {5}>\r\n          {(props.Type === \"Multiple\" || props.Type === \"Single\") && \r\n            <PieChart width={200} height={200}>\r\n            <Pie\r\n              data={data}\r\n              cx='50%'\r\n              cy='50%'\r\n              labelLine={true}\r\n              label={renderCustomizedLabel}\r\n              outerRadius={45}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {\r\n                data.map((entry, index) => \r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                )\r\n              }\r\n            </Pie>\r\n          </PieChart>}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs = {12} alignItems = 'center' justify = 'center'>\r\n            \r\n          {props.Type === \"Multiple\" && \r\n          <BarChart\r\n            width={400}\r\n            height={200}\r\n            data={barData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain = {[0, 100]} />\r\n            <Tooltip />\r\n            <Legend formatter = {() => `% проголосовавших за категорию`}/>\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n          </BarChart>}\r\n          {props.Type === \"Rating\" && \r\n          <>\r\n          <BarChart\r\n            width={500}\r\n            height={200}\r\n            data={ratingData}\r\n            margin={{\r\n              top: 0, right: 0, left: 0, bottom: 0,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend \r\n              content={renderLegend} \r\n              wrapperStyle = {{textAlign: \"center\"}}\r\n            />\r\n            {props.Rows.map((row,index) => \r\n              <Bar dataKey = {row} stackId=\"a\" fill={COLORS[index % COLORS.length]} />\r\n            )}\r\n          </BarChart>\r\n          </>}\r\n      </Grid>\r\n    </Grid>\r\n    </>)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { Link } from 'react-router-dom';\r\nimport { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}))\r\n\r\nexport default function ProfileComponent(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [surveyToDelete, setsurveyToDelete] = React.useState()\r\n    const [surveys, setSurveys] = React.useState([])\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const {UserId, Username} = props\r\n    \r\n    const handleDelete = e => {\r\n      fetch(`${properties.address}/deleteSurvey`, \r\n      {\r\n        method: 'DELETE', \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({surveyId: surveyToDelete.id}),\r\n        redirect: 'follow',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200){\r\n          setSurveys(surveys.filter(survey => survey !== surveyToDelete))\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleOpen = surveyToDelete => {\r\n      setsurveyToDelete(surveyToDelete)\r\n      setOpen(true);\r\n    }\r\n    React.useEffect(() => {\r\n      \r\n      if (UserId !== 0){\r\n          fetch(`${properties.address}/getProfileSurveys`, \r\n          {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n          })\r\n          .then(response => {\r\n            if (response.status === 200){\r\n              return response.json()\r\n            }\r\n          }).then(result => {\r\n            if (result){\r\n                setSurveys(result)\r\n            }\r\n          })\r\n        }\r\n    }, [UserId])\r\n        \r\n    return(<>\r\n      <Grid container>\r\n        <Grid item xs = {12}>\r\n          <Typography variant = \"h5\">\r\n            {Username}\r\n          </Typography>\r\n          <Typography variant = \"h6\">\r\n            Ваши опросы:\r\n          </Typography>\r\n          <List dense={true}>\r\n            {surveys.length === 0 && <CircularProgress />}\r\n            {surveys.length !== 0 && surveys.map(survey =>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    {survey.image &&<img src = {survey.image} style = {{maxWidth: \"50px\"}}></img>}\r\n                    {!survey.image && <CropOriginalIcon></CropOriginalIcon>}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <Link  style={{ textDecoration: 'none', width: \"100%\"}} to = {`${properties.repo}/survey/${survey.id}`}>\r\n                  <ListItemText\r\n                    primary={survey.question}\r\n                    secondary={survey.answered_amount + \" проголосовавших\"}\r\n                  />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick = {e => {handleOpen(survey)}}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>{\"Вы действительно хотите удалить этот опрос?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Удаляя этот опрос вы также лишаете других пользователей возможности голосовать и просматривать его статистику, которая может быть значимой для других.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отменить\r\n          </Button>\r\n          <Button onClick={e => {handleClose(); handleDelete()}} color=\"primary\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>)\r\n}","import React from 'react'\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    ZoomableGroup,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function MapChart(props) {\r\n    const [content, setContent] = React.useState(\"\");\r\n    const [markers, setMarkers] = React.useState(props.markers)\r\n    const geoUrl =\r\n        \"https://raw.githubusercontent.com/mtraynham/natural-earth-topo/master/topojson/ne_110m_admin_0_countries.json\"\r\n\r\n    return (<>\r\n        <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"   height=\"300\"\r\n            projectionConfig={{\r\n                // rotate: [-20.0, -52.0, 0],\r\n                // scale: 1000\r\n            }}>\r\n            <ZoomableGroup zoom={3} center={[50, 50]}>\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                            <Geography\r\n                                onMouseEnter={() => {\r\n                                    const { name } = geo.properties;\r\n                                    setContent(`${name}`);\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    setContent(\"\");\r\n                                }}\r\n                                style={{\r\n                                    default: {\r\n                                        fill: \"#D6D6DA\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    hover: {\r\n                                        fill: \"#F53\",\r\n                                        outline: \"none\"\r\n                                    },\r\n                                    pressed: {\r\n                                        fill: \"#E42\",\r\n                                        outline: \"none\"\r\n                                    }\r\n                                }}\r\n                                key={geo.rsmKey}\r\n                                geography={geo}\r\n                                fill=\"#DDD\"\r\n                                stroke=\"#FFF\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </Geographies>\r\n                {props.markers && props.markers.map(marker =>\r\n                    <Marker coordinates={[marker.lo, marker.la]}>\r\n                        <circle r={2} fill=\"#F53\" />\r\n                    </Marker>\r\n                )}\r\n            </ZoomableGroup>\r\n        </ComposableMap>\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n    </>)\r\n}","import React from 'react'\r\nimport { properties } from '../../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\"\r\nimport CategoriesComponent from \"../CategoriesComponent\"\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport MapChart from '../MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PopupContext } from '../../index'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function RandomComponent(props) {\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    const getRandom = e => {\r\n        console.log('getting random ')\r\n        fetch(`${properties.address}/getRandom${window.location.search}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                setState({ ...state, survey: result, isLoading: false })\r\n                if (result == null)\r\n                    setMessageFunc(\"Ничего не найдено :(\")\r\n            })\r\n    }\r\n    const onSurveyDeleteFunc = e => {\r\n        setState({ ...state, isLoading: true });\r\n        getRandom()\r\n    }\r\n    React.useEffect(() => {\r\n        setState({ ...state, isLoading: true });\r\n        getRandom()\r\n    }, [props.location.search])\r\n    return (\r\n        <>\r\n            <Grid item sm={9} style = {{margin: \"auto\"}}>\r\n                {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} onSurveyDeleteFunc={onSurveyDeleteFunc} />}\r\n                <button title={\"Дизайн современных кнопок - обращаться по адресу languageblog96@gmail.com\"} onClick={() => { setState({ ...state, isLoading: true }); getRandom() }}>press me</button>\r\n\r\n                <MapChart markers={state.survey != null && !state.isLoading && state.survey.locations} />\r\n            </Grid>\r\n        </>)\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { properties } from '../../Properties/Properties.js';\r\nimport BaseSurveyComponent from \"../BaseSurveyComponent\";\r\nimport MapChart from '../MapChart.js'\r\nimport { PopupContext } from '../../index'\r\nimport CommentsComponent from \"../CommentsComponent\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n    const { id: surveyId } = useParams()\r\n    const [survey, setSurvey] = React.useState()\r\n    const setMessageFunc = React.useContext(PopupContext)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${surveyId}`,\r\n            {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => {\r\n                if (result)\r\n                    setSurvey(result)\r\n            })\r\n    }, [])\r\n    const onSurveyDeleteFunc = e => {\r\n        history.push(`${properties.repo}/profile`)\r\n    }\r\n    return <>\r\n        {!survey && <CircularProgress />}\r\n        {survey && <BaseSurveyComponent surveyJson={survey} onSurveyDeleteFunc = {onSurveyDeleteFunc} />}\r\n\r\n        <div style={{ width: \"500px\", height: \"200px\", border: \"1px solid black\" }}>\r\n            <MapChart markers={survey && survey.locations} />\r\n        </div>\r\n        {/* <CommentsComponent /> */}\r\n    </>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nexport default function NewsPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n    console.log(\"importing...\")\r\n    const markdownFiles = importAll(require.context('../../news', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const renderers = {\r\n        overrides: {\r\n            p: { component: Typography, props: { paragraph: true } },\r\n            li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n            h4: { component: Typography, props: { variant: \"h6\" } }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n\r\n                        <ReactMarkdown options={renderers}>\r\n\r\n                            {\r\n                                // <Typography> post </Typography>\r\n                                post\r\n                            }\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { properties } from '../Properties/Properties.js'\r\nimport BaseSurveyComponent from \"./BaseSurveyComponent\"\r\nimport CategoriesComponent from \"./CategoriesComponent\"\r\nimport MainMenuComponent from \"./MainMenuComponent\"\r\nimport MapChart from './MapChart.js'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SeparateSurveyComponent(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        isLoading: true,\r\n        survey: {}\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${properties.address}/survey?id=${props.SurveyId}`, { method: 'GET', credentials: 'include' })\r\n            .then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n            })\r\n            .then(result => setState({ ...state, survey: result, isLoading: false }))\r\n    }, [])\r\n    return <>\r\n        {state.survey != null && !state.isLoading && <BaseSurveyComponent surveyJson={state.survey} />}</>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function AboutPageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../about', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport MainMenuComponent from \"../MainMenuComponent\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SeparateSurveyComponent from \"../SeparateSurveyComponent\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    markdown: {\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n}));\r\nconst renderers = {\r\n    overrides: {\r\n        p: { component: Typography, props: { paragraph: true } },\r\n        li: { component: Typography, props: { variant: \"subtitle1\", component: \"li\" } },\r\n        h4: { component: Typography, props: { variant: \"h6\" } },\r\n        SeparateSurveyComponent: { component: SeparateSurveyComponent }\r\n    }\r\n}\r\nexport default function DonatePageComponent(props) {\r\n    const classes = useStyles();\r\n    const [posts, setPosts] = useState([])\r\n    const importAll = r => r.keys().map(r);\r\n\r\n    const markdownFiles = importAll(require.context('../../donate', false, /\\.md$/))\r\n        .sort()\r\n        .reverse()\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const posts = await Promise.all(markdownFiles.map((file) => fetch(file).then((res) => res.text())))\r\n                .catch((err) => console.error(err))\r\n            setPosts(posts)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                {posts.map((post, idx) => (\r\n                    <>\r\n                        <ReactMarkdown options={renderers}>\r\n                            {post}\r\n                        </ReactMarkdown>\r\n                        <hr style={{ borderTop: \"1px dotted black\", backgroundColor: \"transparent\", height: \"1px\" }} />\r\n                    </>))}\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popup: {\r\n        width: \"200px\",\r\n        zIndex: \"1\",\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        padding: \"10px\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        backgroundColor: theme.palette.info.main\r\n    }\r\n}))\r\n\r\nexport default function PopupComponent(props) {\r\n    const [hidden, setHidden] = React.useState(true)\r\n    const classes = useStyles()\r\n\r\n    return <>\r\n        <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n            <Card className={classes.popup} color = \"\">\r\n                {props.message}\r\n            </Card>\r\n        </Slide >\r\n    </>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport TabsComponent from './Components/TabsComponent'\r\nimport CategoriesComponent from './Components/CategoriesComponent'\r\nimport MainMenuComponent from './Components/MainMenuComponent'\r\nimport HeaderComponent from './Components/HeaderComponent'\r\nimport LoginComponent from './Components/LoginComponent'\r\nimport SignUpComponent from './Components/SignUpComponent'\r\nimport AddSurveyComponent from './Components/AddSurveyComponent'\r\nimport ConfirmRegistration from './Components/ConfirmRegistration'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport InfiniteScroll from './Components/InfiniteScroll'\r\nimport StatisticsComponent from './Components/StatisticsComponent'\r\nimport ProfileComponent from \"./Components/ProfileComponent\";\r\nimport { properties } from './Properties/Properties.js';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RandomPageComponent from \"./Components/Pages/RandomPageComponent\";\r\nimport SurveyPageComponent from \"./Components/Pages/SurveyPageComponent\";\r\nimport NewsPageComponent from \"./Components/Pages/NewsPageComponent\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport AboutPageComponent from \"./Components/Pages/AboutPageComponent\";\r\nimport DonatePageComponent from \"./Components/Pages/DonatePageComponent\";\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport PopupComponent from \"./Components/PopupComponent\"\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/home\">\r\n        runningwilder.github.io/SurveyIt\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport const UserContext = React.createContext({})\r\nexport const PopupContext = React.createContext(\"help me\")\r\nexport const LoginContext = React.createContext(() => { })\r\nfunction App() {\r\n  const [message, setMessage] = React.useState(\"\")\r\n  const [hidden, setHidden] = React.useState(true)\r\n  const [state, setState] = React.useState({\r\n    loggedIn: false,\r\n    username: \"\",\r\n    userId: 0,\r\n    reload: () => { },\r\n    activeType: \"\",\r\n    activeTag: \"\"\r\n  })\r\n\r\n  // This function executes when categoriesComponent is triggered. It fetches new data\r\n  // depending on categories and sets Type of surveys filter to default (empty string \"\")\r\n  // thus updating child TabsComponent and erasing filters\r\n  const customFunc = (tag, type) => {\r\n    // console.log('reloading...' + \"tag = \" + tag + \" type = \" + type)\r\n    setState({ ...state, activeType: type })\r\n    setTimeout(() => { state.reload && state.reload(tag, type) }, 1000)\r\n  }\r\n\r\n  const handler = load => {\r\n    // console.log('setting reload to ' + load)\r\n    setState({ ...state, reload: load })\r\n  }\r\n  const [userInfo, setUserInfo] = React.useState({\r\n    username: null,\r\n    userId: null,\r\n    loggedIn: null\r\n  })\r\n  const checkLoginStatus = () => {\r\n    console.log(\"checking auth\")\r\n    fetch(`${properties.address}/logged_in`,\r\n      {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200 && !state.loggedIn) {\r\n          return response.json()\r\n        }\r\n        else {\r\n          setUserInfo({\r\n            ...userInfo,\r\n            username: null,\r\n            userId: null,\r\n            loggedIn: false\r\n          })\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result) {\r\n          console.log(result)\r\n          setUserInfo({\r\n            ...userInfo,\r\n            username: result.username,\r\n            userId: result.user_id,\r\n            loggedIn: true\r\n          })\r\n        }\r\n\r\n      })\r\n  }\r\n  React.useEffect(() => {\r\n    checkLoginStatus()\r\n  }, [])\r\n\r\n  const history = createBrowserHistory()\r\n  let value = history.location.pathname === \"/new\" || history.location.pathname === \"/home\" ? 1 : 0\r\n\r\n  const setMessageFunc = msg => {\r\n    setMessage(msg)\r\n    setHidden(false)\r\n    setTimeout(() => {\r\n      setHidden(true)\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <LoginContext.Provider value={checkLoginStatus}>\r\n      <UserContext.Provider value={userInfo}>\r\n        <PopupContext.Provider value={setMessageFunc}>\r\n\r\n          <Router>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={9} >\r\n                <Box>\r\n                  <Fade in={!hidden} timeout={500}>\r\n                    <div>\r\n                      <PopupComponent message={message} />\r\n                    </div>\r\n                  </Fade>\r\n                  <Route exact={true} path={[`${properties.repo}/`, `${properties.repo}/new`, `${properties.repo}/home`, `${properties.repo}/top`]}>\r\n                    <Box style={{ paddingLeft: \"20px\", paddingRight: \"20px\", paddingTop: \"20px\" }}>\r\n                      <TabsComponent DefaultType={state.activeType} Load={customFunc} Value={value}>\r\n                        <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"Top\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                        <InfiniteScroll ActiveType={state.activeType} UserName={state.username} UserId={state.userId} SetReloadFunction={handler} Mode=\"New\" Surveys={[]} Error={false} HasMore={true} IsLoading={false} Index={0} />\r\n                      </TabsComponent>\r\n                    </Box>\r\n                  </Route>\r\n                  <Route path={`${properties.repo}/random`} render = {props => <RandomPageComponent {...props}/>} />\r\n                  {/* <Route path={`${properties.repo}/random:tag?`}><RandomPageComponent /></Route> */}\r\n                  <Route path={`${properties.repo}/login`}><LoginComponent handleLoggedIn={checkLoginStatus} /></Route>\r\n                  <Route path={`${properties.repo}/createSurvey`}><AddSurveyComponent /></Route>\r\n                  <Route path={`${properties.repo}/profile`}><ProfileComponent /></Route>\r\n                  <Route path={`${properties.repo}/register`}><SignUpComponent /></Route>\r\n                  <Route path={`${properties.repo}/registrationConfirm`}><ConfirmRegistration /></Route>\r\n                  <Route path={`${properties.repo}/survey/:id`}><SurveyPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/news`}><NewsPageComponent /></Route>\r\n                  <Route path={`${properties.repo}/donate`}> <DonatePageComponent /> {/* <SendFeedbackComponent /> */} </Route>\r\n                  <Route path={`${properties.repo}/about`}><AboutPageComponent /></Route>\r\n                  {/* <Route path={`${properties.repo}/signout`}>{ history.push(`${properties.repo}/`)} </Route> */}\r\n                  <Route path={`${properties.repo}/signout`}><Redirect to={`${properties.repo}/`} /></Route>\r\n                  <Copyright />\r\n                </Box>\r\n              </Grid>\r\n            {/* </Grid> */}\r\n            <Grid item sm={3} style={{ paddingRight: \"10px\" }}>\r\n              <Hidden only=\"xs\">\r\n                <Box style={{ position: \"sticky\", top: \"0\" }}>\r\n                  <CategoriesComponent LoggedIn={state.loggedIn} Load={customFunc}></CategoriesComponent>\r\n                </Box>\r\n                <MainMenuComponent />\r\n              </Hidden>\r\n            </Grid>\r\n          </Grid>\r\n          </Router>\r\n        </PopupContext.Provider>\r\n      </UserContext.Provider>\r\n    </LoginContext.Provider >\r\n  );\r\n}\r\n\r\nconst christmasTheme = createMuiTheme({\r\n\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          // backgroundColor: grey[800],\r\n          background: \"linear-gradient(21deg, rgba(54,54,61,0.8132440476190477) 0%, rgba(95,154,164,0.7740283613445378) 100%)\"\r\n        },\r\n        \"&$selected:hover\": {\r\n          backgroundColor: grey[700],\r\n        },\r\n      },\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#ccced8\"\r\n    },\r\n    secondary: {\r\n      main: \"#3d608c\"\r\n    },\r\n    info: {\r\n      main: \"#54c0ef8c\"\r\n    }\r\n    // type: \"dark\"\r\n  },\r\n  typography: {\r\n    fontSize: 13,\r\n    // fontFamily: \"Palatino Linotype, Book Antiqua, serif\",\r\n    // fontFamily: \"Lucida Sans Unicode, Lucida Grande, serif\"\r\n    // fontFamily: \"Lucida Console, Monaco, monospace\"\r\n    fontFamily: \"Comic Sans MS, cursive, sans-serif\"\r\n  }\r\n});\r\n\r\nReactDOM.render(<ThemeProvider theme={christmasTheme}><App /></ThemeProvider>,\r\n  document.getElementById(\"root\"));"],"sourceRoot":""}